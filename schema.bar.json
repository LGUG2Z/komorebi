{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "KomobarConfig",
  "description": "The `komorebi.bar.json` configuration file reference for `v0.1.37`",
  "type": "object",
  "required": [
    "left_widgets",
    "monitor",
    "right_widgets"
  ],
  "properties": {
    "center_widgets": {
      "description": "Center widgets (ordered left-to-right)",
      "type": "array",
      "items": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Applications"
            ],
            "properties": {
              "Applications": {
                "type": "object",
                "required": [
                  "enable",
                  "items"
                ],
                "properties": {
                  "display": {
                    "description": "Default display format for all applications (optional). Could be overridden per application. Defaults to `Icon`.",
                    "oneOf": [
                      {
                        "description": "Show only the application icon.",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show only the application name as text.",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show both the application icon and name.",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  },
                  "enable": {
                    "description": "Enables or disables the applications widget.",
                    "type": "boolean"
                  },
                  "items": {
                    "description": "List of configured applications to display.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "command",
                        "name"
                      ],
                      "properties": {
                        "command": {
                          "description": "Command to execute (e.g. path to the application or shell command).",
                          "type": "string"
                        },
                        "display": {
                          "description": "Display format for this application button (optional). Overrides global format if set.",
                          "oneOf": [
                            {
                              "description": "Show only the application icon.",
                              "type": "string",
                              "enum": [
                                "Icon"
                              ]
                            },
                            {
                              "description": "Show only the application name as text.",
                              "type": "string",
                              "enum": [
                                "Text"
                              ]
                            },
                            {
                              "description": "Show both the application icon and name.",
                              "type": "string",
                              "enum": [
                                "IconAndText"
                              ]
                            }
                          ]
                        },
                        "enable": {
                          "description": "Whether to enable this application button (optional). Inherits from the global `Applications` setting if omitted.",
                          "type": "boolean"
                        },
                        "icon": {
                          "description": "Optional icon: a path to an image or a text-based glyph (e.g., from Nerd Fonts). If not set, and if the `command` is a path to an executable, an icon might be extracted from it. Note: glyphs require a compatible `font_family`.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Display name of the application.",
                          "type": "string"
                        },
                        "show_command_on_hover": {
                          "description": "Whether to show the launch command on hover (optional). Inherits from the global `Applications` setting if omitted.",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "show_command_on_hover": {
                    "description": "Whether to show the launch command on hover (optional). Could be overridden per application. Defaults to `false` if not set.",
                    "type": "boolean"
                  },
                  "spacing": {
                    "description": "Horizontal spacing between application buttons.",
                    "type": "number",
                    "format": "float"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Battery"
            ],
            "properties": {
              "Battery": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "auto_select_under": {
                    "description": "Select when the current percentage is under this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Battery widget",
                    "type": "boolean"
                  },
                  "hide_on_full_charge": {
                    "description": "Hide the widget if the battery is at full charge",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Cpu"
            ],
            "properties": {
              "Cpu": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "auto_select_over": {
                    "description": "Select when the current percentage is over this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Cpu widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Date"
            ],
            "properties": {
              "Date": {
                "type": "object",
                "required": [
                  "enable",
                  "format"
                ],
                "properties": {
                  "enable": {
                    "description": "Enable the Date widget",
                    "type": "boolean"
                  },
                  "format": {
                    "description": "Set the Date format",
                    "oneOf": [
                      {
                        "description": "Month/Date/Year format (09/08/24)",
                        "type": "string",
                        "enum": [
                          "MonthDateYear"
                        ]
                      },
                      {
                        "description": "Year-Month-Date format (2024-09-08)",
                        "type": "string",
                        "enum": [
                          "YearMonthDate"
                        ]
                      },
                      {
                        "description": "Date-Month-Year format (8-Sep-2024)",
                        "type": "string",
                        "enum": [
                          "DateMonthYear"
                        ]
                      },
                      {
                        "description": "Day Date Month Year format (8 September 2024)",
                        "type": "string",
                        "enum": [
                          "DayDateMonthYear"
                        ]
                      },
                      {
                        "description": "Custom format (https://docs.rs/chrono/latest/chrono/format/strftime/index.html)",
                        "type": "object",
                        "required": [
                          "Custom"
                        ],
                        "properties": {
                          "Custom": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "description": "Custom format with modifiers",
                        "type": "object",
                        "required": [
                          "CustomModifiers"
                        ],
                        "properties": {
                          "CustomModifiers": {
                            "description": "Custom format with additive modifiers for integer format specifiers",
                            "type": "object",
                            "required": [
                              "format",
                              "modifiers"
                            ],
                            "properties": {
                              "format": {
                                "description": "Custom format (https://docs.rs/chrono/latest/chrono/format/strftime/index.html)",
                                "type": "string"
                              },
                              "modifiers": {
                                "description": "Additive modifiers for integer format specifiers (e.g. { \"%U\": 1 } to increment the zero-indexed week number by 1)",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    ]
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  },
                  "timezone": {
                    "description": "TimeZone (https://docs.rs/chrono-tz/latest/chrono_tz/enum.Tz.html)\n\nUse a custom format to display additional information, i.e.: ```json { \"Date\": { \"enable\": true, \"format\": { \"Custom\": \"%D %Z (Tokyo)\" }, \"timezone\": \"Asia/Tokyo\" } } ```",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Keyboard"
            ],
            "properties": {
              "Keyboard": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 1 second)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Input widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Komorebi"
            ],
            "properties": {
              "Komorebi": {
                "type": "object",
                "properties": {
                  "configuration_switcher": {
                    "description": "Configure the Configuration Switcher widget",
                    "type": "object",
                    "required": [
                      "configurations",
                      "enable"
                    ],
                    "properties": {
                      "configurations": {
                        "description": "A map of display friendly name => path to configuration.json",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "enable": {
                        "description": "Enable the Komorebi Configurations widget",
                        "type": "boolean"
                      }
                    }
                  },
                  "focused_container": {
                    "description": "Configure the Focused Container widget",
                    "type": "object",
                    "required": [
                      "enable"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the currently focused container",
                        "oneOf": [
                          {
                            "description": "Show only icon",
                            "type": "string",
                            "enum": [
                              "Icon"
                            ]
                          },
                          {
                            "description": "Show only text",
                            "type": "string",
                            "enum": [
                              "Text"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and text on the rest",
                            "type": "string",
                            "enum": [
                              "TextAndIconOnSelected"
                            ]
                          },
                          {
                            "description": "Show both icon and text",
                            "type": "string",
                            "enum": [
                              "IconAndText"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and icons on the rest",
                            "type": "string",
                            "enum": [
                              "IconAndTextOnSelected"
                            ]
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Focused Container widget",
                        "type": "boolean"
                      },
                      "show_icon": {
                        "description": "DEPRECATED: use 'display' instead (Show the icon of the currently focused container)",
                        "type": "boolean"
                      }
                    }
                  },
                  "layout": {
                    "description": "Configure the Layout widget",
                    "type": "object",
                    "required": [
                      "enable"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the current layout",
                        "oneOf": [
                          {
                            "description": "Show only icon",
                            "type": "string",
                            "enum": [
                              "Icon"
                            ]
                          },
                          {
                            "description": "Show only text",
                            "type": "string",
                            "enum": [
                              "Text"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and text on the rest",
                            "type": "string",
                            "enum": [
                              "TextAndIconOnSelected"
                            ]
                          },
                          {
                            "description": "Show both icon and text",
                            "type": "string",
                            "enum": [
                              "IconAndText"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and icons on the rest",
                            "type": "string",
                            "enum": [
                              "IconAndTextOnSelected"
                            ]
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Layout widget",
                        "type": "boolean"
                      },
                      "options": {
                        "description": "List of layout options",
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "BSP",
                                "Columns",
                                "Rows",
                                "VerticalStack",
                                "HorizontalStack",
                                "UltrawideVerticalStack",
                                "Grid",
                                "RightMainVerticalStack"
                              ]
                            },
                            {
                              "type": "null"
                            },
                            {
                              "type": "null"
                            },
                            {
                              "type": "null"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "locked_container": {
                    "description": "Configure the Locked Container widget",
                    "type": "object",
                    "required": [
                      "enable"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the current locked state",
                        "oneOf": [
                          {
                            "description": "Show only icon",
                            "type": "string",
                            "enum": [
                              "Icon"
                            ]
                          },
                          {
                            "description": "Show only text",
                            "type": "string",
                            "enum": [
                              "Text"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and text on the rest",
                            "type": "string",
                            "enum": [
                              "TextAndIconOnSelected"
                            ]
                          },
                          {
                            "description": "Show both icon and text",
                            "type": "string",
                            "enum": [
                              "IconAndText"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and icons on the rest",
                            "type": "string",
                            "enum": [
                              "IconAndTextOnSelected"
                            ]
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Locked Container widget",
                        "type": "boolean"
                      },
                      "show_when_unlocked": {
                        "description": "Show the widget event if the layer is unlocked",
                        "type": "boolean"
                      }
                    }
                  },
                  "workspace_layer": {
                    "description": "Configure the Workspace Layer widget",
                    "type": "object",
                    "required": [
                      "enable"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the current layer",
                        "oneOf": [
                          {
                            "description": "Show only icon",
                            "type": "string",
                            "enum": [
                              "Icon"
                            ]
                          },
                          {
                            "description": "Show only text",
                            "type": "string",
                            "enum": [
                              "Text"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and text on the rest",
                            "type": "string",
                            "enum": [
                              "TextAndIconOnSelected"
                            ]
                          },
                          {
                            "description": "Show both icon and text",
                            "type": "string",
                            "enum": [
                              "IconAndText"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and icons on the rest",
                            "type": "string",
                            "enum": [
                              "IconAndTextOnSelected"
                            ]
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Workspace Layer widget",
                        "type": "boolean"
                      },
                      "show_when_tiling": {
                        "description": "Show the widget event if the layer is Tiling",
                        "type": "boolean"
                      }
                    }
                  },
                  "workspaces": {
                    "description": "Configure the Workspaces widget",
                    "type": "object",
                    "required": [
                      "enable",
                      "hide_empty_workspaces"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the workspace",
                        "oneOf": [
                          {
                            "description": "Show all icons only",
                            "type": "string",
                            "enum": [
                              "AllIcons"
                            ]
                          },
                          {
                            "description": "Show both all icons and text",
                            "type": "string",
                            "enum": [
                              "AllIconsAndText"
                            ]
                          },
                          {
                            "description": "Show all icons and text for the selected element, and all icons on the rest",
                            "type": "string",
                            "enum": [
                              "AllIconsAndTextOnSelected"
                            ]
                          },
                          {
                            "type": "object",
                            "required": [
                              "Existing"
                            ],
                            "properties": {
                              "Existing": {
                                "oneOf": [
                                  {
                                    "description": "Show only icon",
                                    "type": "string",
                                    "enum": [
                                      "Icon"
                                    ]
                                  },
                                  {
                                    "description": "Show only text",
                                    "type": "string",
                                    "enum": [
                                      "Text"
                                    ]
                                  },
                                  {
                                    "description": "Show an icon and text for the selected element, and text on the rest",
                                    "type": "string",
                                    "enum": [
                                      "TextAndIconOnSelected"
                                    ]
                                  },
                                  {
                                    "description": "Show both icon and text",
                                    "type": "string",
                                    "enum": [
                                      "IconAndText"
                                    ]
                                  },
                                  {
                                    "description": "Show an icon and text for the selected element, and icons on the rest",
                                    "type": "string",
                                    "enum": [
                                      "IconAndTextOnSelected"
                                    ]
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Workspaces widget",
                        "type": "boolean"
                      },
                      "hide_empty_workspaces": {
                        "description": "Hide workspaces without any windows",
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Media"
            ],
            "properties": {
              "Media": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "enable": {
                    "description": "Enable the Media widget",
                    "type": "boolean"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Memory"
            ],
            "properties": {
              "Memory": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "auto_select_over": {
                    "description": "Select when the current percentage is over this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Memory widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Network"
            ],
            "properties": {
              "Network": {
                "type": "object",
                "required": [
                  "enable",
                  "show_activity",
                  "show_total_activity"
                ],
                "properties": {
                  "activity_left_padding": {
                    "description": "Characters to reserve for received and transmitted activity",
                    "type": "integer",
                    "format": "uint",
                    "minimum": 0.0
                  },
                  "auto_select": {
                    "description": "Select when the value is over a limit (1MiB is 1048576 bytes (1024*1024))",
                    "type": "object",
                    "properties": {
                      "received_over": {
                        "description": "Select the received data when it's over this value",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                      },
                      "total_received_over": {
                        "description": "Select the total received data when it's over this value",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                      },
                      "total_transmitted_over": {
                        "description": "Select the total transmitted data when it's over this value",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                      },
                      "transmitted_over": {
                        "description": "Select the transmitted data when it's over this value",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                      }
                    }
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Network widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  },
                  "show_activity": {
                    "description": "Show received and transmitted activity",
                    "type": "boolean"
                  },
                  "show_default_interface": {
                    "description": "Show default interface",
                    "type": "boolean"
                  },
                  "show_total_activity": {
                    "description": "Show total received and transmitted activity",
                    "type": "boolean"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Storage"
            ],
            "properties": {
              "Storage": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "auto_hide_under": {
                    "description": "Hide when the current percentage is under this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "auto_select_over": {
                    "description": "Select when the current percentage is over this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Storage widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Time"
            ],
            "properties": {
              "Time": {
                "type": "object",
                "required": [
                  "enable",
                  "format"
                ],
                "properties": {
                  "changing_icon": {
                    "description": "Change the icon depending on the time. The default icon is used between 8:30 and 12:00. (default: false)",
                    "type": "boolean"
                  },
                  "enable": {
                    "description": "Enable the Time widget",
                    "type": "boolean"
                  },
                  "format": {
                    "description": "Set the Time format",
                    "oneOf": [
                      {
                        "description": "Twelve-hour format (with seconds)",
                        "type": "string",
                        "enum": [
                          "TwelveHour"
                        ]
                      },
                      {
                        "description": "Twelve-hour format (without seconds)",
                        "type": "string",
                        "enum": [
                          "TwelveHourWithoutSeconds"
                        ]
                      },
                      {
                        "description": "Twenty-four-hour format (with seconds)",
                        "type": "string",
                        "enum": [
                          "TwentyFourHour"
                        ]
                      },
                      {
                        "description": "Twenty-four-hour format (without seconds)",
                        "type": "string",
                        "enum": [
                          "TwentyFourHourWithoutSeconds"
                        ]
                      },
                      {
                        "description": "Twenty-four-hour format displayed as a binary clock with circles (with seconds) (https://en.wikipedia.org/wiki/Binary_clock)",
                        "type": "string",
                        "enum": [
                          "BinaryCircle"
                        ]
                      },
                      {
                        "description": "Twenty-four-hour format displayed as a binary clock with rectangles (with seconds) (https://en.wikipedia.org/wiki/Binary_clock)",
                        "type": "string",
                        "enum": [
                          "BinaryRectangle"
                        ]
                      },
                      {
                        "description": "Custom format (https://docs.rs/chrono/latest/chrono/format/strftime/index.html)",
                        "type": "object",
                        "required": [
                          "Custom"
                        ],
                        "properties": {
                          "Custom": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    ]
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  },
                  "timezone": {
                    "description": "TimeZone (https://docs.rs/chrono-tz/latest/chrono_tz/enum.Tz.html)\n\nUse a custom format to display additional information, i.e.: ```json { \"Time\": { \"enable\": true, \"format\": { \"Custom\": \"%T %Z (Tokyo)\" }, \"timezone\": \"Asia/Tokyo\" } } ```",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Update"
            ],
            "properties": {
              "Update": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 12 hours)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Update widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      }
    },
    "font_family": {
      "description": "Font family",
      "type": "string"
    },
    "font_size": {
      "description": "Font size (default: 12.5)",
      "type": "number",
      "format": "float"
    },
    "frame": {
      "description": "Frame options (see: https://docs.rs/egui/latest/egui/containers/frame/struct.Frame.html)",
      "type": "object",
      "required": [
        "inner_margin"
      ],
      "properties": {
        "inner_margin": {
          "description": "Margin inside the painted frame",
          "type": "object",
          "required": [
            "x",
            "y"
          ],
          "properties": {
            "x": {
              "description": "X coordinate",
              "type": "number",
              "format": "float"
            },
            "y": {
              "description": "Y coordinate",
              "type": "number",
              "format": "float"
            }
          }
        }
      }
    },
    "grouping": {
      "description": "Visual grouping for widgets",
      "oneOf": [
        {
          "description": "No grouping is applied",
          "type": "object",
          "required": [
            "kind"
          ],
          "properties": {
            "kind": {
              "type": "string",
              "enum": [
                "None"
              ]
            }
          }
        },
        {
          "description": "Widgets are grouped as a whole",
          "type": "object",
          "required": [
            "kind"
          ],
          "properties": {
            "kind": {
              "type": "string",
              "enum": [
                "Bar"
              ]
            },
            "rounding": {
              "description": "Rounding values for the 4 corners. Can be a single or 4 values.",
              "anyOf": [
                {
                  "description": "All 4 corners are the same",
                  "type": "number",
                  "format": "float"
                },
                {
                  "description": "All 4 corners are custom. Order: NW, NE, SW, SE",
                  "type": "array",
                  "items": {
                    "type": "number",
                    "format": "float"
                  },
                  "maxItems": 4,
                  "minItems": 4
                }
              ]
            },
            "style": {
              "description": "Styles for the grouping",
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Default"
                  ]
                },
                {
                  "description": "A shadow is added under the default group. (blur: 4, offset: x-1 y-1, spread: 3)",
                  "type": "string",
                  "enum": [
                    "DefaultWithShadowB4O1S3"
                  ]
                },
                {
                  "description": "A shadow is added under the default group. (blur: 4, offset: x-0 y-0, spread: 3)",
                  "type": "string",
                  "enum": [
                    "DefaultWithShadowB4O0S3"
                  ]
                },
                {
                  "description": "A shadow is added under the default group. (blur: 0, offset: x-1 y-1, spread: 3)",
                  "type": "string",
                  "enum": [
                    "DefaultWithShadowB0O1S3"
                  ]
                },
                {
                  "description": "A glow is added under the default group. (blur: 3, offset: x-1 y-1, spread: 2)",
                  "type": "string",
                  "enum": [
                    "DefaultWithGlowB3O1S2"
                  ]
                },
                {
                  "description": "A glow is added under the default group. (blur: 3, offset: x-0 y-0, spread: 2)",
                  "type": "string",
                  "enum": [
                    "DefaultWithGlowB3O0S2"
                  ]
                },
                {
                  "description": "A glow is added under the default group. (blur: 0, offset: x-1 y-1, spread: 2)",
                  "type": "string",
                  "enum": [
                    "DefaultWithGlowB0O1S2"
                  ]
                }
              ]
            },
            "transparency_alpha": {
              "description": "Alpha value for the color transparency [[0-255]] (default: 200)",
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "description": "Widgets are grouped by alignment",
          "type": "object",
          "required": [
            "kind"
          ],
          "properties": {
            "kind": {
              "type": "string",
              "enum": [
                "Alignment"
              ]
            },
            "rounding": {
              "description": "Rounding values for the 4 corners. Can be a single or 4 values.",
              "anyOf": [
                {
                  "description": "All 4 corners are the same",
                  "type": "number",
                  "format": "float"
                },
                {
                  "description": "All 4 corners are custom. Order: NW, NE, SW, SE",
                  "type": "array",
                  "items": {
                    "type": "number",
                    "format": "float"
                  },
                  "maxItems": 4,
                  "minItems": 4
                }
              ]
            },
            "style": {
              "description": "Styles for the grouping",
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Default"
                  ]
                },
                {
                  "description": "A shadow is added under the default group. (blur: 4, offset: x-1 y-1, spread: 3)",
                  "type": "string",
                  "enum": [
                    "DefaultWithShadowB4O1S3"
                  ]
                },
                {
                  "description": "A shadow is added under the default group. (blur: 4, offset: x-0 y-0, spread: 3)",
                  "type": "string",
                  "enum": [
                    "DefaultWithShadowB4O0S3"
                  ]
                },
                {
                  "description": "A shadow is added under the default group. (blur: 0, offset: x-1 y-1, spread: 3)",
                  "type": "string",
                  "enum": [
                    "DefaultWithShadowB0O1S3"
                  ]
                },
                {
                  "description": "A glow is added under the default group. (blur: 3, offset: x-1 y-1, spread: 2)",
                  "type": "string",
                  "enum": [
                    "DefaultWithGlowB3O1S2"
                  ]
                },
                {
                  "description": "A glow is added under the default group. (blur: 3, offset: x-0 y-0, spread: 2)",
                  "type": "string",
                  "enum": [
                    "DefaultWithGlowB3O0S2"
                  ]
                },
                {
                  "description": "A glow is added under the default group. (blur: 0, offset: x-1 y-1, spread: 2)",
                  "type": "string",
                  "enum": [
                    "DefaultWithGlowB0O1S2"
                  ]
                }
              ]
            },
            "transparency_alpha": {
              "description": "Alpha value for the color transparency [[0-255]] (default: 200)",
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        },
        {
          "description": "Widgets are grouped individually",
          "type": "object",
          "required": [
            "kind"
          ],
          "properties": {
            "kind": {
              "type": "string",
              "enum": [
                "Widget"
              ]
            },
            "rounding": {
              "description": "Rounding values for the 4 corners. Can be a single or 4 values.",
              "anyOf": [
                {
                  "description": "All 4 corners are the same",
                  "type": "number",
                  "format": "float"
                },
                {
                  "description": "All 4 corners are custom. Order: NW, NE, SW, SE",
                  "type": "array",
                  "items": {
                    "type": "number",
                    "format": "float"
                  },
                  "maxItems": 4,
                  "minItems": 4
                }
              ]
            },
            "style": {
              "description": "Styles for the grouping",
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Default"
                  ]
                },
                {
                  "description": "A shadow is added under the default group. (blur: 4, offset: x-1 y-1, spread: 3)",
                  "type": "string",
                  "enum": [
                    "DefaultWithShadowB4O1S3"
                  ]
                },
                {
                  "description": "A shadow is added under the default group. (blur: 4, offset: x-0 y-0, spread: 3)",
                  "type": "string",
                  "enum": [
                    "DefaultWithShadowB4O0S3"
                  ]
                },
                {
                  "description": "A shadow is added under the default group. (blur: 0, offset: x-1 y-1, spread: 3)",
                  "type": "string",
                  "enum": [
                    "DefaultWithShadowB0O1S3"
                  ]
                },
                {
                  "description": "A glow is added under the default group. (blur: 3, offset: x-1 y-1, spread: 2)",
                  "type": "string",
                  "enum": [
                    "DefaultWithGlowB3O1S2"
                  ]
                },
                {
                  "description": "A glow is added under the default group. (blur: 3, offset: x-0 y-0, spread: 2)",
                  "type": "string",
                  "enum": [
                    "DefaultWithGlowB3O0S2"
                  ]
                },
                {
                  "description": "A glow is added under the default group. (blur: 0, offset: x-1 y-1, spread: 2)",
                  "type": "string",
                  "enum": [
                    "DefaultWithGlowB0O1S2"
                  ]
                }
              ]
            },
            "transparency_alpha": {
              "description": "Alpha value for the color transparency [[0-255]] (default: 200)",
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            }
          }
        }
      ]
    },
    "height": {
      "description": "Bar height (default: 50)",
      "type": "number",
      "format": "float"
    },
    "icon_scale": {
      "description": "Scale of the icons relative to the font_size [[1.0-2.0]]. (default: 1.4)",
      "type": "number",
      "format": "float"
    },
    "left_widgets": {
      "description": "Left side widgets (ordered left-to-right)",
      "type": "array",
      "items": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Applications"
            ],
            "properties": {
              "Applications": {
                "type": "object",
                "required": [
                  "enable",
                  "items"
                ],
                "properties": {
                  "display": {
                    "description": "Default display format for all applications (optional). Could be overridden per application. Defaults to `Icon`.",
                    "oneOf": [
                      {
                        "description": "Show only the application icon.",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show only the application name as text.",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show both the application icon and name.",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  },
                  "enable": {
                    "description": "Enables or disables the applications widget.",
                    "type": "boolean"
                  },
                  "items": {
                    "description": "List of configured applications to display.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "command",
                        "name"
                      ],
                      "properties": {
                        "command": {
                          "description": "Command to execute (e.g. path to the application or shell command).",
                          "type": "string"
                        },
                        "display": {
                          "description": "Display format for this application button (optional). Overrides global format if set.",
                          "oneOf": [
                            {
                              "description": "Show only the application icon.",
                              "type": "string",
                              "enum": [
                                "Icon"
                              ]
                            },
                            {
                              "description": "Show only the application name as text.",
                              "type": "string",
                              "enum": [
                                "Text"
                              ]
                            },
                            {
                              "description": "Show both the application icon and name.",
                              "type": "string",
                              "enum": [
                                "IconAndText"
                              ]
                            }
                          ]
                        },
                        "enable": {
                          "description": "Whether to enable this application button (optional). Inherits from the global `Applications` setting if omitted.",
                          "type": "boolean"
                        },
                        "icon": {
                          "description": "Optional icon: a path to an image or a text-based glyph (e.g., from Nerd Fonts). If not set, and if the `command` is a path to an executable, an icon might be extracted from it. Note: glyphs require a compatible `font_family`.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Display name of the application.",
                          "type": "string"
                        },
                        "show_command_on_hover": {
                          "description": "Whether to show the launch command on hover (optional). Inherits from the global `Applications` setting if omitted.",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "show_command_on_hover": {
                    "description": "Whether to show the launch command on hover (optional). Could be overridden per application. Defaults to `false` if not set.",
                    "type": "boolean"
                  },
                  "spacing": {
                    "description": "Horizontal spacing between application buttons.",
                    "type": "number",
                    "format": "float"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Battery"
            ],
            "properties": {
              "Battery": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "auto_select_under": {
                    "description": "Select when the current percentage is under this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Battery widget",
                    "type": "boolean"
                  },
                  "hide_on_full_charge": {
                    "description": "Hide the widget if the battery is at full charge",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Cpu"
            ],
            "properties": {
              "Cpu": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "auto_select_over": {
                    "description": "Select when the current percentage is over this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Cpu widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Date"
            ],
            "properties": {
              "Date": {
                "type": "object",
                "required": [
                  "enable",
                  "format"
                ],
                "properties": {
                  "enable": {
                    "description": "Enable the Date widget",
                    "type": "boolean"
                  },
                  "format": {
                    "description": "Set the Date format",
                    "oneOf": [
                      {
                        "description": "Month/Date/Year format (09/08/24)",
                        "type": "string",
                        "enum": [
                          "MonthDateYear"
                        ]
                      },
                      {
                        "description": "Year-Month-Date format (2024-09-08)",
                        "type": "string",
                        "enum": [
                          "YearMonthDate"
                        ]
                      },
                      {
                        "description": "Date-Month-Year format (8-Sep-2024)",
                        "type": "string",
                        "enum": [
                          "DateMonthYear"
                        ]
                      },
                      {
                        "description": "Day Date Month Year format (8 September 2024)",
                        "type": "string",
                        "enum": [
                          "DayDateMonthYear"
                        ]
                      },
                      {
                        "description": "Custom format (https://docs.rs/chrono/latest/chrono/format/strftime/index.html)",
                        "type": "object",
                        "required": [
                          "Custom"
                        ],
                        "properties": {
                          "Custom": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "description": "Custom format with modifiers",
                        "type": "object",
                        "required": [
                          "CustomModifiers"
                        ],
                        "properties": {
                          "CustomModifiers": {
                            "description": "Custom format with additive modifiers for integer format specifiers",
                            "type": "object",
                            "required": [
                              "format",
                              "modifiers"
                            ],
                            "properties": {
                              "format": {
                                "description": "Custom format (https://docs.rs/chrono/latest/chrono/format/strftime/index.html)",
                                "type": "string"
                              },
                              "modifiers": {
                                "description": "Additive modifiers for integer format specifiers (e.g. { \"%U\": 1 } to increment the zero-indexed week number by 1)",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    ]
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  },
                  "timezone": {
                    "description": "TimeZone (https://docs.rs/chrono-tz/latest/chrono_tz/enum.Tz.html)\n\nUse a custom format to display additional information, i.e.: ```json { \"Date\": { \"enable\": true, \"format\": { \"Custom\": \"%D %Z (Tokyo)\" }, \"timezone\": \"Asia/Tokyo\" } } ```",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Keyboard"
            ],
            "properties": {
              "Keyboard": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 1 second)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Input widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Komorebi"
            ],
            "properties": {
              "Komorebi": {
                "type": "object",
                "properties": {
                  "configuration_switcher": {
                    "description": "Configure the Configuration Switcher widget",
                    "type": "object",
                    "required": [
                      "configurations",
                      "enable"
                    ],
                    "properties": {
                      "configurations": {
                        "description": "A map of display friendly name => path to configuration.json",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "enable": {
                        "description": "Enable the Komorebi Configurations widget",
                        "type": "boolean"
                      }
                    }
                  },
                  "focused_container": {
                    "description": "Configure the Focused Container widget",
                    "type": "object",
                    "required": [
                      "enable"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the currently focused container",
                        "oneOf": [
                          {
                            "description": "Show only icon",
                            "type": "string",
                            "enum": [
                              "Icon"
                            ]
                          },
                          {
                            "description": "Show only text",
                            "type": "string",
                            "enum": [
                              "Text"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and text on the rest",
                            "type": "string",
                            "enum": [
                              "TextAndIconOnSelected"
                            ]
                          },
                          {
                            "description": "Show both icon and text",
                            "type": "string",
                            "enum": [
                              "IconAndText"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and icons on the rest",
                            "type": "string",
                            "enum": [
                              "IconAndTextOnSelected"
                            ]
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Focused Container widget",
                        "type": "boolean"
                      },
                      "show_icon": {
                        "description": "DEPRECATED: use 'display' instead (Show the icon of the currently focused container)",
                        "type": "boolean"
                      }
                    }
                  },
                  "layout": {
                    "description": "Configure the Layout widget",
                    "type": "object",
                    "required": [
                      "enable"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the current layout",
                        "oneOf": [
                          {
                            "description": "Show only icon",
                            "type": "string",
                            "enum": [
                              "Icon"
                            ]
                          },
                          {
                            "description": "Show only text",
                            "type": "string",
                            "enum": [
                              "Text"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and text on the rest",
                            "type": "string",
                            "enum": [
                              "TextAndIconOnSelected"
                            ]
                          },
                          {
                            "description": "Show both icon and text",
                            "type": "string",
                            "enum": [
                              "IconAndText"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and icons on the rest",
                            "type": "string",
                            "enum": [
                              "IconAndTextOnSelected"
                            ]
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Layout widget",
                        "type": "boolean"
                      },
                      "options": {
                        "description": "List of layout options",
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "BSP",
                                "Columns",
                                "Rows",
                                "VerticalStack",
                                "HorizontalStack",
                                "UltrawideVerticalStack",
                                "Grid",
                                "RightMainVerticalStack"
                              ]
                            },
                            {
                              "type": "null"
                            },
                            {
                              "type": "null"
                            },
                            {
                              "type": "null"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "locked_container": {
                    "description": "Configure the Locked Container widget",
                    "type": "object",
                    "required": [
                      "enable"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the current locked state",
                        "oneOf": [
                          {
                            "description": "Show only icon",
                            "type": "string",
                            "enum": [
                              "Icon"
                            ]
                          },
                          {
                            "description": "Show only text",
                            "type": "string",
                            "enum": [
                              "Text"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and text on the rest",
                            "type": "string",
                            "enum": [
                              "TextAndIconOnSelected"
                            ]
                          },
                          {
                            "description": "Show both icon and text",
                            "type": "string",
                            "enum": [
                              "IconAndText"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and icons on the rest",
                            "type": "string",
                            "enum": [
                              "IconAndTextOnSelected"
                            ]
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Locked Container widget",
                        "type": "boolean"
                      },
                      "show_when_unlocked": {
                        "description": "Show the widget event if the layer is unlocked",
                        "type": "boolean"
                      }
                    }
                  },
                  "workspace_layer": {
                    "description": "Configure the Workspace Layer widget",
                    "type": "object",
                    "required": [
                      "enable"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the current layer",
                        "oneOf": [
                          {
                            "description": "Show only icon",
                            "type": "string",
                            "enum": [
                              "Icon"
                            ]
                          },
                          {
                            "description": "Show only text",
                            "type": "string",
                            "enum": [
                              "Text"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and text on the rest",
                            "type": "string",
                            "enum": [
                              "TextAndIconOnSelected"
                            ]
                          },
                          {
                            "description": "Show both icon and text",
                            "type": "string",
                            "enum": [
                              "IconAndText"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and icons on the rest",
                            "type": "string",
                            "enum": [
                              "IconAndTextOnSelected"
                            ]
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Workspace Layer widget",
                        "type": "boolean"
                      },
                      "show_when_tiling": {
                        "description": "Show the widget event if the layer is Tiling",
                        "type": "boolean"
                      }
                    }
                  },
                  "workspaces": {
                    "description": "Configure the Workspaces widget",
                    "type": "object",
                    "required": [
                      "enable",
                      "hide_empty_workspaces"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the workspace",
                        "oneOf": [
                          {
                            "description": "Show all icons only",
                            "type": "string",
                            "enum": [
                              "AllIcons"
                            ]
                          },
                          {
                            "description": "Show both all icons and text",
                            "type": "string",
                            "enum": [
                              "AllIconsAndText"
                            ]
                          },
                          {
                            "description": "Show all icons and text for the selected element, and all icons on the rest",
                            "type": "string",
                            "enum": [
                              "AllIconsAndTextOnSelected"
                            ]
                          },
                          {
                            "type": "object",
                            "required": [
                              "Existing"
                            ],
                            "properties": {
                              "Existing": {
                                "oneOf": [
                                  {
                                    "description": "Show only icon",
                                    "type": "string",
                                    "enum": [
                                      "Icon"
                                    ]
                                  },
                                  {
                                    "description": "Show only text",
                                    "type": "string",
                                    "enum": [
                                      "Text"
                                    ]
                                  },
                                  {
                                    "description": "Show an icon and text for the selected element, and text on the rest",
                                    "type": "string",
                                    "enum": [
                                      "TextAndIconOnSelected"
                                    ]
                                  },
                                  {
                                    "description": "Show both icon and text",
                                    "type": "string",
                                    "enum": [
                                      "IconAndText"
                                    ]
                                  },
                                  {
                                    "description": "Show an icon and text for the selected element, and icons on the rest",
                                    "type": "string",
                                    "enum": [
                                      "IconAndTextOnSelected"
                                    ]
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Workspaces widget",
                        "type": "boolean"
                      },
                      "hide_empty_workspaces": {
                        "description": "Hide workspaces without any windows",
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Media"
            ],
            "properties": {
              "Media": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "enable": {
                    "description": "Enable the Media widget",
                    "type": "boolean"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Memory"
            ],
            "properties": {
              "Memory": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "auto_select_over": {
                    "description": "Select when the current percentage is over this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Memory widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Network"
            ],
            "properties": {
              "Network": {
                "type": "object",
                "required": [
                  "enable",
                  "show_activity",
                  "show_total_activity"
                ],
                "properties": {
                  "activity_left_padding": {
                    "description": "Characters to reserve for received and transmitted activity",
                    "type": "integer",
                    "format": "uint",
                    "minimum": 0.0
                  },
                  "auto_select": {
                    "description": "Select when the value is over a limit (1MiB is 1048576 bytes (1024*1024))",
                    "type": "object",
                    "properties": {
                      "received_over": {
                        "description": "Select the received data when it's over this value",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                      },
                      "total_received_over": {
                        "description": "Select the total received data when it's over this value",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                      },
                      "total_transmitted_over": {
                        "description": "Select the total transmitted data when it's over this value",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                      },
                      "transmitted_over": {
                        "description": "Select the transmitted data when it's over this value",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                      }
                    }
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Network widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  },
                  "show_activity": {
                    "description": "Show received and transmitted activity",
                    "type": "boolean"
                  },
                  "show_default_interface": {
                    "description": "Show default interface",
                    "type": "boolean"
                  },
                  "show_total_activity": {
                    "description": "Show total received and transmitted activity",
                    "type": "boolean"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Storage"
            ],
            "properties": {
              "Storage": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "auto_hide_under": {
                    "description": "Hide when the current percentage is under this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "auto_select_over": {
                    "description": "Select when the current percentage is over this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Storage widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Time"
            ],
            "properties": {
              "Time": {
                "type": "object",
                "required": [
                  "enable",
                  "format"
                ],
                "properties": {
                  "changing_icon": {
                    "description": "Change the icon depending on the time. The default icon is used between 8:30 and 12:00. (default: false)",
                    "type": "boolean"
                  },
                  "enable": {
                    "description": "Enable the Time widget",
                    "type": "boolean"
                  },
                  "format": {
                    "description": "Set the Time format",
                    "oneOf": [
                      {
                        "description": "Twelve-hour format (with seconds)",
                        "type": "string",
                        "enum": [
                          "TwelveHour"
                        ]
                      },
                      {
                        "description": "Twelve-hour format (without seconds)",
                        "type": "string",
                        "enum": [
                          "TwelveHourWithoutSeconds"
                        ]
                      },
                      {
                        "description": "Twenty-four-hour format (with seconds)",
                        "type": "string",
                        "enum": [
                          "TwentyFourHour"
                        ]
                      },
                      {
                        "description": "Twenty-four-hour format (without seconds)",
                        "type": "string",
                        "enum": [
                          "TwentyFourHourWithoutSeconds"
                        ]
                      },
                      {
                        "description": "Twenty-four-hour format displayed as a binary clock with circles (with seconds) (https://en.wikipedia.org/wiki/Binary_clock)",
                        "type": "string",
                        "enum": [
                          "BinaryCircle"
                        ]
                      },
                      {
                        "description": "Twenty-four-hour format displayed as a binary clock with rectangles (with seconds) (https://en.wikipedia.org/wiki/Binary_clock)",
                        "type": "string",
                        "enum": [
                          "BinaryRectangle"
                        ]
                      },
                      {
                        "description": "Custom format (https://docs.rs/chrono/latest/chrono/format/strftime/index.html)",
                        "type": "object",
                        "required": [
                          "Custom"
                        ],
                        "properties": {
                          "Custom": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    ]
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  },
                  "timezone": {
                    "description": "TimeZone (https://docs.rs/chrono-tz/latest/chrono_tz/enum.Tz.html)\n\nUse a custom format to display additional information, i.e.: ```json { \"Time\": { \"enable\": true, \"format\": { \"Custom\": \"%T %Z (Tokyo)\" }, \"timezone\": \"Asia/Tokyo\" } } ```",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Update"
            ],
            "properties": {
              "Update": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 12 hours)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Update widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      }
    },
    "margin": {
      "description": "Bar margin. Use one value for all sides or use a grouped margin for horizontal and/or vertical definition which can each take a single value for a symmetric margin or two values for each side, i.e.: ```json \"margin\": { \"horizontal\": 10 } ``` or: ```json \"margin\": { \"vertical\": [top, bottom] } ``` You can also set individual margin on each side like this: ```json \"margin\": { \"top\": 10, \"bottom\": 10, \"left\": 10, \"right\": 10, } ``` By default, margin is set to 0 on all sides.",
      "anyOf": [
        {
          "type": "number",
          "format": "float"
        },
        {
          "type": "object",
          "required": [
            "bottom",
            "left",
            "right",
            "top"
          ],
          "properties": {
            "bottom": {
              "type": "number",
              "format": "float"
            },
            "left": {
              "type": "number",
              "format": "float"
            },
            "right": {
              "type": "number",
              "format": "float"
            },
            "top": {
              "type": "number",
              "format": "float"
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "horizontal": {
              "anyOf": [
                {
                  "type": "number",
                  "format": "float"
                },
                {
                  "type": "array",
                  "items": [
                    {
                      "type": "number",
                      "format": "float"
                    },
                    {
                      "type": "number",
                      "format": "float"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              ]
            },
            "vertical": {
              "anyOf": [
                {
                  "type": "number",
                  "format": "float"
                },
                {
                  "type": "array",
                  "items": [
                    {
                      "type": "number",
                      "format": "float"
                    },
                    {
                      "type": "number",
                      "format": "float"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              ]
            }
          }
        }
      ]
    },
    "max_label_width": {
      "description": "Max label width before text truncation (default: 400.0)",
      "type": "number",
      "format": "float"
    },
    "monitor": {
      "description": "The monitor index or the full monitor options",
      "anyOf": [
        {
          "description": "The monitor index where you want the bar to show",
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        {
          "description": "The full monitor options with the index and an optional work_area_offset",
          "type": "object",
          "required": [
            "index"
          ],
          "properties": {
            "index": {
              "description": "Komorebi monitor index of the monitor on which to render the bar",
              "type": "integer",
              "format": "uint",
              "minimum": 0.0
            },
            "work_area_offset": {
              "description": "Automatically apply a work area offset for this monitor to accommodate the bar",
              "type": "object",
              "required": [
                "bottom",
                "left",
                "right",
                "top"
              ],
              "properties": {
                "bottom": {
                  "description": "The bottom point in a Win32 Rect",
                  "type": "integer",
                  "format": "int32"
                },
                "left": {
                  "description": "The left point in a Win32 Rect",
                  "type": "integer",
                  "format": "int32"
                },
                "right": {
                  "description": "The right point in a Win32 Rect",
                  "type": "integer",
                  "format": "int32"
                },
                "top": {
                  "description": "The top point in a Win32 Rect",
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      ]
    },
    "mouse": {
      "description": "Options for mouse interaction on the bar",
      "type": "object",
      "properties": {
        "horizontal_scroll_threshold": {
          "description": "Defines how many points a user needs to scroll horizontally to make a \"tick\" on a mouse/touchpad/touchscreen (default: 30)",
          "type": "number",
          "format": "float"
        },
        "on_extra1_click": {
          "description": "Command to send on extra1/back button click",
          "oneOf": [
            {
              "description": "Send a message to the komorebi client. By default, a batch of messages are sent in the following order: FocusMonitorAtCursor => MouseFollowsFocus(false) => {message} => MouseFollowsFocus({original.value})\n\nExample: ```json \"on_extra2_click\": { \"message\": { \"type\": \"NewWorkspace\" } }, ``` or: ```json \"on_middle_click\": { \"focus_monitor_at_cursor\": false, \"ignore_mouse_follows_focus\": false, \"message\": { \"type\": \"TogglePause\" } } ``` or: ```json \"on_scroll_up\": { \"message\": { \"type\": \"CycleFocusWorkspace\", \"content\": \"Previous\" } } ```",
              "type": "object",
              "required": [
                "Komorebi"
              ],
              "properties": {
                "Komorebi": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "focus_monitor_at_cursor": {
                      "description": "Send the FocusMonitorAtCursor message (default:true)",
                      "type": "boolean"
                    },
                    "ignore_mouse_follows_focus": {
                      "description": "Wrap the {message} with a MouseFollowsFocus(false) and MouseFollowsFocus({original.value}) message (default:true)",
                      "type": "boolean"
                    },
                    "message": {
                      "description": "The message to send to the komorebi client",
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStackIndex"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusStackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Left",
                                    "Right",
                                    "Up",
                                    "Down"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowEdge"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Horizontal",
                                    "Vertical",
                                    "HorizontalAndVertical"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowAxis"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWorkspaceToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWorkspaceToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SwapWorkspacesToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ForceFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Close"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Minimize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Promote"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EagerFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "LockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnlockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleLock"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloat"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMonocle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMaximize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "END OF LIFE FEATURE: Use the SW_HIDE flag to hide windows when switching workspaces (has issues with Electron apps)",
                                  "type": "string",
                                  "enum": [
                                    "Hide"
                                  ]
                                },
                                {
                                  "description": "Use the SW_MINIMIZE flag to hide windows when switching workspaces (has issues with frequent workspace switching)",
                                  "type": "string",
                                  "enum": [
                                    "Minimize"
                                  ]
                                },
                                {
                                  "description": "Use the undocumented SetCloak Win32 function to hide windows when switching workspaces",
                                  "type": "string",
                                  "enum": [
                                    "Cloak"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WindowHidingBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleCrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Swap the window container with the window container at the edge of the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Swap"
                                  ]
                                },
                                {
                                  "description": "Insert the window container into the focused workspace on the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Insert"
                                  ]
                                },
                                {
                                  "description": "Do nothing if trying to move a window container in the direction of an adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Process komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "Op"
                                  ]
                                },
                                {
                                  "description": "Ignore komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanagedWindowOperationBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "BSP",
                                "Columns",
                                "Rows",
                                "VerticalStack",
                                "HorizontalStack",
                                "UltrawideVerticalStack",
                                "Grid",
                                "RightMainVerticalStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Horizontal",
                                "Vertical",
                                "HorizontalAndVertical"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FlipLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 5,
                              "minItems": 5
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DisplayIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureNamedWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NewWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Stop"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StopIgnoreRestore"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "TogglePause"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Retile"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "RetileWithResizeDimensions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickSave"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickLoad"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Save"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Load"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusEmptyWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorAtCursor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CloseWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumbers"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceName"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceLayer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReplaceConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadStaticConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WatchConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CompleteConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AltFocusHack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A theme from catppuccin-egui",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Yellow)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Pink)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Catppuccin theme (theme previews: https://github.com/catppuccin/catppuccin)",
                                      "type": "string",
                                      "enum": [
                                        "Frappe",
                                        "Latte",
                                        "Macchiato",
                                        "Mocha"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Catppuccin"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Text)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Red)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A theme from base16-egui-themes",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Base16 theme (theme previews: https://tinted-theming.github.io/tinted-gallery/)",
                                      "type": "string",
                                      "enum": [
                                        "3024",
                                        "Apathy",
                                        "Apprentice",
                                        "Ashes",
                                        "AtelierCaveLight",
                                        "AtelierCave",
                                        "AtelierDuneLight",
                                        "AtelierDune",
                                        "AtelierEstuaryLight",
                                        "AtelierEstuary",
                                        "AtelierForestLight",
                                        "AtelierForest",
                                        "AtelierHeathLight",
                                        "AtelierHeath",
                                        "AtelierLakesideLight",
                                        "AtelierLakeside",
                                        "AtelierPlateauLight",
                                        "AtelierPlateau",
                                        "AtelierSavannaLight",
                                        "AtelierSavanna",
                                        "AtelierSeasideLight",
                                        "AtelierSeaside",
                                        "AtelierSulphurpoolLight",
                                        "AtelierSulphurpool",
                                        "Atlas",
                                        "AyuDark",
                                        "AyuLight",
                                        "AyuMirage",
                                        "Aztec",
                                        "Bespin",
                                        "BlackMetalBathory",
                                        "BlackMetalBurzum",
                                        "BlackMetalDarkFuneral",
                                        "BlackMetalGorgoroth",
                                        "BlackMetalImmortal",
                                        "BlackMetalKhold",
                                        "BlackMetalMarduk",
                                        "BlackMetalMayhem",
                                        "BlackMetalNile",
                                        "BlackMetalVenom",
                                        "BlackMetal",
                                        "Blueforest",
                                        "Blueish",
                                        "Brewer",
                                        "Bright",
                                        "Brogrammer",
                                        "BrushtreesDark",
                                        "Brushtrees",
                                        "Caroline",
                                        "CatppuccinFrappe",
                                        "CatppuccinLatte",
                                        "CatppuccinMacchiato",
                                        "CatppuccinMocha",
                                        "Chalk",
                                        "Circus",
                                        "ClassicDark",
                                        "ClassicLight",
                                        "Codeschool",
                                        "Colors",
                                        "Cupcake",
                                        "Cupertino",
                                        "DaOneBlack",
                                        "DaOneGray",
                                        "DaOneOcean",
                                        "DaOnePaper",
                                        "DaOneSea",
                                        "DaOneWhite",
                                        "DanqingLight",
                                        "Danqing",
                                        "Darcula",
                                        "Darkmoss",
                                        "Darktooth",
                                        "Darkviolet",
                                        "Decaf",
                                        "DefaultDark",
                                        "DefaultLight",
                                        "Dirtysea",
                                        "Dracula",
                                        "EdgeDark",
                                        "EdgeLight",
                                        "Eighties",
                                        "EmbersLight",
                                        "Embers",
                                        "Emil",
                                        "EquilibriumDark",
                                        "EquilibriumGrayDark",
                                        "EquilibriumGrayLight",
                                        "EquilibriumLight",
                                        "Eris",
                                        "Espresso",
                                        "EvaDim",
                                        "Eva",
                                        "EvenokDark",
                                        "EverforestDarkHard",
                                        "Everforest",
                                        "Flat",
                                        "Framer",
                                        "FruitSoda",
                                        "Gigavolt",
                                        "Github",
                                        "GoogleDark",
                                        "GoogleLight",
                                        "Gotham",
                                        "GrayscaleDark",
                                        "GrayscaleLight",
                                        "Greenscreen",
                                        "Gruber",
                                        "GruvboxDarkHard",
                                        "GruvboxDarkMedium",
                                        "GruvboxDarkPale",
                                        "GruvboxDarkSoft",
                                        "GruvboxLightHard",
                                        "GruvboxLightMedium",
                                        "GruvboxLightSoft",
                                        "GruvboxMaterialDarkHard",
                                        "GruvboxMaterialDarkMedium",
                                        "GruvboxMaterialDarkSoft",
                                        "GruvboxMaterialLightHard",
                                        "GruvboxMaterialLightMedium",
                                        "GruvboxMaterialLightSoft",
                                        "Hardcore",
                                        "Harmonic16Dark",
                                        "Harmonic16Light",
                                        "HeetchLight",
                                        "Heetch",
                                        "Helios",
                                        "Hopscotch",
                                        "HorizonDark",
                                        "HorizonLight",
                                        "HorizonTerminalDark",
                                        "HorizonTerminalLight",
                                        "HumanoidDark",
                                        "HumanoidLight",
                                        "IaDark",
                                        "IaLight",
                                        "Icy",
                                        "Irblack",
                                        "Isotope",
                                        "Jabuti",
                                        "Kanagawa",
                                        "Katy",
                                        "Kimber",
                                        "Lime",
                                        "Macintosh",
                                        "Marrakesh",
                                        "Materia",
                                        "MaterialDarker",
                                        "MaterialLighter",
                                        "MaterialPalenight",
                                        "MaterialVivid",
                                        "Material",
                                        "MeasuredDark",
                                        "MeasuredLight",
                                        "MellowPurple",
                                        "MexicoLight",
                                        "Mocha",
                                        "Monokai",
                                        "Moonlight",
                                        "Mountain",
                                        "Nebula",
                                        "NordLight",
                                        "Nord",
                                        "Nova",
                                        "Ocean",
                                        "Oceanicnext",
                                        "OneLight",
                                        "OnedarkDark",
                                        "Onedark",
                                        "OutrunDark",
                                        "OxocarbonDark",
                                        "OxocarbonLight",
                                        "Pandora",
                                        "PapercolorDark",
                                        "PapercolorLight",
                                        "Paraiso",
                                        "Pasque",
                                        "Phd",
                                        "Pico",
                                        "Pinky",
                                        "Pop",
                                        "Porple",
                                        "PreciousDarkEleven",
                                        "PreciousDarkFifteen",
                                        "PreciousLightWarm",
                                        "PreciousLightWhite",
                                        "PrimerDarkDimmed",
                                        "PrimerDark",
                                        "PrimerLight",
                                        "Purpledream",
                                        "Qualia",
                                        "Railscasts",
                                        "Rebecca",
                                        "RosePineDawn",
                                        "RosePineMoon",
                                        "RosePine",
                                        "Saga",
                                        "Sagelight",
                                        "Sakura",
                                        "Sandcastle",
                                        "SelenizedBlack",
                                        "SelenizedDark",
                                        "SelenizedLight",
                                        "SelenizedWhite",
                                        "Seti",
                                        "ShadesOfPurple",
                                        "ShadesmearDark",
                                        "ShadesmearLight",
                                        "Shapeshifter",
                                        "SilkDark",
                                        "SilkLight",
                                        "Snazzy",
                                        "SolarflareLight",
                                        "Solarflare",
                                        "SolarizedDark",
                                        "SolarizedLight",
                                        "Spaceduck",
                                        "Spacemacs",
                                        "Sparky",
                                        "StandardizedDark",
                                        "StandardizedLight",
                                        "Stella",
                                        "StillAlive",
                                        "Summercamp",
                                        "SummerfruitDark",
                                        "SummerfruitLight",
                                        "SynthMidnightDark",
                                        "SynthMidnightLight",
                                        "Tango",
                                        "Tarot",
                                        "Tender",
                                        "TerracottaDark",
                                        "Terracotta",
                                        "TokyoCityDark",
                                        "TokyoCityLight",
                                        "TokyoCityTerminalDark",
                                        "TokyoCityTerminalLight",
                                        "TokyoNightDark",
                                        "TokyoNightLight",
                                        "TokyoNightMoon",
                                        "TokyoNightStorm",
                                        "TokyoNightTerminalDark",
                                        "TokyoNightTerminalLight",
                                        "TokyoNightTerminalStorm",
                                        "TokyodarkTerminal",
                                        "Tokyodark",
                                        "TomorrowNightEighties",
                                        "TomorrowNight",
                                        "Tomorrow",
                                        "Tube",
                                        "Twilight",
                                        "UnikittyDark",
                                        "UnikittyLight",
                                        "UnikittyReversible",
                                        "Uwunicorn",
                                        "Vesper",
                                        "Vice",
                                        "Vulcan",
                                        "Windows10Light",
                                        "Windows10",
                                        "Windows95Light",
                                        "Windows95",
                                        "WindowsHighcontrastLight",
                                        "WindowsHighcontrast",
                                        "WindowsNtLight",
                                        "WindowsNt",
                                        "Woodland",
                                        "XcodeDusk",
                                        "Zenbones",
                                        "Zenburn"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Base16"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A custom Base16 theme",
                                  "type": "object",
                                  "required": [
                                    "colours",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "colours": {
                                      "description": "Colours of the custom Base16 theme palette",
                                      "type": "object",
                                      "required": [
                                        "base_00",
                                        "base_01",
                                        "base_02",
                                        "base_03",
                                        "base_04",
                                        "base_05",
                                        "base_06",
                                        "base_07",
                                        "base_08",
                                        "base_09",
                                        "base_0a",
                                        "base_0b",
                                        "base_0c",
                                        "base_0d",
                                        "base_0e",
                                        "base_0f"
                                      ],
                                      "properties": {
                                        "base_00": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_01": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_02": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_03": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_04": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_05": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_06": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_07": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_08": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_09": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0a": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0b": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0c": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0d": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0e": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0f": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Custom"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Theme"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Animation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint64",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationDuration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint64",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationFps"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "Linear",
                                        "EaseInSine",
                                        "EaseOutSine",
                                        "EaseInOutSine",
                                        "EaseInQuad",
                                        "EaseOutQuad",
                                        "EaseInOutQuad",
                                        "EaseInCubic",
                                        "EaseInOutCubic",
                                        "EaseInQuart",
                                        "EaseOutQuart",
                                        "EaseInOutQuart",
                                        "EaseInQuint",
                                        "EaseOutQuint",
                                        "EaseInOutQuint",
                                        "EaseInExpo",
                                        "EaseOutExpo",
                                        "EaseInOutExpo",
                                        "EaseInCirc",
                                        "EaseOutCirc",
                                        "EaseInOutCirc",
                                        "EaseInBack",
                                        "EaseOutBack",
                                        "EaseInOutBack",
                                        "EaseInElastic",
                                        "EaseOutElastic",
                                        "EaseInOutElastic",
                                        "EaseInBounce",
                                        "EaseOutBounce",
                                        "EaseInOutBounce"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "CubicBezier"
                                      ],
                                      "properties": {
                                        "CubicBezier": {
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          ],
                                          "maxItems": 4,
                                          "minItems": 4
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Border"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Single",
                                    "Stack",
                                    "Monocle",
                                    "Unfocused",
                                    "UnfocusedLocked",
                                    "Floating"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the system border style",
                                  "type": "string",
                                  "enum": [
                                    "System"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 11-style rounded borders",
                                  "type": "string",
                                  "enum": [
                                    "Rounded"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 10-style square borders",
                                  "type": "string",
                                  "enum": [
                                    "Square"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the adjustable komorebi border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "Use the thin Windows accent border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderImplementation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Transparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTransparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint8",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "TransparencyAlpha"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InvisibleBorders"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Always",
                                "Never",
                                "OnStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarMode"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Process",
                                "Title"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarLabel"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarUnfocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarBackgroundColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarHeight"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarTabWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontSize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontFamily"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "bottom",
                                    "left",
                                    "right",
                                    "top"
                                  ],
                                  "properties": {
                                    "bottom": {
                                      "description": "The bottom point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "left": {
                                      "description": "The left point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "right": {
                                      "description": "The right point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "top": {
                                      "description": "The top point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowBasedWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeDelta"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialNamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearAllWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnforceWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearSessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IgnoreRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyObjectNameChangeApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyTrayApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyLayeredApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyBorderOverflowApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "State"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GlobalState"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "VisibleWindows"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorInformation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "FocusedMonitorIndex",
                                "FocusedWorkspaceIndex",
                                "FocusedContainerIndex",
                                "FocusedWindowIndex",
                                "FocusedWorkspaceName",
                                "FocusedWorkspaceLayout",
                                "Version"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Query"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                      "type": "string",
                                      "enum": [
                                        "Komorebi"
                                      ]
                                    },
                                    {
                                      "description": "The native (legacy) Windows FFM implementation",
                                      "type": "string",
                                      "enum": [
                                        "Windows"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "The native (legacy) Windows FFM implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveTitleBar"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTitleBars"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "filter_state_changes"
                                  ],
                                  "properties": {
                                    "filter_state_changes": {
                                      "description": "Only emit notifications when the window manager state has changed",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocketWithOptions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ApplicationSpecificConfigurationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NotificationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SocketSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StaticConfigSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GenerateStaticConfig"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DebugWindow"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Execute a custom command. CMD (%variable%), Bash ($variable) and PowerShell ($Env:variable) variables will be resolved. Example: `komorebic toggle-pause`",
              "type": "object",
              "required": [
                "Command"
              ],
              "properties": {
                "Command": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "on_extra2_click": {
          "description": "Command to send on extra2/forward button click",
          "oneOf": [
            {
              "description": "Send a message to the komorebi client. By default, a batch of messages are sent in the following order: FocusMonitorAtCursor => MouseFollowsFocus(false) => {message} => MouseFollowsFocus({original.value})\n\nExample: ```json \"on_extra2_click\": { \"message\": { \"type\": \"NewWorkspace\" } }, ``` or: ```json \"on_middle_click\": { \"focus_monitor_at_cursor\": false, \"ignore_mouse_follows_focus\": false, \"message\": { \"type\": \"TogglePause\" } } ``` or: ```json \"on_scroll_up\": { \"message\": { \"type\": \"CycleFocusWorkspace\", \"content\": \"Previous\" } } ```",
              "type": "object",
              "required": [
                "Komorebi"
              ],
              "properties": {
                "Komorebi": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "focus_monitor_at_cursor": {
                      "description": "Send the FocusMonitorAtCursor message (default:true)",
                      "type": "boolean"
                    },
                    "ignore_mouse_follows_focus": {
                      "description": "Wrap the {message} with a MouseFollowsFocus(false) and MouseFollowsFocus({original.value}) message (default:true)",
                      "type": "boolean"
                    },
                    "message": {
                      "description": "The message to send to the komorebi client",
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStackIndex"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusStackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Left",
                                    "Right",
                                    "Up",
                                    "Down"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowEdge"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Horizontal",
                                    "Vertical",
                                    "HorizontalAndVertical"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowAxis"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWorkspaceToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWorkspaceToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SwapWorkspacesToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ForceFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Close"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Minimize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Promote"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EagerFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "LockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnlockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleLock"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloat"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMonocle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMaximize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "END OF LIFE FEATURE: Use the SW_HIDE flag to hide windows when switching workspaces (has issues with Electron apps)",
                                  "type": "string",
                                  "enum": [
                                    "Hide"
                                  ]
                                },
                                {
                                  "description": "Use the SW_MINIMIZE flag to hide windows when switching workspaces (has issues with frequent workspace switching)",
                                  "type": "string",
                                  "enum": [
                                    "Minimize"
                                  ]
                                },
                                {
                                  "description": "Use the undocumented SetCloak Win32 function to hide windows when switching workspaces",
                                  "type": "string",
                                  "enum": [
                                    "Cloak"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WindowHidingBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleCrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Swap the window container with the window container at the edge of the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Swap"
                                  ]
                                },
                                {
                                  "description": "Insert the window container into the focused workspace on the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Insert"
                                  ]
                                },
                                {
                                  "description": "Do nothing if trying to move a window container in the direction of an adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Process komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "Op"
                                  ]
                                },
                                {
                                  "description": "Ignore komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanagedWindowOperationBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "BSP",
                                "Columns",
                                "Rows",
                                "VerticalStack",
                                "HorizontalStack",
                                "UltrawideVerticalStack",
                                "Grid",
                                "RightMainVerticalStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Horizontal",
                                "Vertical",
                                "HorizontalAndVertical"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FlipLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 5,
                              "minItems": 5
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DisplayIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureNamedWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NewWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Stop"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StopIgnoreRestore"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "TogglePause"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Retile"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "RetileWithResizeDimensions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickSave"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickLoad"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Save"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Load"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusEmptyWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorAtCursor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CloseWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumbers"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceName"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceLayer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReplaceConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadStaticConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WatchConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CompleteConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AltFocusHack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A theme from catppuccin-egui",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Yellow)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Pink)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Catppuccin theme (theme previews: https://github.com/catppuccin/catppuccin)",
                                      "type": "string",
                                      "enum": [
                                        "Frappe",
                                        "Latte",
                                        "Macchiato",
                                        "Mocha"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Catppuccin"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Text)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Red)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A theme from base16-egui-themes",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Base16 theme (theme previews: https://tinted-theming.github.io/tinted-gallery/)",
                                      "type": "string",
                                      "enum": [
                                        "3024",
                                        "Apathy",
                                        "Apprentice",
                                        "Ashes",
                                        "AtelierCaveLight",
                                        "AtelierCave",
                                        "AtelierDuneLight",
                                        "AtelierDune",
                                        "AtelierEstuaryLight",
                                        "AtelierEstuary",
                                        "AtelierForestLight",
                                        "AtelierForest",
                                        "AtelierHeathLight",
                                        "AtelierHeath",
                                        "AtelierLakesideLight",
                                        "AtelierLakeside",
                                        "AtelierPlateauLight",
                                        "AtelierPlateau",
                                        "AtelierSavannaLight",
                                        "AtelierSavanna",
                                        "AtelierSeasideLight",
                                        "AtelierSeaside",
                                        "AtelierSulphurpoolLight",
                                        "AtelierSulphurpool",
                                        "Atlas",
                                        "AyuDark",
                                        "AyuLight",
                                        "AyuMirage",
                                        "Aztec",
                                        "Bespin",
                                        "BlackMetalBathory",
                                        "BlackMetalBurzum",
                                        "BlackMetalDarkFuneral",
                                        "BlackMetalGorgoroth",
                                        "BlackMetalImmortal",
                                        "BlackMetalKhold",
                                        "BlackMetalMarduk",
                                        "BlackMetalMayhem",
                                        "BlackMetalNile",
                                        "BlackMetalVenom",
                                        "BlackMetal",
                                        "Blueforest",
                                        "Blueish",
                                        "Brewer",
                                        "Bright",
                                        "Brogrammer",
                                        "BrushtreesDark",
                                        "Brushtrees",
                                        "Caroline",
                                        "CatppuccinFrappe",
                                        "CatppuccinLatte",
                                        "CatppuccinMacchiato",
                                        "CatppuccinMocha",
                                        "Chalk",
                                        "Circus",
                                        "ClassicDark",
                                        "ClassicLight",
                                        "Codeschool",
                                        "Colors",
                                        "Cupcake",
                                        "Cupertino",
                                        "DaOneBlack",
                                        "DaOneGray",
                                        "DaOneOcean",
                                        "DaOnePaper",
                                        "DaOneSea",
                                        "DaOneWhite",
                                        "DanqingLight",
                                        "Danqing",
                                        "Darcula",
                                        "Darkmoss",
                                        "Darktooth",
                                        "Darkviolet",
                                        "Decaf",
                                        "DefaultDark",
                                        "DefaultLight",
                                        "Dirtysea",
                                        "Dracula",
                                        "EdgeDark",
                                        "EdgeLight",
                                        "Eighties",
                                        "EmbersLight",
                                        "Embers",
                                        "Emil",
                                        "EquilibriumDark",
                                        "EquilibriumGrayDark",
                                        "EquilibriumGrayLight",
                                        "EquilibriumLight",
                                        "Eris",
                                        "Espresso",
                                        "EvaDim",
                                        "Eva",
                                        "EvenokDark",
                                        "EverforestDarkHard",
                                        "Everforest",
                                        "Flat",
                                        "Framer",
                                        "FruitSoda",
                                        "Gigavolt",
                                        "Github",
                                        "GoogleDark",
                                        "GoogleLight",
                                        "Gotham",
                                        "GrayscaleDark",
                                        "GrayscaleLight",
                                        "Greenscreen",
                                        "Gruber",
                                        "GruvboxDarkHard",
                                        "GruvboxDarkMedium",
                                        "GruvboxDarkPale",
                                        "GruvboxDarkSoft",
                                        "GruvboxLightHard",
                                        "GruvboxLightMedium",
                                        "GruvboxLightSoft",
                                        "GruvboxMaterialDarkHard",
                                        "GruvboxMaterialDarkMedium",
                                        "GruvboxMaterialDarkSoft",
                                        "GruvboxMaterialLightHard",
                                        "GruvboxMaterialLightMedium",
                                        "GruvboxMaterialLightSoft",
                                        "Hardcore",
                                        "Harmonic16Dark",
                                        "Harmonic16Light",
                                        "HeetchLight",
                                        "Heetch",
                                        "Helios",
                                        "Hopscotch",
                                        "HorizonDark",
                                        "HorizonLight",
                                        "HorizonTerminalDark",
                                        "HorizonTerminalLight",
                                        "HumanoidDark",
                                        "HumanoidLight",
                                        "IaDark",
                                        "IaLight",
                                        "Icy",
                                        "Irblack",
                                        "Isotope",
                                        "Jabuti",
                                        "Kanagawa",
                                        "Katy",
                                        "Kimber",
                                        "Lime",
                                        "Macintosh",
                                        "Marrakesh",
                                        "Materia",
                                        "MaterialDarker",
                                        "MaterialLighter",
                                        "MaterialPalenight",
                                        "MaterialVivid",
                                        "Material",
                                        "MeasuredDark",
                                        "MeasuredLight",
                                        "MellowPurple",
                                        "MexicoLight",
                                        "Mocha",
                                        "Monokai",
                                        "Moonlight",
                                        "Mountain",
                                        "Nebula",
                                        "NordLight",
                                        "Nord",
                                        "Nova",
                                        "Ocean",
                                        "Oceanicnext",
                                        "OneLight",
                                        "OnedarkDark",
                                        "Onedark",
                                        "OutrunDark",
                                        "OxocarbonDark",
                                        "OxocarbonLight",
                                        "Pandora",
                                        "PapercolorDark",
                                        "PapercolorLight",
                                        "Paraiso",
                                        "Pasque",
                                        "Phd",
                                        "Pico",
                                        "Pinky",
                                        "Pop",
                                        "Porple",
                                        "PreciousDarkEleven",
                                        "PreciousDarkFifteen",
                                        "PreciousLightWarm",
                                        "PreciousLightWhite",
                                        "PrimerDarkDimmed",
                                        "PrimerDark",
                                        "PrimerLight",
                                        "Purpledream",
                                        "Qualia",
                                        "Railscasts",
                                        "Rebecca",
                                        "RosePineDawn",
                                        "RosePineMoon",
                                        "RosePine",
                                        "Saga",
                                        "Sagelight",
                                        "Sakura",
                                        "Sandcastle",
                                        "SelenizedBlack",
                                        "SelenizedDark",
                                        "SelenizedLight",
                                        "SelenizedWhite",
                                        "Seti",
                                        "ShadesOfPurple",
                                        "ShadesmearDark",
                                        "ShadesmearLight",
                                        "Shapeshifter",
                                        "SilkDark",
                                        "SilkLight",
                                        "Snazzy",
                                        "SolarflareLight",
                                        "Solarflare",
                                        "SolarizedDark",
                                        "SolarizedLight",
                                        "Spaceduck",
                                        "Spacemacs",
                                        "Sparky",
                                        "StandardizedDark",
                                        "StandardizedLight",
                                        "Stella",
                                        "StillAlive",
                                        "Summercamp",
                                        "SummerfruitDark",
                                        "SummerfruitLight",
                                        "SynthMidnightDark",
                                        "SynthMidnightLight",
                                        "Tango",
                                        "Tarot",
                                        "Tender",
                                        "TerracottaDark",
                                        "Terracotta",
                                        "TokyoCityDark",
                                        "TokyoCityLight",
                                        "TokyoCityTerminalDark",
                                        "TokyoCityTerminalLight",
                                        "TokyoNightDark",
                                        "TokyoNightLight",
                                        "TokyoNightMoon",
                                        "TokyoNightStorm",
                                        "TokyoNightTerminalDark",
                                        "TokyoNightTerminalLight",
                                        "TokyoNightTerminalStorm",
                                        "TokyodarkTerminal",
                                        "Tokyodark",
                                        "TomorrowNightEighties",
                                        "TomorrowNight",
                                        "Tomorrow",
                                        "Tube",
                                        "Twilight",
                                        "UnikittyDark",
                                        "UnikittyLight",
                                        "UnikittyReversible",
                                        "Uwunicorn",
                                        "Vesper",
                                        "Vice",
                                        "Vulcan",
                                        "Windows10Light",
                                        "Windows10",
                                        "Windows95Light",
                                        "Windows95",
                                        "WindowsHighcontrastLight",
                                        "WindowsHighcontrast",
                                        "WindowsNtLight",
                                        "WindowsNt",
                                        "Woodland",
                                        "XcodeDusk",
                                        "Zenbones",
                                        "Zenburn"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Base16"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A custom Base16 theme",
                                  "type": "object",
                                  "required": [
                                    "colours",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "colours": {
                                      "description": "Colours of the custom Base16 theme palette",
                                      "type": "object",
                                      "required": [
                                        "base_00",
                                        "base_01",
                                        "base_02",
                                        "base_03",
                                        "base_04",
                                        "base_05",
                                        "base_06",
                                        "base_07",
                                        "base_08",
                                        "base_09",
                                        "base_0a",
                                        "base_0b",
                                        "base_0c",
                                        "base_0d",
                                        "base_0e",
                                        "base_0f"
                                      ],
                                      "properties": {
                                        "base_00": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_01": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_02": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_03": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_04": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_05": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_06": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_07": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_08": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_09": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0a": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0b": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0c": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0d": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0e": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0f": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Custom"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Theme"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Animation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint64",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationDuration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint64",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationFps"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "Linear",
                                        "EaseInSine",
                                        "EaseOutSine",
                                        "EaseInOutSine",
                                        "EaseInQuad",
                                        "EaseOutQuad",
                                        "EaseInOutQuad",
                                        "EaseInCubic",
                                        "EaseInOutCubic",
                                        "EaseInQuart",
                                        "EaseOutQuart",
                                        "EaseInOutQuart",
                                        "EaseInQuint",
                                        "EaseOutQuint",
                                        "EaseInOutQuint",
                                        "EaseInExpo",
                                        "EaseOutExpo",
                                        "EaseInOutExpo",
                                        "EaseInCirc",
                                        "EaseOutCirc",
                                        "EaseInOutCirc",
                                        "EaseInBack",
                                        "EaseOutBack",
                                        "EaseInOutBack",
                                        "EaseInElastic",
                                        "EaseOutElastic",
                                        "EaseInOutElastic",
                                        "EaseInBounce",
                                        "EaseOutBounce",
                                        "EaseInOutBounce"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "CubicBezier"
                                      ],
                                      "properties": {
                                        "CubicBezier": {
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          ],
                                          "maxItems": 4,
                                          "minItems": 4
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Border"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Single",
                                    "Stack",
                                    "Monocle",
                                    "Unfocused",
                                    "UnfocusedLocked",
                                    "Floating"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the system border style",
                                  "type": "string",
                                  "enum": [
                                    "System"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 11-style rounded borders",
                                  "type": "string",
                                  "enum": [
                                    "Rounded"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 10-style square borders",
                                  "type": "string",
                                  "enum": [
                                    "Square"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the adjustable komorebi border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "Use the thin Windows accent border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderImplementation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Transparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTransparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint8",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "TransparencyAlpha"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InvisibleBorders"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Always",
                                "Never",
                                "OnStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarMode"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Process",
                                "Title"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarLabel"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarUnfocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarBackgroundColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarHeight"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarTabWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontSize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontFamily"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "bottom",
                                    "left",
                                    "right",
                                    "top"
                                  ],
                                  "properties": {
                                    "bottom": {
                                      "description": "The bottom point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "left": {
                                      "description": "The left point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "right": {
                                      "description": "The right point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "top": {
                                      "description": "The top point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowBasedWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeDelta"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialNamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearAllWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnforceWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearSessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IgnoreRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyObjectNameChangeApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyTrayApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyLayeredApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyBorderOverflowApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "State"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GlobalState"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "VisibleWindows"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorInformation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "FocusedMonitorIndex",
                                "FocusedWorkspaceIndex",
                                "FocusedContainerIndex",
                                "FocusedWindowIndex",
                                "FocusedWorkspaceName",
                                "FocusedWorkspaceLayout",
                                "Version"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Query"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                      "type": "string",
                                      "enum": [
                                        "Komorebi"
                                      ]
                                    },
                                    {
                                      "description": "The native (legacy) Windows FFM implementation",
                                      "type": "string",
                                      "enum": [
                                        "Windows"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "The native (legacy) Windows FFM implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveTitleBar"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTitleBars"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "filter_state_changes"
                                  ],
                                  "properties": {
                                    "filter_state_changes": {
                                      "description": "Only emit notifications when the window manager state has changed",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocketWithOptions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ApplicationSpecificConfigurationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NotificationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SocketSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StaticConfigSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GenerateStaticConfig"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DebugWindow"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Execute a custom command. CMD (%variable%), Bash ($variable) and PowerShell ($Env:variable) variables will be resolved. Example: `komorebic toggle-pause`",
              "type": "object",
              "required": [
                "Command"
              ],
              "properties": {
                "Command": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "on_middle_click": {
          "description": "Command to send on middle button click",
          "oneOf": [
            {
              "description": "Send a message to the komorebi client. By default, a batch of messages are sent in the following order: FocusMonitorAtCursor => MouseFollowsFocus(false) => {message} => MouseFollowsFocus({original.value})\n\nExample: ```json \"on_extra2_click\": { \"message\": { \"type\": \"NewWorkspace\" } }, ``` or: ```json \"on_middle_click\": { \"focus_monitor_at_cursor\": false, \"ignore_mouse_follows_focus\": false, \"message\": { \"type\": \"TogglePause\" } } ``` or: ```json \"on_scroll_up\": { \"message\": { \"type\": \"CycleFocusWorkspace\", \"content\": \"Previous\" } } ```",
              "type": "object",
              "required": [
                "Komorebi"
              ],
              "properties": {
                "Komorebi": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "focus_monitor_at_cursor": {
                      "description": "Send the FocusMonitorAtCursor message (default:true)",
                      "type": "boolean"
                    },
                    "ignore_mouse_follows_focus": {
                      "description": "Wrap the {message} with a MouseFollowsFocus(false) and MouseFollowsFocus({original.value}) message (default:true)",
                      "type": "boolean"
                    },
                    "message": {
                      "description": "The message to send to the komorebi client",
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStackIndex"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusStackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Left",
                                    "Right",
                                    "Up",
                                    "Down"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowEdge"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Horizontal",
                                    "Vertical",
                                    "HorizontalAndVertical"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowAxis"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWorkspaceToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWorkspaceToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SwapWorkspacesToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ForceFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Close"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Minimize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Promote"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EagerFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "LockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnlockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleLock"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloat"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMonocle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMaximize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "END OF LIFE FEATURE: Use the SW_HIDE flag to hide windows when switching workspaces (has issues with Electron apps)",
                                  "type": "string",
                                  "enum": [
                                    "Hide"
                                  ]
                                },
                                {
                                  "description": "Use the SW_MINIMIZE flag to hide windows when switching workspaces (has issues with frequent workspace switching)",
                                  "type": "string",
                                  "enum": [
                                    "Minimize"
                                  ]
                                },
                                {
                                  "description": "Use the undocumented SetCloak Win32 function to hide windows when switching workspaces",
                                  "type": "string",
                                  "enum": [
                                    "Cloak"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WindowHidingBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleCrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Swap the window container with the window container at the edge of the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Swap"
                                  ]
                                },
                                {
                                  "description": "Insert the window container into the focused workspace on the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Insert"
                                  ]
                                },
                                {
                                  "description": "Do nothing if trying to move a window container in the direction of an adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Process komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "Op"
                                  ]
                                },
                                {
                                  "description": "Ignore komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanagedWindowOperationBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "BSP",
                                "Columns",
                                "Rows",
                                "VerticalStack",
                                "HorizontalStack",
                                "UltrawideVerticalStack",
                                "Grid",
                                "RightMainVerticalStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Horizontal",
                                "Vertical",
                                "HorizontalAndVertical"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FlipLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 5,
                              "minItems": 5
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DisplayIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureNamedWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NewWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Stop"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StopIgnoreRestore"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "TogglePause"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Retile"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "RetileWithResizeDimensions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickSave"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickLoad"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Save"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Load"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusEmptyWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorAtCursor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CloseWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumbers"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceName"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceLayer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReplaceConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadStaticConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WatchConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CompleteConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AltFocusHack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A theme from catppuccin-egui",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Yellow)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Pink)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Catppuccin theme (theme previews: https://github.com/catppuccin/catppuccin)",
                                      "type": "string",
                                      "enum": [
                                        "Frappe",
                                        "Latte",
                                        "Macchiato",
                                        "Mocha"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Catppuccin"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Text)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Red)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A theme from base16-egui-themes",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Base16 theme (theme previews: https://tinted-theming.github.io/tinted-gallery/)",
                                      "type": "string",
                                      "enum": [
                                        "3024",
                                        "Apathy",
                                        "Apprentice",
                                        "Ashes",
                                        "AtelierCaveLight",
                                        "AtelierCave",
                                        "AtelierDuneLight",
                                        "AtelierDune",
                                        "AtelierEstuaryLight",
                                        "AtelierEstuary",
                                        "AtelierForestLight",
                                        "AtelierForest",
                                        "AtelierHeathLight",
                                        "AtelierHeath",
                                        "AtelierLakesideLight",
                                        "AtelierLakeside",
                                        "AtelierPlateauLight",
                                        "AtelierPlateau",
                                        "AtelierSavannaLight",
                                        "AtelierSavanna",
                                        "AtelierSeasideLight",
                                        "AtelierSeaside",
                                        "AtelierSulphurpoolLight",
                                        "AtelierSulphurpool",
                                        "Atlas",
                                        "AyuDark",
                                        "AyuLight",
                                        "AyuMirage",
                                        "Aztec",
                                        "Bespin",
                                        "BlackMetalBathory",
                                        "BlackMetalBurzum",
                                        "BlackMetalDarkFuneral",
                                        "BlackMetalGorgoroth",
                                        "BlackMetalImmortal",
                                        "BlackMetalKhold",
                                        "BlackMetalMarduk",
                                        "BlackMetalMayhem",
                                        "BlackMetalNile",
                                        "BlackMetalVenom",
                                        "BlackMetal",
                                        "Blueforest",
                                        "Blueish",
                                        "Brewer",
                                        "Bright",
                                        "Brogrammer",
                                        "BrushtreesDark",
                                        "Brushtrees",
                                        "Caroline",
                                        "CatppuccinFrappe",
                                        "CatppuccinLatte",
                                        "CatppuccinMacchiato",
                                        "CatppuccinMocha",
                                        "Chalk",
                                        "Circus",
                                        "ClassicDark",
                                        "ClassicLight",
                                        "Codeschool",
                                        "Colors",
                                        "Cupcake",
                                        "Cupertino",
                                        "DaOneBlack",
                                        "DaOneGray",
                                        "DaOneOcean",
                                        "DaOnePaper",
                                        "DaOneSea",
                                        "DaOneWhite",
                                        "DanqingLight",
                                        "Danqing",
                                        "Darcula",
                                        "Darkmoss",
                                        "Darktooth",
                                        "Darkviolet",
                                        "Decaf",
                                        "DefaultDark",
                                        "DefaultLight",
                                        "Dirtysea",
                                        "Dracula",
                                        "EdgeDark",
                                        "EdgeLight",
                                        "Eighties",
                                        "EmbersLight",
                                        "Embers",
                                        "Emil",
                                        "EquilibriumDark",
                                        "EquilibriumGrayDark",
                                        "EquilibriumGrayLight",
                                        "EquilibriumLight",
                                        "Eris",
                                        "Espresso",
                                        "EvaDim",
                                        "Eva",
                                        "EvenokDark",
                                        "EverforestDarkHard",
                                        "Everforest",
                                        "Flat",
                                        "Framer",
                                        "FruitSoda",
                                        "Gigavolt",
                                        "Github",
                                        "GoogleDark",
                                        "GoogleLight",
                                        "Gotham",
                                        "GrayscaleDark",
                                        "GrayscaleLight",
                                        "Greenscreen",
                                        "Gruber",
                                        "GruvboxDarkHard",
                                        "GruvboxDarkMedium",
                                        "GruvboxDarkPale",
                                        "GruvboxDarkSoft",
                                        "GruvboxLightHard",
                                        "GruvboxLightMedium",
                                        "GruvboxLightSoft",
                                        "GruvboxMaterialDarkHard",
                                        "GruvboxMaterialDarkMedium",
                                        "GruvboxMaterialDarkSoft",
                                        "GruvboxMaterialLightHard",
                                        "GruvboxMaterialLightMedium",
                                        "GruvboxMaterialLightSoft",
                                        "Hardcore",
                                        "Harmonic16Dark",
                                        "Harmonic16Light",
                                        "HeetchLight",
                                        "Heetch",
                                        "Helios",
                                        "Hopscotch",
                                        "HorizonDark",
                                        "HorizonLight",
                                        "HorizonTerminalDark",
                                        "HorizonTerminalLight",
                                        "HumanoidDark",
                                        "HumanoidLight",
                                        "IaDark",
                                        "IaLight",
                                        "Icy",
                                        "Irblack",
                                        "Isotope",
                                        "Jabuti",
                                        "Kanagawa",
                                        "Katy",
                                        "Kimber",
                                        "Lime",
                                        "Macintosh",
                                        "Marrakesh",
                                        "Materia",
                                        "MaterialDarker",
                                        "MaterialLighter",
                                        "MaterialPalenight",
                                        "MaterialVivid",
                                        "Material",
                                        "MeasuredDark",
                                        "MeasuredLight",
                                        "MellowPurple",
                                        "MexicoLight",
                                        "Mocha",
                                        "Monokai",
                                        "Moonlight",
                                        "Mountain",
                                        "Nebula",
                                        "NordLight",
                                        "Nord",
                                        "Nova",
                                        "Ocean",
                                        "Oceanicnext",
                                        "OneLight",
                                        "OnedarkDark",
                                        "Onedark",
                                        "OutrunDark",
                                        "OxocarbonDark",
                                        "OxocarbonLight",
                                        "Pandora",
                                        "PapercolorDark",
                                        "PapercolorLight",
                                        "Paraiso",
                                        "Pasque",
                                        "Phd",
                                        "Pico",
                                        "Pinky",
                                        "Pop",
                                        "Porple",
                                        "PreciousDarkEleven",
                                        "PreciousDarkFifteen",
                                        "PreciousLightWarm",
                                        "PreciousLightWhite",
                                        "PrimerDarkDimmed",
                                        "PrimerDark",
                                        "PrimerLight",
                                        "Purpledream",
                                        "Qualia",
                                        "Railscasts",
                                        "Rebecca",
                                        "RosePineDawn",
                                        "RosePineMoon",
                                        "RosePine",
                                        "Saga",
                                        "Sagelight",
                                        "Sakura",
                                        "Sandcastle",
                                        "SelenizedBlack",
                                        "SelenizedDark",
                                        "SelenizedLight",
                                        "SelenizedWhite",
                                        "Seti",
                                        "ShadesOfPurple",
                                        "ShadesmearDark",
                                        "ShadesmearLight",
                                        "Shapeshifter",
                                        "SilkDark",
                                        "SilkLight",
                                        "Snazzy",
                                        "SolarflareLight",
                                        "Solarflare",
                                        "SolarizedDark",
                                        "SolarizedLight",
                                        "Spaceduck",
                                        "Spacemacs",
                                        "Sparky",
                                        "StandardizedDark",
                                        "StandardizedLight",
                                        "Stella",
                                        "StillAlive",
                                        "Summercamp",
                                        "SummerfruitDark",
                                        "SummerfruitLight",
                                        "SynthMidnightDark",
                                        "SynthMidnightLight",
                                        "Tango",
                                        "Tarot",
                                        "Tender",
                                        "TerracottaDark",
                                        "Terracotta",
                                        "TokyoCityDark",
                                        "TokyoCityLight",
                                        "TokyoCityTerminalDark",
                                        "TokyoCityTerminalLight",
                                        "TokyoNightDark",
                                        "TokyoNightLight",
                                        "TokyoNightMoon",
                                        "TokyoNightStorm",
                                        "TokyoNightTerminalDark",
                                        "TokyoNightTerminalLight",
                                        "TokyoNightTerminalStorm",
                                        "TokyodarkTerminal",
                                        "Tokyodark",
                                        "TomorrowNightEighties",
                                        "TomorrowNight",
                                        "Tomorrow",
                                        "Tube",
                                        "Twilight",
                                        "UnikittyDark",
                                        "UnikittyLight",
                                        "UnikittyReversible",
                                        "Uwunicorn",
                                        "Vesper",
                                        "Vice",
                                        "Vulcan",
                                        "Windows10Light",
                                        "Windows10",
                                        "Windows95Light",
                                        "Windows95",
                                        "WindowsHighcontrastLight",
                                        "WindowsHighcontrast",
                                        "WindowsNtLight",
                                        "WindowsNt",
                                        "Woodland",
                                        "XcodeDusk",
                                        "Zenbones",
                                        "Zenburn"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Base16"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A custom Base16 theme",
                                  "type": "object",
                                  "required": [
                                    "colours",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "colours": {
                                      "description": "Colours of the custom Base16 theme palette",
                                      "type": "object",
                                      "required": [
                                        "base_00",
                                        "base_01",
                                        "base_02",
                                        "base_03",
                                        "base_04",
                                        "base_05",
                                        "base_06",
                                        "base_07",
                                        "base_08",
                                        "base_09",
                                        "base_0a",
                                        "base_0b",
                                        "base_0c",
                                        "base_0d",
                                        "base_0e",
                                        "base_0f"
                                      ],
                                      "properties": {
                                        "base_00": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_01": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_02": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_03": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_04": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_05": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_06": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_07": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_08": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_09": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0a": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0b": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0c": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0d": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0e": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0f": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Custom"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Theme"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Animation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint64",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationDuration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint64",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationFps"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "Linear",
                                        "EaseInSine",
                                        "EaseOutSine",
                                        "EaseInOutSine",
                                        "EaseInQuad",
                                        "EaseOutQuad",
                                        "EaseInOutQuad",
                                        "EaseInCubic",
                                        "EaseInOutCubic",
                                        "EaseInQuart",
                                        "EaseOutQuart",
                                        "EaseInOutQuart",
                                        "EaseInQuint",
                                        "EaseOutQuint",
                                        "EaseInOutQuint",
                                        "EaseInExpo",
                                        "EaseOutExpo",
                                        "EaseInOutExpo",
                                        "EaseInCirc",
                                        "EaseOutCirc",
                                        "EaseInOutCirc",
                                        "EaseInBack",
                                        "EaseOutBack",
                                        "EaseInOutBack",
                                        "EaseInElastic",
                                        "EaseOutElastic",
                                        "EaseInOutElastic",
                                        "EaseInBounce",
                                        "EaseOutBounce",
                                        "EaseInOutBounce"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "CubicBezier"
                                      ],
                                      "properties": {
                                        "CubicBezier": {
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          ],
                                          "maxItems": 4,
                                          "minItems": 4
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Border"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Single",
                                    "Stack",
                                    "Monocle",
                                    "Unfocused",
                                    "UnfocusedLocked",
                                    "Floating"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the system border style",
                                  "type": "string",
                                  "enum": [
                                    "System"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 11-style rounded borders",
                                  "type": "string",
                                  "enum": [
                                    "Rounded"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 10-style square borders",
                                  "type": "string",
                                  "enum": [
                                    "Square"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the adjustable komorebi border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "Use the thin Windows accent border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderImplementation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Transparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTransparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint8",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "TransparencyAlpha"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InvisibleBorders"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Always",
                                "Never",
                                "OnStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarMode"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Process",
                                "Title"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarLabel"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarUnfocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarBackgroundColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarHeight"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarTabWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontSize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontFamily"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "bottom",
                                    "left",
                                    "right",
                                    "top"
                                  ],
                                  "properties": {
                                    "bottom": {
                                      "description": "The bottom point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "left": {
                                      "description": "The left point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "right": {
                                      "description": "The right point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "top": {
                                      "description": "The top point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowBasedWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeDelta"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialNamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearAllWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnforceWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearSessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IgnoreRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyObjectNameChangeApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyTrayApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyLayeredApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyBorderOverflowApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "State"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GlobalState"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "VisibleWindows"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorInformation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "FocusedMonitorIndex",
                                "FocusedWorkspaceIndex",
                                "FocusedContainerIndex",
                                "FocusedWindowIndex",
                                "FocusedWorkspaceName",
                                "FocusedWorkspaceLayout",
                                "Version"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Query"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                      "type": "string",
                                      "enum": [
                                        "Komorebi"
                                      ]
                                    },
                                    {
                                      "description": "The native (legacy) Windows FFM implementation",
                                      "type": "string",
                                      "enum": [
                                        "Windows"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "The native (legacy) Windows FFM implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveTitleBar"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTitleBars"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "filter_state_changes"
                                  ],
                                  "properties": {
                                    "filter_state_changes": {
                                      "description": "Only emit notifications when the window manager state has changed",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocketWithOptions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ApplicationSpecificConfigurationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NotificationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SocketSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StaticConfigSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GenerateStaticConfig"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DebugWindow"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Execute a custom command. CMD (%variable%), Bash ($variable) and PowerShell ($Env:variable) variables will be resolved. Example: `komorebic toggle-pause`",
              "type": "object",
              "required": [
                "Command"
              ],
              "properties": {
                "Command": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "on_primary_double_click": {
          "description": "Command to send on primary/left double button click",
          "oneOf": [
            {
              "description": "Send a message to the komorebi client. By default, a batch of messages are sent in the following order: FocusMonitorAtCursor => MouseFollowsFocus(false) => {message} => MouseFollowsFocus({original.value})\n\nExample: ```json \"on_extra2_click\": { \"message\": { \"type\": \"NewWorkspace\" } }, ``` or: ```json \"on_middle_click\": { \"focus_monitor_at_cursor\": false, \"ignore_mouse_follows_focus\": false, \"message\": { \"type\": \"TogglePause\" } } ``` or: ```json \"on_scroll_up\": { \"message\": { \"type\": \"CycleFocusWorkspace\", \"content\": \"Previous\" } } ```",
              "type": "object",
              "required": [
                "Komorebi"
              ],
              "properties": {
                "Komorebi": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "focus_monitor_at_cursor": {
                      "description": "Send the FocusMonitorAtCursor message (default:true)",
                      "type": "boolean"
                    },
                    "ignore_mouse_follows_focus": {
                      "description": "Wrap the {message} with a MouseFollowsFocus(false) and MouseFollowsFocus({original.value}) message (default:true)",
                      "type": "boolean"
                    },
                    "message": {
                      "description": "The message to send to the komorebi client",
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStackIndex"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusStackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Left",
                                    "Right",
                                    "Up",
                                    "Down"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowEdge"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Horizontal",
                                    "Vertical",
                                    "HorizontalAndVertical"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowAxis"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWorkspaceToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWorkspaceToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SwapWorkspacesToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ForceFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Close"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Minimize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Promote"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EagerFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "LockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnlockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleLock"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloat"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMonocle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMaximize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "END OF LIFE FEATURE: Use the SW_HIDE flag to hide windows when switching workspaces (has issues with Electron apps)",
                                  "type": "string",
                                  "enum": [
                                    "Hide"
                                  ]
                                },
                                {
                                  "description": "Use the SW_MINIMIZE flag to hide windows when switching workspaces (has issues with frequent workspace switching)",
                                  "type": "string",
                                  "enum": [
                                    "Minimize"
                                  ]
                                },
                                {
                                  "description": "Use the undocumented SetCloak Win32 function to hide windows when switching workspaces",
                                  "type": "string",
                                  "enum": [
                                    "Cloak"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WindowHidingBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleCrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Swap the window container with the window container at the edge of the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Swap"
                                  ]
                                },
                                {
                                  "description": "Insert the window container into the focused workspace on the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Insert"
                                  ]
                                },
                                {
                                  "description": "Do nothing if trying to move a window container in the direction of an adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Process komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "Op"
                                  ]
                                },
                                {
                                  "description": "Ignore komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanagedWindowOperationBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "BSP",
                                "Columns",
                                "Rows",
                                "VerticalStack",
                                "HorizontalStack",
                                "UltrawideVerticalStack",
                                "Grid",
                                "RightMainVerticalStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Horizontal",
                                "Vertical",
                                "HorizontalAndVertical"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FlipLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 5,
                              "minItems": 5
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DisplayIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureNamedWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NewWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Stop"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StopIgnoreRestore"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "TogglePause"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Retile"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "RetileWithResizeDimensions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickSave"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickLoad"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Save"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Load"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusEmptyWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorAtCursor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CloseWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumbers"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceName"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceLayer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReplaceConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadStaticConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WatchConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CompleteConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AltFocusHack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A theme from catppuccin-egui",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Yellow)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Pink)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Catppuccin theme (theme previews: https://github.com/catppuccin/catppuccin)",
                                      "type": "string",
                                      "enum": [
                                        "Frappe",
                                        "Latte",
                                        "Macchiato",
                                        "Mocha"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Catppuccin"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Text)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Red)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A theme from base16-egui-themes",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Base16 theme (theme previews: https://tinted-theming.github.io/tinted-gallery/)",
                                      "type": "string",
                                      "enum": [
                                        "3024",
                                        "Apathy",
                                        "Apprentice",
                                        "Ashes",
                                        "AtelierCaveLight",
                                        "AtelierCave",
                                        "AtelierDuneLight",
                                        "AtelierDune",
                                        "AtelierEstuaryLight",
                                        "AtelierEstuary",
                                        "AtelierForestLight",
                                        "AtelierForest",
                                        "AtelierHeathLight",
                                        "AtelierHeath",
                                        "AtelierLakesideLight",
                                        "AtelierLakeside",
                                        "AtelierPlateauLight",
                                        "AtelierPlateau",
                                        "AtelierSavannaLight",
                                        "AtelierSavanna",
                                        "AtelierSeasideLight",
                                        "AtelierSeaside",
                                        "AtelierSulphurpoolLight",
                                        "AtelierSulphurpool",
                                        "Atlas",
                                        "AyuDark",
                                        "AyuLight",
                                        "AyuMirage",
                                        "Aztec",
                                        "Bespin",
                                        "BlackMetalBathory",
                                        "BlackMetalBurzum",
                                        "BlackMetalDarkFuneral",
                                        "BlackMetalGorgoroth",
                                        "BlackMetalImmortal",
                                        "BlackMetalKhold",
                                        "BlackMetalMarduk",
                                        "BlackMetalMayhem",
                                        "BlackMetalNile",
                                        "BlackMetalVenom",
                                        "BlackMetal",
                                        "Blueforest",
                                        "Blueish",
                                        "Brewer",
                                        "Bright",
                                        "Brogrammer",
                                        "BrushtreesDark",
                                        "Brushtrees",
                                        "Caroline",
                                        "CatppuccinFrappe",
                                        "CatppuccinLatte",
                                        "CatppuccinMacchiato",
                                        "CatppuccinMocha",
                                        "Chalk",
                                        "Circus",
                                        "ClassicDark",
                                        "ClassicLight",
                                        "Codeschool",
                                        "Colors",
                                        "Cupcake",
                                        "Cupertino",
                                        "DaOneBlack",
                                        "DaOneGray",
                                        "DaOneOcean",
                                        "DaOnePaper",
                                        "DaOneSea",
                                        "DaOneWhite",
                                        "DanqingLight",
                                        "Danqing",
                                        "Darcula",
                                        "Darkmoss",
                                        "Darktooth",
                                        "Darkviolet",
                                        "Decaf",
                                        "DefaultDark",
                                        "DefaultLight",
                                        "Dirtysea",
                                        "Dracula",
                                        "EdgeDark",
                                        "EdgeLight",
                                        "Eighties",
                                        "EmbersLight",
                                        "Embers",
                                        "Emil",
                                        "EquilibriumDark",
                                        "EquilibriumGrayDark",
                                        "EquilibriumGrayLight",
                                        "EquilibriumLight",
                                        "Eris",
                                        "Espresso",
                                        "EvaDim",
                                        "Eva",
                                        "EvenokDark",
                                        "EverforestDarkHard",
                                        "Everforest",
                                        "Flat",
                                        "Framer",
                                        "FruitSoda",
                                        "Gigavolt",
                                        "Github",
                                        "GoogleDark",
                                        "GoogleLight",
                                        "Gotham",
                                        "GrayscaleDark",
                                        "GrayscaleLight",
                                        "Greenscreen",
                                        "Gruber",
                                        "GruvboxDarkHard",
                                        "GruvboxDarkMedium",
                                        "GruvboxDarkPale",
                                        "GruvboxDarkSoft",
                                        "GruvboxLightHard",
                                        "GruvboxLightMedium",
                                        "GruvboxLightSoft",
                                        "GruvboxMaterialDarkHard",
                                        "GruvboxMaterialDarkMedium",
                                        "GruvboxMaterialDarkSoft",
                                        "GruvboxMaterialLightHard",
                                        "GruvboxMaterialLightMedium",
                                        "GruvboxMaterialLightSoft",
                                        "Hardcore",
                                        "Harmonic16Dark",
                                        "Harmonic16Light",
                                        "HeetchLight",
                                        "Heetch",
                                        "Helios",
                                        "Hopscotch",
                                        "HorizonDark",
                                        "HorizonLight",
                                        "HorizonTerminalDark",
                                        "HorizonTerminalLight",
                                        "HumanoidDark",
                                        "HumanoidLight",
                                        "IaDark",
                                        "IaLight",
                                        "Icy",
                                        "Irblack",
                                        "Isotope",
                                        "Jabuti",
                                        "Kanagawa",
                                        "Katy",
                                        "Kimber",
                                        "Lime",
                                        "Macintosh",
                                        "Marrakesh",
                                        "Materia",
                                        "MaterialDarker",
                                        "MaterialLighter",
                                        "MaterialPalenight",
                                        "MaterialVivid",
                                        "Material",
                                        "MeasuredDark",
                                        "MeasuredLight",
                                        "MellowPurple",
                                        "MexicoLight",
                                        "Mocha",
                                        "Monokai",
                                        "Moonlight",
                                        "Mountain",
                                        "Nebula",
                                        "NordLight",
                                        "Nord",
                                        "Nova",
                                        "Ocean",
                                        "Oceanicnext",
                                        "OneLight",
                                        "OnedarkDark",
                                        "Onedark",
                                        "OutrunDark",
                                        "OxocarbonDark",
                                        "OxocarbonLight",
                                        "Pandora",
                                        "PapercolorDark",
                                        "PapercolorLight",
                                        "Paraiso",
                                        "Pasque",
                                        "Phd",
                                        "Pico",
                                        "Pinky",
                                        "Pop",
                                        "Porple",
                                        "PreciousDarkEleven",
                                        "PreciousDarkFifteen",
                                        "PreciousLightWarm",
                                        "PreciousLightWhite",
                                        "PrimerDarkDimmed",
                                        "PrimerDark",
                                        "PrimerLight",
                                        "Purpledream",
                                        "Qualia",
                                        "Railscasts",
                                        "Rebecca",
                                        "RosePineDawn",
                                        "RosePineMoon",
                                        "RosePine",
                                        "Saga",
                                        "Sagelight",
                                        "Sakura",
                                        "Sandcastle",
                                        "SelenizedBlack",
                                        "SelenizedDark",
                                        "SelenizedLight",
                                        "SelenizedWhite",
                                        "Seti",
                                        "ShadesOfPurple",
                                        "ShadesmearDark",
                                        "ShadesmearLight",
                                        "Shapeshifter",
                                        "SilkDark",
                                        "SilkLight",
                                        "Snazzy",
                                        "SolarflareLight",
                                        "Solarflare",
                                        "SolarizedDark",
                                        "SolarizedLight",
                                        "Spaceduck",
                                        "Spacemacs",
                                        "Sparky",
                                        "StandardizedDark",
                                        "StandardizedLight",
                                        "Stella",
                                        "StillAlive",
                                        "Summercamp",
                                        "SummerfruitDark",
                                        "SummerfruitLight",
                                        "SynthMidnightDark",
                                        "SynthMidnightLight",
                                        "Tango",
                                        "Tarot",
                                        "Tender",
                                        "TerracottaDark",
                                        "Terracotta",
                                        "TokyoCityDark",
                                        "TokyoCityLight",
                                        "TokyoCityTerminalDark",
                                        "TokyoCityTerminalLight",
                                        "TokyoNightDark",
                                        "TokyoNightLight",
                                        "TokyoNightMoon",
                                        "TokyoNightStorm",
                                        "TokyoNightTerminalDark",
                                        "TokyoNightTerminalLight",
                                        "TokyoNightTerminalStorm",
                                        "TokyodarkTerminal",
                                        "Tokyodark",
                                        "TomorrowNightEighties",
                                        "TomorrowNight",
                                        "Tomorrow",
                                        "Tube",
                                        "Twilight",
                                        "UnikittyDark",
                                        "UnikittyLight",
                                        "UnikittyReversible",
                                        "Uwunicorn",
                                        "Vesper",
                                        "Vice",
                                        "Vulcan",
                                        "Windows10Light",
                                        "Windows10",
                                        "Windows95Light",
                                        "Windows95",
                                        "WindowsHighcontrastLight",
                                        "WindowsHighcontrast",
                                        "WindowsNtLight",
                                        "WindowsNt",
                                        "Woodland",
                                        "XcodeDusk",
                                        "Zenbones",
                                        "Zenburn"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Base16"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A custom Base16 theme",
                                  "type": "object",
                                  "required": [
                                    "colours",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "colours": {
                                      "description": "Colours of the custom Base16 theme palette",
                                      "type": "object",
                                      "required": [
                                        "base_00",
                                        "base_01",
                                        "base_02",
                                        "base_03",
                                        "base_04",
                                        "base_05",
                                        "base_06",
                                        "base_07",
                                        "base_08",
                                        "base_09",
                                        "base_0a",
                                        "base_0b",
                                        "base_0c",
                                        "base_0d",
                                        "base_0e",
                                        "base_0f"
                                      ],
                                      "properties": {
                                        "base_00": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_01": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_02": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_03": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_04": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_05": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_06": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_07": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_08": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_09": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0a": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0b": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0c": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0d": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0e": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0f": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Custom"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Theme"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Animation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint64",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationDuration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint64",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationFps"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "Linear",
                                        "EaseInSine",
                                        "EaseOutSine",
                                        "EaseInOutSine",
                                        "EaseInQuad",
                                        "EaseOutQuad",
                                        "EaseInOutQuad",
                                        "EaseInCubic",
                                        "EaseInOutCubic",
                                        "EaseInQuart",
                                        "EaseOutQuart",
                                        "EaseInOutQuart",
                                        "EaseInQuint",
                                        "EaseOutQuint",
                                        "EaseInOutQuint",
                                        "EaseInExpo",
                                        "EaseOutExpo",
                                        "EaseInOutExpo",
                                        "EaseInCirc",
                                        "EaseOutCirc",
                                        "EaseInOutCirc",
                                        "EaseInBack",
                                        "EaseOutBack",
                                        "EaseInOutBack",
                                        "EaseInElastic",
                                        "EaseOutElastic",
                                        "EaseInOutElastic",
                                        "EaseInBounce",
                                        "EaseOutBounce",
                                        "EaseInOutBounce"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "CubicBezier"
                                      ],
                                      "properties": {
                                        "CubicBezier": {
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          ],
                                          "maxItems": 4,
                                          "minItems": 4
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Border"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Single",
                                    "Stack",
                                    "Monocle",
                                    "Unfocused",
                                    "UnfocusedLocked",
                                    "Floating"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the system border style",
                                  "type": "string",
                                  "enum": [
                                    "System"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 11-style rounded borders",
                                  "type": "string",
                                  "enum": [
                                    "Rounded"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 10-style square borders",
                                  "type": "string",
                                  "enum": [
                                    "Square"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the adjustable komorebi border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "Use the thin Windows accent border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderImplementation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Transparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTransparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint8",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "TransparencyAlpha"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InvisibleBorders"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Always",
                                "Never",
                                "OnStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarMode"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Process",
                                "Title"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarLabel"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarUnfocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarBackgroundColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarHeight"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarTabWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontSize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontFamily"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "bottom",
                                    "left",
                                    "right",
                                    "top"
                                  ],
                                  "properties": {
                                    "bottom": {
                                      "description": "The bottom point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "left": {
                                      "description": "The left point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "right": {
                                      "description": "The right point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "top": {
                                      "description": "The top point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowBasedWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeDelta"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialNamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearAllWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnforceWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearSessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IgnoreRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyObjectNameChangeApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyTrayApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyLayeredApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyBorderOverflowApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "State"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GlobalState"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "VisibleWindows"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorInformation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "FocusedMonitorIndex",
                                "FocusedWorkspaceIndex",
                                "FocusedContainerIndex",
                                "FocusedWindowIndex",
                                "FocusedWorkspaceName",
                                "FocusedWorkspaceLayout",
                                "Version"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Query"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                      "type": "string",
                                      "enum": [
                                        "Komorebi"
                                      ]
                                    },
                                    {
                                      "description": "The native (legacy) Windows FFM implementation",
                                      "type": "string",
                                      "enum": [
                                        "Windows"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "The native (legacy) Windows FFM implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveTitleBar"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTitleBars"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "filter_state_changes"
                                  ],
                                  "properties": {
                                    "filter_state_changes": {
                                      "description": "Only emit notifications when the window manager state has changed",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocketWithOptions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ApplicationSpecificConfigurationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NotificationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SocketSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StaticConfigSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GenerateStaticConfig"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DebugWindow"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Execute a custom command. CMD (%variable%), Bash ($variable) and PowerShell ($Env:variable) variables will be resolved. Example: `komorebic toggle-pause`",
              "type": "object",
              "required": [
                "Command"
              ],
              "properties": {
                "Command": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "on_scroll_down": {
          "description": "Command to send on scrolling down (every tick)",
          "oneOf": [
            {
              "description": "Send a message to the komorebi client. By default, a batch of messages are sent in the following order: FocusMonitorAtCursor => MouseFollowsFocus(false) => {message} => MouseFollowsFocus({original.value})\n\nExample: ```json \"on_extra2_click\": { \"message\": { \"type\": \"NewWorkspace\" } }, ``` or: ```json \"on_middle_click\": { \"focus_monitor_at_cursor\": false, \"ignore_mouse_follows_focus\": false, \"message\": { \"type\": \"TogglePause\" } } ``` or: ```json \"on_scroll_up\": { \"message\": { \"type\": \"CycleFocusWorkspace\", \"content\": \"Previous\" } } ```",
              "type": "object",
              "required": [
                "Komorebi"
              ],
              "properties": {
                "Komorebi": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "focus_monitor_at_cursor": {
                      "description": "Send the FocusMonitorAtCursor message (default:true)",
                      "type": "boolean"
                    },
                    "ignore_mouse_follows_focus": {
                      "description": "Wrap the {message} with a MouseFollowsFocus(false) and MouseFollowsFocus({original.value}) message (default:true)",
                      "type": "boolean"
                    },
                    "message": {
                      "description": "The message to send to the komorebi client",
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStackIndex"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusStackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Left",
                                    "Right",
                                    "Up",
                                    "Down"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowEdge"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Horizontal",
                                    "Vertical",
                                    "HorizontalAndVertical"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowAxis"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWorkspaceToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWorkspaceToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SwapWorkspacesToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ForceFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Close"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Minimize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Promote"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EagerFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "LockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnlockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleLock"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloat"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMonocle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMaximize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "END OF LIFE FEATURE: Use the SW_HIDE flag to hide windows when switching workspaces (has issues with Electron apps)",
                                  "type": "string",
                                  "enum": [
                                    "Hide"
                                  ]
                                },
                                {
                                  "description": "Use the SW_MINIMIZE flag to hide windows when switching workspaces (has issues with frequent workspace switching)",
                                  "type": "string",
                                  "enum": [
                                    "Minimize"
                                  ]
                                },
                                {
                                  "description": "Use the undocumented SetCloak Win32 function to hide windows when switching workspaces",
                                  "type": "string",
                                  "enum": [
                                    "Cloak"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WindowHidingBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleCrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Swap the window container with the window container at the edge of the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Swap"
                                  ]
                                },
                                {
                                  "description": "Insert the window container into the focused workspace on the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Insert"
                                  ]
                                },
                                {
                                  "description": "Do nothing if trying to move a window container in the direction of an adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Process komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "Op"
                                  ]
                                },
                                {
                                  "description": "Ignore komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanagedWindowOperationBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "BSP",
                                "Columns",
                                "Rows",
                                "VerticalStack",
                                "HorizontalStack",
                                "UltrawideVerticalStack",
                                "Grid",
                                "RightMainVerticalStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Horizontal",
                                "Vertical",
                                "HorizontalAndVertical"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FlipLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 5,
                              "minItems": 5
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DisplayIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureNamedWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NewWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Stop"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StopIgnoreRestore"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "TogglePause"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Retile"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "RetileWithResizeDimensions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickSave"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickLoad"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Save"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Load"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusEmptyWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorAtCursor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CloseWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumbers"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceName"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceLayer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReplaceConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadStaticConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WatchConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CompleteConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AltFocusHack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A theme from catppuccin-egui",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Yellow)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Pink)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Catppuccin theme (theme previews: https://github.com/catppuccin/catppuccin)",
                                      "type": "string",
                                      "enum": [
                                        "Frappe",
                                        "Latte",
                                        "Macchiato",
                                        "Mocha"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Catppuccin"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Text)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Red)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A theme from base16-egui-themes",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Base16 theme (theme previews: https://tinted-theming.github.io/tinted-gallery/)",
                                      "type": "string",
                                      "enum": [
                                        "3024",
                                        "Apathy",
                                        "Apprentice",
                                        "Ashes",
                                        "AtelierCaveLight",
                                        "AtelierCave",
                                        "AtelierDuneLight",
                                        "AtelierDune",
                                        "AtelierEstuaryLight",
                                        "AtelierEstuary",
                                        "AtelierForestLight",
                                        "AtelierForest",
                                        "AtelierHeathLight",
                                        "AtelierHeath",
                                        "AtelierLakesideLight",
                                        "AtelierLakeside",
                                        "AtelierPlateauLight",
                                        "AtelierPlateau",
                                        "AtelierSavannaLight",
                                        "AtelierSavanna",
                                        "AtelierSeasideLight",
                                        "AtelierSeaside",
                                        "AtelierSulphurpoolLight",
                                        "AtelierSulphurpool",
                                        "Atlas",
                                        "AyuDark",
                                        "AyuLight",
                                        "AyuMirage",
                                        "Aztec",
                                        "Bespin",
                                        "BlackMetalBathory",
                                        "BlackMetalBurzum",
                                        "BlackMetalDarkFuneral",
                                        "BlackMetalGorgoroth",
                                        "BlackMetalImmortal",
                                        "BlackMetalKhold",
                                        "BlackMetalMarduk",
                                        "BlackMetalMayhem",
                                        "BlackMetalNile",
                                        "BlackMetalVenom",
                                        "BlackMetal",
                                        "Blueforest",
                                        "Blueish",
                                        "Brewer",
                                        "Bright",
                                        "Brogrammer",
                                        "BrushtreesDark",
                                        "Brushtrees",
                                        "Caroline",
                                        "CatppuccinFrappe",
                                        "CatppuccinLatte",
                                        "CatppuccinMacchiato",
                                        "CatppuccinMocha",
                                        "Chalk",
                                        "Circus",
                                        "ClassicDark",
                                        "ClassicLight",
                                        "Codeschool",
                                        "Colors",
                                        "Cupcake",
                                        "Cupertino",
                                        "DaOneBlack",
                                        "DaOneGray",
                                        "DaOneOcean",
                                        "DaOnePaper",
                                        "DaOneSea",
                                        "DaOneWhite",
                                        "DanqingLight",
                                        "Danqing",
                                        "Darcula",
                                        "Darkmoss",
                                        "Darktooth",
                                        "Darkviolet",
                                        "Decaf",
                                        "DefaultDark",
                                        "DefaultLight",
                                        "Dirtysea",
                                        "Dracula",
                                        "EdgeDark",
                                        "EdgeLight",
                                        "Eighties",
                                        "EmbersLight",
                                        "Embers",
                                        "Emil",
                                        "EquilibriumDark",
                                        "EquilibriumGrayDark",
                                        "EquilibriumGrayLight",
                                        "EquilibriumLight",
                                        "Eris",
                                        "Espresso",
                                        "EvaDim",
                                        "Eva",
                                        "EvenokDark",
                                        "EverforestDarkHard",
                                        "Everforest",
                                        "Flat",
                                        "Framer",
                                        "FruitSoda",
                                        "Gigavolt",
                                        "Github",
                                        "GoogleDark",
                                        "GoogleLight",
                                        "Gotham",
                                        "GrayscaleDark",
                                        "GrayscaleLight",
                                        "Greenscreen",
                                        "Gruber",
                                        "GruvboxDarkHard",
                                        "GruvboxDarkMedium",
                                        "GruvboxDarkPale",
                                        "GruvboxDarkSoft",
                                        "GruvboxLightHard",
                                        "GruvboxLightMedium",
                                        "GruvboxLightSoft",
                                        "GruvboxMaterialDarkHard",
                                        "GruvboxMaterialDarkMedium",
                                        "GruvboxMaterialDarkSoft",
                                        "GruvboxMaterialLightHard",
                                        "GruvboxMaterialLightMedium",
                                        "GruvboxMaterialLightSoft",
                                        "Hardcore",
                                        "Harmonic16Dark",
                                        "Harmonic16Light",
                                        "HeetchLight",
                                        "Heetch",
                                        "Helios",
                                        "Hopscotch",
                                        "HorizonDark",
                                        "HorizonLight",
                                        "HorizonTerminalDark",
                                        "HorizonTerminalLight",
                                        "HumanoidDark",
                                        "HumanoidLight",
                                        "IaDark",
                                        "IaLight",
                                        "Icy",
                                        "Irblack",
                                        "Isotope",
                                        "Jabuti",
                                        "Kanagawa",
                                        "Katy",
                                        "Kimber",
                                        "Lime",
                                        "Macintosh",
                                        "Marrakesh",
                                        "Materia",
                                        "MaterialDarker",
                                        "MaterialLighter",
                                        "MaterialPalenight",
                                        "MaterialVivid",
                                        "Material",
                                        "MeasuredDark",
                                        "MeasuredLight",
                                        "MellowPurple",
                                        "MexicoLight",
                                        "Mocha",
                                        "Monokai",
                                        "Moonlight",
                                        "Mountain",
                                        "Nebula",
                                        "NordLight",
                                        "Nord",
                                        "Nova",
                                        "Ocean",
                                        "Oceanicnext",
                                        "OneLight",
                                        "OnedarkDark",
                                        "Onedark",
                                        "OutrunDark",
                                        "OxocarbonDark",
                                        "OxocarbonLight",
                                        "Pandora",
                                        "PapercolorDark",
                                        "PapercolorLight",
                                        "Paraiso",
                                        "Pasque",
                                        "Phd",
                                        "Pico",
                                        "Pinky",
                                        "Pop",
                                        "Porple",
                                        "PreciousDarkEleven",
                                        "PreciousDarkFifteen",
                                        "PreciousLightWarm",
                                        "PreciousLightWhite",
                                        "PrimerDarkDimmed",
                                        "PrimerDark",
                                        "PrimerLight",
                                        "Purpledream",
                                        "Qualia",
                                        "Railscasts",
                                        "Rebecca",
                                        "RosePineDawn",
                                        "RosePineMoon",
                                        "RosePine",
                                        "Saga",
                                        "Sagelight",
                                        "Sakura",
                                        "Sandcastle",
                                        "SelenizedBlack",
                                        "SelenizedDark",
                                        "SelenizedLight",
                                        "SelenizedWhite",
                                        "Seti",
                                        "ShadesOfPurple",
                                        "ShadesmearDark",
                                        "ShadesmearLight",
                                        "Shapeshifter",
                                        "SilkDark",
                                        "SilkLight",
                                        "Snazzy",
                                        "SolarflareLight",
                                        "Solarflare",
                                        "SolarizedDark",
                                        "SolarizedLight",
                                        "Spaceduck",
                                        "Spacemacs",
                                        "Sparky",
                                        "StandardizedDark",
                                        "StandardizedLight",
                                        "Stella",
                                        "StillAlive",
                                        "Summercamp",
                                        "SummerfruitDark",
                                        "SummerfruitLight",
                                        "SynthMidnightDark",
                                        "SynthMidnightLight",
                                        "Tango",
                                        "Tarot",
                                        "Tender",
                                        "TerracottaDark",
                                        "Terracotta",
                                        "TokyoCityDark",
                                        "TokyoCityLight",
                                        "TokyoCityTerminalDark",
                                        "TokyoCityTerminalLight",
                                        "TokyoNightDark",
                                        "TokyoNightLight",
                                        "TokyoNightMoon",
                                        "TokyoNightStorm",
                                        "TokyoNightTerminalDark",
                                        "TokyoNightTerminalLight",
                                        "TokyoNightTerminalStorm",
                                        "TokyodarkTerminal",
                                        "Tokyodark",
                                        "TomorrowNightEighties",
                                        "TomorrowNight",
                                        "Tomorrow",
                                        "Tube",
                                        "Twilight",
                                        "UnikittyDark",
                                        "UnikittyLight",
                                        "UnikittyReversible",
                                        "Uwunicorn",
                                        "Vesper",
                                        "Vice",
                                        "Vulcan",
                                        "Windows10Light",
                                        "Windows10",
                                        "Windows95Light",
                                        "Windows95",
                                        "WindowsHighcontrastLight",
                                        "WindowsHighcontrast",
                                        "WindowsNtLight",
                                        "WindowsNt",
                                        "Woodland",
                                        "XcodeDusk",
                                        "Zenbones",
                                        "Zenburn"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Base16"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A custom Base16 theme",
                                  "type": "object",
                                  "required": [
                                    "colours",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "colours": {
                                      "description": "Colours of the custom Base16 theme palette",
                                      "type": "object",
                                      "required": [
                                        "base_00",
                                        "base_01",
                                        "base_02",
                                        "base_03",
                                        "base_04",
                                        "base_05",
                                        "base_06",
                                        "base_07",
                                        "base_08",
                                        "base_09",
                                        "base_0a",
                                        "base_0b",
                                        "base_0c",
                                        "base_0d",
                                        "base_0e",
                                        "base_0f"
                                      ],
                                      "properties": {
                                        "base_00": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_01": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_02": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_03": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_04": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_05": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_06": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_07": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_08": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_09": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0a": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0b": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0c": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0d": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0e": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0f": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Custom"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Theme"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Animation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint64",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationDuration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint64",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationFps"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "Linear",
                                        "EaseInSine",
                                        "EaseOutSine",
                                        "EaseInOutSine",
                                        "EaseInQuad",
                                        "EaseOutQuad",
                                        "EaseInOutQuad",
                                        "EaseInCubic",
                                        "EaseInOutCubic",
                                        "EaseInQuart",
                                        "EaseOutQuart",
                                        "EaseInOutQuart",
                                        "EaseInQuint",
                                        "EaseOutQuint",
                                        "EaseInOutQuint",
                                        "EaseInExpo",
                                        "EaseOutExpo",
                                        "EaseInOutExpo",
                                        "EaseInCirc",
                                        "EaseOutCirc",
                                        "EaseInOutCirc",
                                        "EaseInBack",
                                        "EaseOutBack",
                                        "EaseInOutBack",
                                        "EaseInElastic",
                                        "EaseOutElastic",
                                        "EaseInOutElastic",
                                        "EaseInBounce",
                                        "EaseOutBounce",
                                        "EaseInOutBounce"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "CubicBezier"
                                      ],
                                      "properties": {
                                        "CubicBezier": {
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          ],
                                          "maxItems": 4,
                                          "minItems": 4
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Border"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Single",
                                    "Stack",
                                    "Monocle",
                                    "Unfocused",
                                    "UnfocusedLocked",
                                    "Floating"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the system border style",
                                  "type": "string",
                                  "enum": [
                                    "System"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 11-style rounded borders",
                                  "type": "string",
                                  "enum": [
                                    "Rounded"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 10-style square borders",
                                  "type": "string",
                                  "enum": [
                                    "Square"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the adjustable komorebi border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "Use the thin Windows accent border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderImplementation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Transparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTransparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint8",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "TransparencyAlpha"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InvisibleBorders"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Always",
                                "Never",
                                "OnStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarMode"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Process",
                                "Title"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarLabel"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarUnfocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarBackgroundColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarHeight"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarTabWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontSize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontFamily"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "bottom",
                                    "left",
                                    "right",
                                    "top"
                                  ],
                                  "properties": {
                                    "bottom": {
                                      "description": "The bottom point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "left": {
                                      "description": "The left point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "right": {
                                      "description": "The right point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "top": {
                                      "description": "The top point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowBasedWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeDelta"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialNamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearAllWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnforceWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearSessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IgnoreRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyObjectNameChangeApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyTrayApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyLayeredApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyBorderOverflowApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "State"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GlobalState"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "VisibleWindows"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorInformation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "FocusedMonitorIndex",
                                "FocusedWorkspaceIndex",
                                "FocusedContainerIndex",
                                "FocusedWindowIndex",
                                "FocusedWorkspaceName",
                                "FocusedWorkspaceLayout",
                                "Version"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Query"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                      "type": "string",
                                      "enum": [
                                        "Komorebi"
                                      ]
                                    },
                                    {
                                      "description": "The native (legacy) Windows FFM implementation",
                                      "type": "string",
                                      "enum": [
                                        "Windows"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "The native (legacy) Windows FFM implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveTitleBar"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTitleBars"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "filter_state_changes"
                                  ],
                                  "properties": {
                                    "filter_state_changes": {
                                      "description": "Only emit notifications when the window manager state has changed",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocketWithOptions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ApplicationSpecificConfigurationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NotificationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SocketSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StaticConfigSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GenerateStaticConfig"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DebugWindow"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Execute a custom command. CMD (%variable%), Bash ($variable) and PowerShell ($Env:variable) variables will be resolved. Example: `komorebic toggle-pause`",
              "type": "object",
              "required": [
                "Command"
              ],
              "properties": {
                "Command": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "on_scroll_left": {
          "description": "Command to send on scrolling left (every tick)",
          "oneOf": [
            {
              "description": "Send a message to the komorebi client. By default, a batch of messages are sent in the following order: FocusMonitorAtCursor => MouseFollowsFocus(false) => {message} => MouseFollowsFocus({original.value})\n\nExample: ```json \"on_extra2_click\": { \"message\": { \"type\": \"NewWorkspace\" } }, ``` or: ```json \"on_middle_click\": { \"focus_monitor_at_cursor\": false, \"ignore_mouse_follows_focus\": false, \"message\": { \"type\": \"TogglePause\" } } ``` or: ```json \"on_scroll_up\": { \"message\": { \"type\": \"CycleFocusWorkspace\", \"content\": \"Previous\" } } ```",
              "type": "object",
              "required": [
                "Komorebi"
              ],
              "properties": {
                "Komorebi": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "focus_monitor_at_cursor": {
                      "description": "Send the FocusMonitorAtCursor message (default:true)",
                      "type": "boolean"
                    },
                    "ignore_mouse_follows_focus": {
                      "description": "Wrap the {message} with a MouseFollowsFocus(false) and MouseFollowsFocus({original.value}) message (default:true)",
                      "type": "boolean"
                    },
                    "message": {
                      "description": "The message to send to the komorebi client",
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStackIndex"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusStackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Left",
                                    "Right",
                                    "Up",
                                    "Down"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowEdge"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Horizontal",
                                    "Vertical",
                                    "HorizontalAndVertical"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowAxis"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWorkspaceToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWorkspaceToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SwapWorkspacesToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ForceFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Close"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Minimize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Promote"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EagerFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "LockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnlockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleLock"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloat"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMonocle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMaximize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "END OF LIFE FEATURE: Use the SW_HIDE flag to hide windows when switching workspaces (has issues with Electron apps)",
                                  "type": "string",
                                  "enum": [
                                    "Hide"
                                  ]
                                },
                                {
                                  "description": "Use the SW_MINIMIZE flag to hide windows when switching workspaces (has issues with frequent workspace switching)",
                                  "type": "string",
                                  "enum": [
                                    "Minimize"
                                  ]
                                },
                                {
                                  "description": "Use the undocumented SetCloak Win32 function to hide windows when switching workspaces",
                                  "type": "string",
                                  "enum": [
                                    "Cloak"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WindowHidingBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleCrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Swap the window container with the window container at the edge of the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Swap"
                                  ]
                                },
                                {
                                  "description": "Insert the window container into the focused workspace on the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Insert"
                                  ]
                                },
                                {
                                  "description": "Do nothing if trying to move a window container in the direction of an adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Process komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "Op"
                                  ]
                                },
                                {
                                  "description": "Ignore komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanagedWindowOperationBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "BSP",
                                "Columns",
                                "Rows",
                                "VerticalStack",
                                "HorizontalStack",
                                "UltrawideVerticalStack",
                                "Grid",
                                "RightMainVerticalStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Horizontal",
                                "Vertical",
                                "HorizontalAndVertical"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FlipLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 5,
                              "minItems": 5
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DisplayIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureNamedWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NewWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Stop"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StopIgnoreRestore"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "TogglePause"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Retile"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "RetileWithResizeDimensions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickSave"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickLoad"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Save"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Load"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusEmptyWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorAtCursor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CloseWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumbers"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceName"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceLayer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReplaceConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadStaticConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WatchConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CompleteConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AltFocusHack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A theme from catppuccin-egui",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Yellow)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Pink)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Catppuccin theme (theme previews: https://github.com/catppuccin/catppuccin)",
                                      "type": "string",
                                      "enum": [
                                        "Frappe",
                                        "Latte",
                                        "Macchiato",
                                        "Mocha"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Catppuccin"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Text)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Red)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A theme from base16-egui-themes",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Base16 theme (theme previews: https://tinted-theming.github.io/tinted-gallery/)",
                                      "type": "string",
                                      "enum": [
                                        "3024",
                                        "Apathy",
                                        "Apprentice",
                                        "Ashes",
                                        "AtelierCaveLight",
                                        "AtelierCave",
                                        "AtelierDuneLight",
                                        "AtelierDune",
                                        "AtelierEstuaryLight",
                                        "AtelierEstuary",
                                        "AtelierForestLight",
                                        "AtelierForest",
                                        "AtelierHeathLight",
                                        "AtelierHeath",
                                        "AtelierLakesideLight",
                                        "AtelierLakeside",
                                        "AtelierPlateauLight",
                                        "AtelierPlateau",
                                        "AtelierSavannaLight",
                                        "AtelierSavanna",
                                        "AtelierSeasideLight",
                                        "AtelierSeaside",
                                        "AtelierSulphurpoolLight",
                                        "AtelierSulphurpool",
                                        "Atlas",
                                        "AyuDark",
                                        "AyuLight",
                                        "AyuMirage",
                                        "Aztec",
                                        "Bespin",
                                        "BlackMetalBathory",
                                        "BlackMetalBurzum",
                                        "BlackMetalDarkFuneral",
                                        "BlackMetalGorgoroth",
                                        "BlackMetalImmortal",
                                        "BlackMetalKhold",
                                        "BlackMetalMarduk",
                                        "BlackMetalMayhem",
                                        "BlackMetalNile",
                                        "BlackMetalVenom",
                                        "BlackMetal",
                                        "Blueforest",
                                        "Blueish",
                                        "Brewer",
                                        "Bright",
                                        "Brogrammer",
                                        "BrushtreesDark",
                                        "Brushtrees",
                                        "Caroline",
                                        "CatppuccinFrappe",
                                        "CatppuccinLatte",
                                        "CatppuccinMacchiato",
                                        "CatppuccinMocha",
                                        "Chalk",
                                        "Circus",
                                        "ClassicDark",
                                        "ClassicLight",
                                        "Codeschool",
                                        "Colors",
                                        "Cupcake",
                                        "Cupertino",
                                        "DaOneBlack",
                                        "DaOneGray",
                                        "DaOneOcean",
                                        "DaOnePaper",
                                        "DaOneSea",
                                        "DaOneWhite",
                                        "DanqingLight",
                                        "Danqing",
                                        "Darcula",
                                        "Darkmoss",
                                        "Darktooth",
                                        "Darkviolet",
                                        "Decaf",
                                        "DefaultDark",
                                        "DefaultLight",
                                        "Dirtysea",
                                        "Dracula",
                                        "EdgeDark",
                                        "EdgeLight",
                                        "Eighties",
                                        "EmbersLight",
                                        "Embers",
                                        "Emil",
                                        "EquilibriumDark",
                                        "EquilibriumGrayDark",
                                        "EquilibriumGrayLight",
                                        "EquilibriumLight",
                                        "Eris",
                                        "Espresso",
                                        "EvaDim",
                                        "Eva",
                                        "EvenokDark",
                                        "EverforestDarkHard",
                                        "Everforest",
                                        "Flat",
                                        "Framer",
                                        "FruitSoda",
                                        "Gigavolt",
                                        "Github",
                                        "GoogleDark",
                                        "GoogleLight",
                                        "Gotham",
                                        "GrayscaleDark",
                                        "GrayscaleLight",
                                        "Greenscreen",
                                        "Gruber",
                                        "GruvboxDarkHard",
                                        "GruvboxDarkMedium",
                                        "GruvboxDarkPale",
                                        "GruvboxDarkSoft",
                                        "GruvboxLightHard",
                                        "GruvboxLightMedium",
                                        "GruvboxLightSoft",
                                        "GruvboxMaterialDarkHard",
                                        "GruvboxMaterialDarkMedium",
                                        "GruvboxMaterialDarkSoft",
                                        "GruvboxMaterialLightHard",
                                        "GruvboxMaterialLightMedium",
                                        "GruvboxMaterialLightSoft",
                                        "Hardcore",
                                        "Harmonic16Dark",
                                        "Harmonic16Light",
                                        "HeetchLight",
                                        "Heetch",
                                        "Helios",
                                        "Hopscotch",
                                        "HorizonDark",
                                        "HorizonLight",
                                        "HorizonTerminalDark",
                                        "HorizonTerminalLight",
                                        "HumanoidDark",
                                        "HumanoidLight",
                                        "IaDark",
                                        "IaLight",
                                        "Icy",
                                        "Irblack",
                                        "Isotope",
                                        "Jabuti",
                                        "Kanagawa",
                                        "Katy",
                                        "Kimber",
                                        "Lime",
                                        "Macintosh",
                                        "Marrakesh",
                                        "Materia",
                                        "MaterialDarker",
                                        "MaterialLighter",
                                        "MaterialPalenight",
                                        "MaterialVivid",
                                        "Material",
                                        "MeasuredDark",
                                        "MeasuredLight",
                                        "MellowPurple",
                                        "MexicoLight",
                                        "Mocha",
                                        "Monokai",
                                        "Moonlight",
                                        "Mountain",
                                        "Nebula",
                                        "NordLight",
                                        "Nord",
                                        "Nova",
                                        "Ocean",
                                        "Oceanicnext",
                                        "OneLight",
                                        "OnedarkDark",
                                        "Onedark",
                                        "OutrunDark",
                                        "OxocarbonDark",
                                        "OxocarbonLight",
                                        "Pandora",
                                        "PapercolorDark",
                                        "PapercolorLight",
                                        "Paraiso",
                                        "Pasque",
                                        "Phd",
                                        "Pico",
                                        "Pinky",
                                        "Pop",
                                        "Porple",
                                        "PreciousDarkEleven",
                                        "PreciousDarkFifteen",
                                        "PreciousLightWarm",
                                        "PreciousLightWhite",
                                        "PrimerDarkDimmed",
                                        "PrimerDark",
                                        "PrimerLight",
                                        "Purpledream",
                                        "Qualia",
                                        "Railscasts",
                                        "Rebecca",
                                        "RosePineDawn",
                                        "RosePineMoon",
                                        "RosePine",
                                        "Saga",
                                        "Sagelight",
                                        "Sakura",
                                        "Sandcastle",
                                        "SelenizedBlack",
                                        "SelenizedDark",
                                        "SelenizedLight",
                                        "SelenizedWhite",
                                        "Seti",
                                        "ShadesOfPurple",
                                        "ShadesmearDark",
                                        "ShadesmearLight",
                                        "Shapeshifter",
                                        "SilkDark",
                                        "SilkLight",
                                        "Snazzy",
                                        "SolarflareLight",
                                        "Solarflare",
                                        "SolarizedDark",
                                        "SolarizedLight",
                                        "Spaceduck",
                                        "Spacemacs",
                                        "Sparky",
                                        "StandardizedDark",
                                        "StandardizedLight",
                                        "Stella",
                                        "StillAlive",
                                        "Summercamp",
                                        "SummerfruitDark",
                                        "SummerfruitLight",
                                        "SynthMidnightDark",
                                        "SynthMidnightLight",
                                        "Tango",
                                        "Tarot",
                                        "Tender",
                                        "TerracottaDark",
                                        "Terracotta",
                                        "TokyoCityDark",
                                        "TokyoCityLight",
                                        "TokyoCityTerminalDark",
                                        "TokyoCityTerminalLight",
                                        "TokyoNightDark",
                                        "TokyoNightLight",
                                        "TokyoNightMoon",
                                        "TokyoNightStorm",
                                        "TokyoNightTerminalDark",
                                        "TokyoNightTerminalLight",
                                        "TokyoNightTerminalStorm",
                                        "TokyodarkTerminal",
                                        "Tokyodark",
                                        "TomorrowNightEighties",
                                        "TomorrowNight",
                                        "Tomorrow",
                                        "Tube",
                                        "Twilight",
                                        "UnikittyDark",
                                        "UnikittyLight",
                                        "UnikittyReversible",
                                        "Uwunicorn",
                                        "Vesper",
                                        "Vice",
                                        "Vulcan",
                                        "Windows10Light",
                                        "Windows10",
                                        "Windows95Light",
                                        "Windows95",
                                        "WindowsHighcontrastLight",
                                        "WindowsHighcontrast",
                                        "WindowsNtLight",
                                        "WindowsNt",
                                        "Woodland",
                                        "XcodeDusk",
                                        "Zenbones",
                                        "Zenburn"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Base16"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A custom Base16 theme",
                                  "type": "object",
                                  "required": [
                                    "colours",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "colours": {
                                      "description": "Colours of the custom Base16 theme palette",
                                      "type": "object",
                                      "required": [
                                        "base_00",
                                        "base_01",
                                        "base_02",
                                        "base_03",
                                        "base_04",
                                        "base_05",
                                        "base_06",
                                        "base_07",
                                        "base_08",
                                        "base_09",
                                        "base_0a",
                                        "base_0b",
                                        "base_0c",
                                        "base_0d",
                                        "base_0e",
                                        "base_0f"
                                      ],
                                      "properties": {
                                        "base_00": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_01": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_02": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_03": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_04": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_05": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_06": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_07": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_08": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_09": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0a": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0b": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0c": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0d": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0e": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0f": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Custom"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Theme"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Animation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint64",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationDuration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint64",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationFps"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "Linear",
                                        "EaseInSine",
                                        "EaseOutSine",
                                        "EaseInOutSine",
                                        "EaseInQuad",
                                        "EaseOutQuad",
                                        "EaseInOutQuad",
                                        "EaseInCubic",
                                        "EaseInOutCubic",
                                        "EaseInQuart",
                                        "EaseOutQuart",
                                        "EaseInOutQuart",
                                        "EaseInQuint",
                                        "EaseOutQuint",
                                        "EaseInOutQuint",
                                        "EaseInExpo",
                                        "EaseOutExpo",
                                        "EaseInOutExpo",
                                        "EaseInCirc",
                                        "EaseOutCirc",
                                        "EaseInOutCirc",
                                        "EaseInBack",
                                        "EaseOutBack",
                                        "EaseInOutBack",
                                        "EaseInElastic",
                                        "EaseOutElastic",
                                        "EaseInOutElastic",
                                        "EaseInBounce",
                                        "EaseOutBounce",
                                        "EaseInOutBounce"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "CubicBezier"
                                      ],
                                      "properties": {
                                        "CubicBezier": {
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          ],
                                          "maxItems": 4,
                                          "minItems": 4
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Border"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Single",
                                    "Stack",
                                    "Monocle",
                                    "Unfocused",
                                    "UnfocusedLocked",
                                    "Floating"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the system border style",
                                  "type": "string",
                                  "enum": [
                                    "System"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 11-style rounded borders",
                                  "type": "string",
                                  "enum": [
                                    "Rounded"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 10-style square borders",
                                  "type": "string",
                                  "enum": [
                                    "Square"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the adjustable komorebi border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "Use the thin Windows accent border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderImplementation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Transparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTransparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint8",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "TransparencyAlpha"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InvisibleBorders"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Always",
                                "Never",
                                "OnStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarMode"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Process",
                                "Title"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarLabel"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarUnfocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarBackgroundColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarHeight"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarTabWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontSize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontFamily"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "bottom",
                                    "left",
                                    "right",
                                    "top"
                                  ],
                                  "properties": {
                                    "bottom": {
                                      "description": "The bottom point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "left": {
                                      "description": "The left point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "right": {
                                      "description": "The right point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "top": {
                                      "description": "The top point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowBasedWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeDelta"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialNamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearAllWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnforceWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearSessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IgnoreRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyObjectNameChangeApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyTrayApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyLayeredApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyBorderOverflowApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "State"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GlobalState"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "VisibleWindows"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorInformation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "FocusedMonitorIndex",
                                "FocusedWorkspaceIndex",
                                "FocusedContainerIndex",
                                "FocusedWindowIndex",
                                "FocusedWorkspaceName",
                                "FocusedWorkspaceLayout",
                                "Version"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Query"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                      "type": "string",
                                      "enum": [
                                        "Komorebi"
                                      ]
                                    },
                                    {
                                      "description": "The native (legacy) Windows FFM implementation",
                                      "type": "string",
                                      "enum": [
                                        "Windows"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "The native (legacy) Windows FFM implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveTitleBar"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTitleBars"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "filter_state_changes"
                                  ],
                                  "properties": {
                                    "filter_state_changes": {
                                      "description": "Only emit notifications when the window manager state has changed",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocketWithOptions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ApplicationSpecificConfigurationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NotificationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SocketSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StaticConfigSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GenerateStaticConfig"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DebugWindow"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Execute a custom command. CMD (%variable%), Bash ($variable) and PowerShell ($Env:variable) variables will be resolved. Example: `komorebic toggle-pause`",
              "type": "object",
              "required": [
                "Command"
              ],
              "properties": {
                "Command": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "on_scroll_right": {
          "description": "Command to send on scrolling right (every tick)",
          "oneOf": [
            {
              "description": "Send a message to the komorebi client. By default, a batch of messages are sent in the following order: FocusMonitorAtCursor => MouseFollowsFocus(false) => {message} => MouseFollowsFocus({original.value})\n\nExample: ```json \"on_extra2_click\": { \"message\": { \"type\": \"NewWorkspace\" } }, ``` or: ```json \"on_middle_click\": { \"focus_monitor_at_cursor\": false, \"ignore_mouse_follows_focus\": false, \"message\": { \"type\": \"TogglePause\" } } ``` or: ```json \"on_scroll_up\": { \"message\": { \"type\": \"CycleFocusWorkspace\", \"content\": \"Previous\" } } ```",
              "type": "object",
              "required": [
                "Komorebi"
              ],
              "properties": {
                "Komorebi": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "focus_monitor_at_cursor": {
                      "description": "Send the FocusMonitorAtCursor message (default:true)",
                      "type": "boolean"
                    },
                    "ignore_mouse_follows_focus": {
                      "description": "Wrap the {message} with a MouseFollowsFocus(false) and MouseFollowsFocus({original.value}) message (default:true)",
                      "type": "boolean"
                    },
                    "message": {
                      "description": "The message to send to the komorebi client",
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStackIndex"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusStackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Left",
                                    "Right",
                                    "Up",
                                    "Down"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowEdge"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Horizontal",
                                    "Vertical",
                                    "HorizontalAndVertical"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowAxis"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWorkspaceToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWorkspaceToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SwapWorkspacesToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ForceFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Close"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Minimize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Promote"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EagerFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "LockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnlockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleLock"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloat"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMonocle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMaximize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "END OF LIFE FEATURE: Use the SW_HIDE flag to hide windows when switching workspaces (has issues with Electron apps)",
                                  "type": "string",
                                  "enum": [
                                    "Hide"
                                  ]
                                },
                                {
                                  "description": "Use the SW_MINIMIZE flag to hide windows when switching workspaces (has issues with frequent workspace switching)",
                                  "type": "string",
                                  "enum": [
                                    "Minimize"
                                  ]
                                },
                                {
                                  "description": "Use the undocumented SetCloak Win32 function to hide windows when switching workspaces",
                                  "type": "string",
                                  "enum": [
                                    "Cloak"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WindowHidingBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleCrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Swap the window container with the window container at the edge of the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Swap"
                                  ]
                                },
                                {
                                  "description": "Insert the window container into the focused workspace on the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Insert"
                                  ]
                                },
                                {
                                  "description": "Do nothing if trying to move a window container in the direction of an adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Process komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "Op"
                                  ]
                                },
                                {
                                  "description": "Ignore komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanagedWindowOperationBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "BSP",
                                "Columns",
                                "Rows",
                                "VerticalStack",
                                "HorizontalStack",
                                "UltrawideVerticalStack",
                                "Grid",
                                "RightMainVerticalStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Horizontal",
                                "Vertical",
                                "HorizontalAndVertical"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FlipLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 5,
                              "minItems": 5
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DisplayIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureNamedWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NewWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Stop"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StopIgnoreRestore"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "TogglePause"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Retile"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "RetileWithResizeDimensions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickSave"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickLoad"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Save"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Load"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusEmptyWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorAtCursor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CloseWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumbers"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceName"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceLayer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReplaceConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadStaticConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WatchConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CompleteConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AltFocusHack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A theme from catppuccin-egui",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Yellow)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Pink)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Catppuccin theme (theme previews: https://github.com/catppuccin/catppuccin)",
                                      "type": "string",
                                      "enum": [
                                        "Frappe",
                                        "Latte",
                                        "Macchiato",
                                        "Mocha"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Catppuccin"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Text)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Red)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A theme from base16-egui-themes",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Base16 theme (theme previews: https://tinted-theming.github.io/tinted-gallery/)",
                                      "type": "string",
                                      "enum": [
                                        "3024",
                                        "Apathy",
                                        "Apprentice",
                                        "Ashes",
                                        "AtelierCaveLight",
                                        "AtelierCave",
                                        "AtelierDuneLight",
                                        "AtelierDune",
                                        "AtelierEstuaryLight",
                                        "AtelierEstuary",
                                        "AtelierForestLight",
                                        "AtelierForest",
                                        "AtelierHeathLight",
                                        "AtelierHeath",
                                        "AtelierLakesideLight",
                                        "AtelierLakeside",
                                        "AtelierPlateauLight",
                                        "AtelierPlateau",
                                        "AtelierSavannaLight",
                                        "AtelierSavanna",
                                        "AtelierSeasideLight",
                                        "AtelierSeaside",
                                        "AtelierSulphurpoolLight",
                                        "AtelierSulphurpool",
                                        "Atlas",
                                        "AyuDark",
                                        "AyuLight",
                                        "AyuMirage",
                                        "Aztec",
                                        "Bespin",
                                        "BlackMetalBathory",
                                        "BlackMetalBurzum",
                                        "BlackMetalDarkFuneral",
                                        "BlackMetalGorgoroth",
                                        "BlackMetalImmortal",
                                        "BlackMetalKhold",
                                        "BlackMetalMarduk",
                                        "BlackMetalMayhem",
                                        "BlackMetalNile",
                                        "BlackMetalVenom",
                                        "BlackMetal",
                                        "Blueforest",
                                        "Blueish",
                                        "Brewer",
                                        "Bright",
                                        "Brogrammer",
                                        "BrushtreesDark",
                                        "Brushtrees",
                                        "Caroline",
                                        "CatppuccinFrappe",
                                        "CatppuccinLatte",
                                        "CatppuccinMacchiato",
                                        "CatppuccinMocha",
                                        "Chalk",
                                        "Circus",
                                        "ClassicDark",
                                        "ClassicLight",
                                        "Codeschool",
                                        "Colors",
                                        "Cupcake",
                                        "Cupertino",
                                        "DaOneBlack",
                                        "DaOneGray",
                                        "DaOneOcean",
                                        "DaOnePaper",
                                        "DaOneSea",
                                        "DaOneWhite",
                                        "DanqingLight",
                                        "Danqing",
                                        "Darcula",
                                        "Darkmoss",
                                        "Darktooth",
                                        "Darkviolet",
                                        "Decaf",
                                        "DefaultDark",
                                        "DefaultLight",
                                        "Dirtysea",
                                        "Dracula",
                                        "EdgeDark",
                                        "EdgeLight",
                                        "Eighties",
                                        "EmbersLight",
                                        "Embers",
                                        "Emil",
                                        "EquilibriumDark",
                                        "EquilibriumGrayDark",
                                        "EquilibriumGrayLight",
                                        "EquilibriumLight",
                                        "Eris",
                                        "Espresso",
                                        "EvaDim",
                                        "Eva",
                                        "EvenokDark",
                                        "EverforestDarkHard",
                                        "Everforest",
                                        "Flat",
                                        "Framer",
                                        "FruitSoda",
                                        "Gigavolt",
                                        "Github",
                                        "GoogleDark",
                                        "GoogleLight",
                                        "Gotham",
                                        "GrayscaleDark",
                                        "GrayscaleLight",
                                        "Greenscreen",
                                        "Gruber",
                                        "GruvboxDarkHard",
                                        "GruvboxDarkMedium",
                                        "GruvboxDarkPale",
                                        "GruvboxDarkSoft",
                                        "GruvboxLightHard",
                                        "GruvboxLightMedium",
                                        "GruvboxLightSoft",
                                        "GruvboxMaterialDarkHard",
                                        "GruvboxMaterialDarkMedium",
                                        "GruvboxMaterialDarkSoft",
                                        "GruvboxMaterialLightHard",
                                        "GruvboxMaterialLightMedium",
                                        "GruvboxMaterialLightSoft",
                                        "Hardcore",
                                        "Harmonic16Dark",
                                        "Harmonic16Light",
                                        "HeetchLight",
                                        "Heetch",
                                        "Helios",
                                        "Hopscotch",
                                        "HorizonDark",
                                        "HorizonLight",
                                        "HorizonTerminalDark",
                                        "HorizonTerminalLight",
                                        "HumanoidDark",
                                        "HumanoidLight",
                                        "IaDark",
                                        "IaLight",
                                        "Icy",
                                        "Irblack",
                                        "Isotope",
                                        "Jabuti",
                                        "Kanagawa",
                                        "Katy",
                                        "Kimber",
                                        "Lime",
                                        "Macintosh",
                                        "Marrakesh",
                                        "Materia",
                                        "MaterialDarker",
                                        "MaterialLighter",
                                        "MaterialPalenight",
                                        "MaterialVivid",
                                        "Material",
                                        "MeasuredDark",
                                        "MeasuredLight",
                                        "MellowPurple",
                                        "MexicoLight",
                                        "Mocha",
                                        "Monokai",
                                        "Moonlight",
                                        "Mountain",
                                        "Nebula",
                                        "NordLight",
                                        "Nord",
                                        "Nova",
                                        "Ocean",
                                        "Oceanicnext",
                                        "OneLight",
                                        "OnedarkDark",
                                        "Onedark",
                                        "OutrunDark",
                                        "OxocarbonDark",
                                        "OxocarbonLight",
                                        "Pandora",
                                        "PapercolorDark",
                                        "PapercolorLight",
                                        "Paraiso",
                                        "Pasque",
                                        "Phd",
                                        "Pico",
                                        "Pinky",
                                        "Pop",
                                        "Porple",
                                        "PreciousDarkEleven",
                                        "PreciousDarkFifteen",
                                        "PreciousLightWarm",
                                        "PreciousLightWhite",
                                        "PrimerDarkDimmed",
                                        "PrimerDark",
                                        "PrimerLight",
                                        "Purpledream",
                                        "Qualia",
                                        "Railscasts",
                                        "Rebecca",
                                        "RosePineDawn",
                                        "RosePineMoon",
                                        "RosePine",
                                        "Saga",
                                        "Sagelight",
                                        "Sakura",
                                        "Sandcastle",
                                        "SelenizedBlack",
                                        "SelenizedDark",
                                        "SelenizedLight",
                                        "SelenizedWhite",
                                        "Seti",
                                        "ShadesOfPurple",
                                        "ShadesmearDark",
                                        "ShadesmearLight",
                                        "Shapeshifter",
                                        "SilkDark",
                                        "SilkLight",
                                        "Snazzy",
                                        "SolarflareLight",
                                        "Solarflare",
                                        "SolarizedDark",
                                        "SolarizedLight",
                                        "Spaceduck",
                                        "Spacemacs",
                                        "Sparky",
                                        "StandardizedDark",
                                        "StandardizedLight",
                                        "Stella",
                                        "StillAlive",
                                        "Summercamp",
                                        "SummerfruitDark",
                                        "SummerfruitLight",
                                        "SynthMidnightDark",
                                        "SynthMidnightLight",
                                        "Tango",
                                        "Tarot",
                                        "Tender",
                                        "TerracottaDark",
                                        "Terracotta",
                                        "TokyoCityDark",
                                        "TokyoCityLight",
                                        "TokyoCityTerminalDark",
                                        "TokyoCityTerminalLight",
                                        "TokyoNightDark",
                                        "TokyoNightLight",
                                        "TokyoNightMoon",
                                        "TokyoNightStorm",
                                        "TokyoNightTerminalDark",
                                        "TokyoNightTerminalLight",
                                        "TokyoNightTerminalStorm",
                                        "TokyodarkTerminal",
                                        "Tokyodark",
                                        "TomorrowNightEighties",
                                        "TomorrowNight",
                                        "Tomorrow",
                                        "Tube",
                                        "Twilight",
                                        "UnikittyDark",
                                        "UnikittyLight",
                                        "UnikittyReversible",
                                        "Uwunicorn",
                                        "Vesper",
                                        "Vice",
                                        "Vulcan",
                                        "Windows10Light",
                                        "Windows10",
                                        "Windows95Light",
                                        "Windows95",
                                        "WindowsHighcontrastLight",
                                        "WindowsHighcontrast",
                                        "WindowsNtLight",
                                        "WindowsNt",
                                        "Woodland",
                                        "XcodeDusk",
                                        "Zenbones",
                                        "Zenburn"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Base16"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A custom Base16 theme",
                                  "type": "object",
                                  "required": [
                                    "colours",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "colours": {
                                      "description": "Colours of the custom Base16 theme palette",
                                      "type": "object",
                                      "required": [
                                        "base_00",
                                        "base_01",
                                        "base_02",
                                        "base_03",
                                        "base_04",
                                        "base_05",
                                        "base_06",
                                        "base_07",
                                        "base_08",
                                        "base_09",
                                        "base_0a",
                                        "base_0b",
                                        "base_0c",
                                        "base_0d",
                                        "base_0e",
                                        "base_0f"
                                      ],
                                      "properties": {
                                        "base_00": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_01": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_02": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_03": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_04": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_05": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_06": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_07": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_08": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_09": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0a": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0b": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0c": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0d": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0e": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0f": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Custom"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Theme"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Animation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint64",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationDuration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint64",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationFps"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "Linear",
                                        "EaseInSine",
                                        "EaseOutSine",
                                        "EaseInOutSine",
                                        "EaseInQuad",
                                        "EaseOutQuad",
                                        "EaseInOutQuad",
                                        "EaseInCubic",
                                        "EaseInOutCubic",
                                        "EaseInQuart",
                                        "EaseOutQuart",
                                        "EaseInOutQuart",
                                        "EaseInQuint",
                                        "EaseOutQuint",
                                        "EaseInOutQuint",
                                        "EaseInExpo",
                                        "EaseOutExpo",
                                        "EaseInOutExpo",
                                        "EaseInCirc",
                                        "EaseOutCirc",
                                        "EaseInOutCirc",
                                        "EaseInBack",
                                        "EaseOutBack",
                                        "EaseInOutBack",
                                        "EaseInElastic",
                                        "EaseOutElastic",
                                        "EaseInOutElastic",
                                        "EaseInBounce",
                                        "EaseOutBounce",
                                        "EaseInOutBounce"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "CubicBezier"
                                      ],
                                      "properties": {
                                        "CubicBezier": {
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          ],
                                          "maxItems": 4,
                                          "minItems": 4
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Border"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Single",
                                    "Stack",
                                    "Monocle",
                                    "Unfocused",
                                    "UnfocusedLocked",
                                    "Floating"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the system border style",
                                  "type": "string",
                                  "enum": [
                                    "System"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 11-style rounded borders",
                                  "type": "string",
                                  "enum": [
                                    "Rounded"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 10-style square borders",
                                  "type": "string",
                                  "enum": [
                                    "Square"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the adjustable komorebi border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "Use the thin Windows accent border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderImplementation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Transparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTransparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint8",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "TransparencyAlpha"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InvisibleBorders"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Always",
                                "Never",
                                "OnStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarMode"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Process",
                                "Title"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarLabel"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarUnfocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarBackgroundColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarHeight"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarTabWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontSize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontFamily"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "bottom",
                                    "left",
                                    "right",
                                    "top"
                                  ],
                                  "properties": {
                                    "bottom": {
                                      "description": "The bottom point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "left": {
                                      "description": "The left point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "right": {
                                      "description": "The right point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "top": {
                                      "description": "The top point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowBasedWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeDelta"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialNamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearAllWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnforceWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearSessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IgnoreRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyObjectNameChangeApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyTrayApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyLayeredApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyBorderOverflowApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "State"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GlobalState"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "VisibleWindows"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorInformation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "FocusedMonitorIndex",
                                "FocusedWorkspaceIndex",
                                "FocusedContainerIndex",
                                "FocusedWindowIndex",
                                "FocusedWorkspaceName",
                                "FocusedWorkspaceLayout",
                                "Version"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Query"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                      "type": "string",
                                      "enum": [
                                        "Komorebi"
                                      ]
                                    },
                                    {
                                      "description": "The native (legacy) Windows FFM implementation",
                                      "type": "string",
                                      "enum": [
                                        "Windows"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "The native (legacy) Windows FFM implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveTitleBar"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTitleBars"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "filter_state_changes"
                                  ],
                                  "properties": {
                                    "filter_state_changes": {
                                      "description": "Only emit notifications when the window manager state has changed",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocketWithOptions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ApplicationSpecificConfigurationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NotificationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SocketSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StaticConfigSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GenerateStaticConfig"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DebugWindow"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Execute a custom command. CMD (%variable%), Bash ($variable) and PowerShell ($Env:variable) variables will be resolved. Example: `komorebic toggle-pause`",
              "type": "object",
              "required": [
                "Command"
              ],
              "properties": {
                "Command": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "on_scroll_up": {
          "description": "Command to send on scrolling up (every tick)",
          "oneOf": [
            {
              "description": "Send a message to the komorebi client. By default, a batch of messages are sent in the following order: FocusMonitorAtCursor => MouseFollowsFocus(false) => {message} => MouseFollowsFocus({original.value})\n\nExample: ```json \"on_extra2_click\": { \"message\": { \"type\": \"NewWorkspace\" } }, ``` or: ```json \"on_middle_click\": { \"focus_monitor_at_cursor\": false, \"ignore_mouse_follows_focus\": false, \"message\": { \"type\": \"TogglePause\" } } ``` or: ```json \"on_scroll_up\": { \"message\": { \"type\": \"CycleFocusWorkspace\", \"content\": \"Previous\" } } ```",
              "type": "object",
              "required": [
                "Komorebi"
              ],
              "properties": {
                "Komorebi": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "focus_monitor_at_cursor": {
                      "description": "Send the FocusMonitorAtCursor message (default:true)",
                      "type": "boolean"
                    },
                    "ignore_mouse_follows_focus": {
                      "description": "Wrap the {message} with a MouseFollowsFocus(false) and MouseFollowsFocus({original.value}) message (default:true)",
                      "type": "boolean"
                    },
                    "message": {
                      "description": "The message to send to the komorebi client",
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStackIndex"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusStackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Left",
                                    "Right",
                                    "Up",
                                    "Down"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowEdge"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Horizontal",
                                    "Vertical",
                                    "HorizontalAndVertical"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowAxis"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWorkspaceToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWorkspaceToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SwapWorkspacesToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ForceFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Close"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Minimize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Promote"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EagerFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "LockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnlockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleLock"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloat"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMonocle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMaximize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "END OF LIFE FEATURE: Use the SW_HIDE flag to hide windows when switching workspaces (has issues with Electron apps)",
                                  "type": "string",
                                  "enum": [
                                    "Hide"
                                  ]
                                },
                                {
                                  "description": "Use the SW_MINIMIZE flag to hide windows when switching workspaces (has issues with frequent workspace switching)",
                                  "type": "string",
                                  "enum": [
                                    "Minimize"
                                  ]
                                },
                                {
                                  "description": "Use the undocumented SetCloak Win32 function to hide windows when switching workspaces",
                                  "type": "string",
                                  "enum": [
                                    "Cloak"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WindowHidingBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleCrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Swap the window container with the window container at the edge of the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Swap"
                                  ]
                                },
                                {
                                  "description": "Insert the window container into the focused workspace on the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Insert"
                                  ]
                                },
                                {
                                  "description": "Do nothing if trying to move a window container in the direction of an adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Process komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "Op"
                                  ]
                                },
                                {
                                  "description": "Ignore komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanagedWindowOperationBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "BSP",
                                "Columns",
                                "Rows",
                                "VerticalStack",
                                "HorizontalStack",
                                "UltrawideVerticalStack",
                                "Grid",
                                "RightMainVerticalStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Horizontal",
                                "Vertical",
                                "HorizontalAndVertical"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FlipLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 5,
                              "minItems": 5
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DisplayIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureNamedWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NewWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Stop"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StopIgnoreRestore"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "TogglePause"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Retile"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "RetileWithResizeDimensions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickSave"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickLoad"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Save"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Load"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusEmptyWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorAtCursor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CloseWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumbers"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceName"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceLayer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReplaceConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadStaticConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WatchConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CompleteConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AltFocusHack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A theme from catppuccin-egui",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Yellow)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Pink)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Catppuccin theme (theme previews: https://github.com/catppuccin/catppuccin)",
                                      "type": "string",
                                      "enum": [
                                        "Frappe",
                                        "Latte",
                                        "Macchiato",
                                        "Mocha"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Catppuccin"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Text)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Red)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A theme from base16-egui-themes",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Base16 theme (theme previews: https://tinted-theming.github.io/tinted-gallery/)",
                                      "type": "string",
                                      "enum": [
                                        "3024",
                                        "Apathy",
                                        "Apprentice",
                                        "Ashes",
                                        "AtelierCaveLight",
                                        "AtelierCave",
                                        "AtelierDuneLight",
                                        "AtelierDune",
                                        "AtelierEstuaryLight",
                                        "AtelierEstuary",
                                        "AtelierForestLight",
                                        "AtelierForest",
                                        "AtelierHeathLight",
                                        "AtelierHeath",
                                        "AtelierLakesideLight",
                                        "AtelierLakeside",
                                        "AtelierPlateauLight",
                                        "AtelierPlateau",
                                        "AtelierSavannaLight",
                                        "AtelierSavanna",
                                        "AtelierSeasideLight",
                                        "AtelierSeaside",
                                        "AtelierSulphurpoolLight",
                                        "AtelierSulphurpool",
                                        "Atlas",
                                        "AyuDark",
                                        "AyuLight",
                                        "AyuMirage",
                                        "Aztec",
                                        "Bespin",
                                        "BlackMetalBathory",
                                        "BlackMetalBurzum",
                                        "BlackMetalDarkFuneral",
                                        "BlackMetalGorgoroth",
                                        "BlackMetalImmortal",
                                        "BlackMetalKhold",
                                        "BlackMetalMarduk",
                                        "BlackMetalMayhem",
                                        "BlackMetalNile",
                                        "BlackMetalVenom",
                                        "BlackMetal",
                                        "Blueforest",
                                        "Blueish",
                                        "Brewer",
                                        "Bright",
                                        "Brogrammer",
                                        "BrushtreesDark",
                                        "Brushtrees",
                                        "Caroline",
                                        "CatppuccinFrappe",
                                        "CatppuccinLatte",
                                        "CatppuccinMacchiato",
                                        "CatppuccinMocha",
                                        "Chalk",
                                        "Circus",
                                        "ClassicDark",
                                        "ClassicLight",
                                        "Codeschool",
                                        "Colors",
                                        "Cupcake",
                                        "Cupertino",
                                        "DaOneBlack",
                                        "DaOneGray",
                                        "DaOneOcean",
                                        "DaOnePaper",
                                        "DaOneSea",
                                        "DaOneWhite",
                                        "DanqingLight",
                                        "Danqing",
                                        "Darcula",
                                        "Darkmoss",
                                        "Darktooth",
                                        "Darkviolet",
                                        "Decaf",
                                        "DefaultDark",
                                        "DefaultLight",
                                        "Dirtysea",
                                        "Dracula",
                                        "EdgeDark",
                                        "EdgeLight",
                                        "Eighties",
                                        "EmbersLight",
                                        "Embers",
                                        "Emil",
                                        "EquilibriumDark",
                                        "EquilibriumGrayDark",
                                        "EquilibriumGrayLight",
                                        "EquilibriumLight",
                                        "Eris",
                                        "Espresso",
                                        "EvaDim",
                                        "Eva",
                                        "EvenokDark",
                                        "EverforestDarkHard",
                                        "Everforest",
                                        "Flat",
                                        "Framer",
                                        "FruitSoda",
                                        "Gigavolt",
                                        "Github",
                                        "GoogleDark",
                                        "GoogleLight",
                                        "Gotham",
                                        "GrayscaleDark",
                                        "GrayscaleLight",
                                        "Greenscreen",
                                        "Gruber",
                                        "GruvboxDarkHard",
                                        "GruvboxDarkMedium",
                                        "GruvboxDarkPale",
                                        "GruvboxDarkSoft",
                                        "GruvboxLightHard",
                                        "GruvboxLightMedium",
                                        "GruvboxLightSoft",
                                        "GruvboxMaterialDarkHard",
                                        "GruvboxMaterialDarkMedium",
                                        "GruvboxMaterialDarkSoft",
                                        "GruvboxMaterialLightHard",
                                        "GruvboxMaterialLightMedium",
                                        "GruvboxMaterialLightSoft",
                                        "Hardcore",
                                        "Harmonic16Dark",
                                        "Harmonic16Light",
                                        "HeetchLight",
                                        "Heetch",
                                        "Helios",
                                        "Hopscotch",
                                        "HorizonDark",
                                        "HorizonLight",
                                        "HorizonTerminalDark",
                                        "HorizonTerminalLight",
                                        "HumanoidDark",
                                        "HumanoidLight",
                                        "IaDark",
                                        "IaLight",
                                        "Icy",
                                        "Irblack",
                                        "Isotope",
                                        "Jabuti",
                                        "Kanagawa",
                                        "Katy",
                                        "Kimber",
                                        "Lime",
                                        "Macintosh",
                                        "Marrakesh",
                                        "Materia",
                                        "MaterialDarker",
                                        "MaterialLighter",
                                        "MaterialPalenight",
                                        "MaterialVivid",
                                        "Material",
                                        "MeasuredDark",
                                        "MeasuredLight",
                                        "MellowPurple",
                                        "MexicoLight",
                                        "Mocha",
                                        "Monokai",
                                        "Moonlight",
                                        "Mountain",
                                        "Nebula",
                                        "NordLight",
                                        "Nord",
                                        "Nova",
                                        "Ocean",
                                        "Oceanicnext",
                                        "OneLight",
                                        "OnedarkDark",
                                        "Onedark",
                                        "OutrunDark",
                                        "OxocarbonDark",
                                        "OxocarbonLight",
                                        "Pandora",
                                        "PapercolorDark",
                                        "PapercolorLight",
                                        "Paraiso",
                                        "Pasque",
                                        "Phd",
                                        "Pico",
                                        "Pinky",
                                        "Pop",
                                        "Porple",
                                        "PreciousDarkEleven",
                                        "PreciousDarkFifteen",
                                        "PreciousLightWarm",
                                        "PreciousLightWhite",
                                        "PrimerDarkDimmed",
                                        "PrimerDark",
                                        "PrimerLight",
                                        "Purpledream",
                                        "Qualia",
                                        "Railscasts",
                                        "Rebecca",
                                        "RosePineDawn",
                                        "RosePineMoon",
                                        "RosePine",
                                        "Saga",
                                        "Sagelight",
                                        "Sakura",
                                        "Sandcastle",
                                        "SelenizedBlack",
                                        "SelenizedDark",
                                        "SelenizedLight",
                                        "SelenizedWhite",
                                        "Seti",
                                        "ShadesOfPurple",
                                        "ShadesmearDark",
                                        "ShadesmearLight",
                                        "Shapeshifter",
                                        "SilkDark",
                                        "SilkLight",
                                        "Snazzy",
                                        "SolarflareLight",
                                        "Solarflare",
                                        "SolarizedDark",
                                        "SolarizedLight",
                                        "Spaceduck",
                                        "Spacemacs",
                                        "Sparky",
                                        "StandardizedDark",
                                        "StandardizedLight",
                                        "Stella",
                                        "StillAlive",
                                        "Summercamp",
                                        "SummerfruitDark",
                                        "SummerfruitLight",
                                        "SynthMidnightDark",
                                        "SynthMidnightLight",
                                        "Tango",
                                        "Tarot",
                                        "Tender",
                                        "TerracottaDark",
                                        "Terracotta",
                                        "TokyoCityDark",
                                        "TokyoCityLight",
                                        "TokyoCityTerminalDark",
                                        "TokyoCityTerminalLight",
                                        "TokyoNightDark",
                                        "TokyoNightLight",
                                        "TokyoNightMoon",
                                        "TokyoNightStorm",
                                        "TokyoNightTerminalDark",
                                        "TokyoNightTerminalLight",
                                        "TokyoNightTerminalStorm",
                                        "TokyodarkTerminal",
                                        "Tokyodark",
                                        "TomorrowNightEighties",
                                        "TomorrowNight",
                                        "Tomorrow",
                                        "Tube",
                                        "Twilight",
                                        "UnikittyDark",
                                        "UnikittyLight",
                                        "UnikittyReversible",
                                        "Uwunicorn",
                                        "Vesper",
                                        "Vice",
                                        "Vulcan",
                                        "Windows10Light",
                                        "Windows10",
                                        "Windows95Light",
                                        "Windows95",
                                        "WindowsHighcontrastLight",
                                        "WindowsHighcontrast",
                                        "WindowsNtLight",
                                        "WindowsNt",
                                        "Woodland",
                                        "XcodeDusk",
                                        "Zenbones",
                                        "Zenburn"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Base16"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A custom Base16 theme",
                                  "type": "object",
                                  "required": [
                                    "colours",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "colours": {
                                      "description": "Colours of the custom Base16 theme palette",
                                      "type": "object",
                                      "required": [
                                        "base_00",
                                        "base_01",
                                        "base_02",
                                        "base_03",
                                        "base_04",
                                        "base_05",
                                        "base_06",
                                        "base_07",
                                        "base_08",
                                        "base_09",
                                        "base_0a",
                                        "base_0b",
                                        "base_0c",
                                        "base_0d",
                                        "base_0e",
                                        "base_0f"
                                      ],
                                      "properties": {
                                        "base_00": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_01": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_02": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_03": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_04": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_05": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_06": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_07": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_08": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_09": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0a": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0b": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0c": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0d": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0e": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0f": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Custom"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Theme"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Animation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint64",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationDuration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint64",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationFps"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "Linear",
                                        "EaseInSine",
                                        "EaseOutSine",
                                        "EaseInOutSine",
                                        "EaseInQuad",
                                        "EaseOutQuad",
                                        "EaseInOutQuad",
                                        "EaseInCubic",
                                        "EaseInOutCubic",
                                        "EaseInQuart",
                                        "EaseOutQuart",
                                        "EaseInOutQuart",
                                        "EaseInQuint",
                                        "EaseOutQuint",
                                        "EaseInOutQuint",
                                        "EaseInExpo",
                                        "EaseOutExpo",
                                        "EaseInOutExpo",
                                        "EaseInCirc",
                                        "EaseOutCirc",
                                        "EaseInOutCirc",
                                        "EaseInBack",
                                        "EaseOutBack",
                                        "EaseInOutBack",
                                        "EaseInElastic",
                                        "EaseOutElastic",
                                        "EaseInOutElastic",
                                        "EaseInBounce",
                                        "EaseOutBounce",
                                        "EaseInOutBounce"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "CubicBezier"
                                      ],
                                      "properties": {
                                        "CubicBezier": {
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          ],
                                          "maxItems": 4,
                                          "minItems": 4
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Border"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Single",
                                    "Stack",
                                    "Monocle",
                                    "Unfocused",
                                    "UnfocusedLocked",
                                    "Floating"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the system border style",
                                  "type": "string",
                                  "enum": [
                                    "System"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 11-style rounded borders",
                                  "type": "string",
                                  "enum": [
                                    "Rounded"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 10-style square borders",
                                  "type": "string",
                                  "enum": [
                                    "Square"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the adjustable komorebi border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "Use the thin Windows accent border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderImplementation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Transparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTransparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint8",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "TransparencyAlpha"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InvisibleBorders"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Always",
                                "Never",
                                "OnStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarMode"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Process",
                                "Title"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarLabel"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarUnfocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarBackgroundColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarHeight"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarTabWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontSize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontFamily"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "bottom",
                                    "left",
                                    "right",
                                    "top"
                                  ],
                                  "properties": {
                                    "bottom": {
                                      "description": "The bottom point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "left": {
                                      "description": "The left point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "right": {
                                      "description": "The right point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "top": {
                                      "description": "The top point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowBasedWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeDelta"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialNamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearAllWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnforceWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearSessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IgnoreRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyObjectNameChangeApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyTrayApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyLayeredApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyBorderOverflowApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "State"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GlobalState"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "VisibleWindows"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorInformation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "FocusedMonitorIndex",
                                "FocusedWorkspaceIndex",
                                "FocusedContainerIndex",
                                "FocusedWindowIndex",
                                "FocusedWorkspaceName",
                                "FocusedWorkspaceLayout",
                                "Version"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Query"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                      "type": "string",
                                      "enum": [
                                        "Komorebi"
                                      ]
                                    },
                                    {
                                      "description": "The native (legacy) Windows FFM implementation",
                                      "type": "string",
                                      "enum": [
                                        "Windows"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "The native (legacy) Windows FFM implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveTitleBar"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTitleBars"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "filter_state_changes"
                                  ],
                                  "properties": {
                                    "filter_state_changes": {
                                      "description": "Only emit notifications when the window manager state has changed",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocketWithOptions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ApplicationSpecificConfigurationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NotificationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SocketSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StaticConfigSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GenerateStaticConfig"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DebugWindow"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Execute a custom command. CMD (%variable%), Bash ($variable) and PowerShell ($Env:variable) variables will be resolved. Example: `komorebic toggle-pause`",
              "type": "object",
              "required": [
                "Command"
              ],
              "properties": {
                "Command": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "on_secondary_click": {
          "description": "Command to send on secondary/right button click",
          "oneOf": [
            {
              "description": "Send a message to the komorebi client. By default, a batch of messages are sent in the following order: FocusMonitorAtCursor => MouseFollowsFocus(false) => {message} => MouseFollowsFocus({original.value})\n\nExample: ```json \"on_extra2_click\": { \"message\": { \"type\": \"NewWorkspace\" } }, ``` or: ```json \"on_middle_click\": { \"focus_monitor_at_cursor\": false, \"ignore_mouse_follows_focus\": false, \"message\": { \"type\": \"TogglePause\" } } ``` or: ```json \"on_scroll_up\": { \"message\": { \"type\": \"CycleFocusWorkspace\", \"content\": \"Previous\" } } ```",
              "type": "object",
              "required": [
                "Komorebi"
              ],
              "properties": {
                "Komorebi": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "focus_monitor_at_cursor": {
                      "description": "Send the FocusMonitorAtCursor message (default:true)",
                      "type": "boolean"
                    },
                    "ignore_mouse_follows_focus": {
                      "description": "Wrap the {message} with a MouseFollowsFocus(false) and MouseFollowsFocus({original.value}) message (default:true)",
                      "type": "boolean"
                    },
                    "message": {
                      "description": "The message to send to the komorebi client",
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleStackIndex"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusStackWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnstackAll"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Left",
                                    "Right",
                                    "Up",
                                    "Down"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowEdge"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Horizontal",
                                    "Vertical",
                                    "HorizontalAndVertical"
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeWindowAxis"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleSendContainerToWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveContainerToMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SendContainerToNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleMoveWorkspaceToMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MoveWorkspaceToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SwapWorkspacesToMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ForceFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Close"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Minimize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Promote"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Left",
                                "Right",
                                "Up",
                                "Down"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "PromoteWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EagerFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "LockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnlockMonitorWorkspaceContainer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleLock"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloat"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMonocle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMaximize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "END OF LIFE FEATURE: Use the SW_HIDE flag to hide windows when switching workspaces (has issues with Electron apps)",
                                  "type": "string",
                                  "enum": [
                                    "Hide"
                                  ]
                                },
                                {
                                  "description": "Use the SW_MINIMIZE flag to hide windows when switching workspaces (has issues with frequent workspace switching)",
                                  "type": "string",
                                  "enum": [
                                    "Minimize"
                                  ]
                                },
                                {
                                  "description": "Use the undocumented SetCloak Win32 function to hide windows when switching workspaces",
                                  "type": "string",
                                  "enum": [
                                    "Cloak"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WindowHidingBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleCrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Swap the window container with the window container at the edge of the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Swap"
                                  ]
                                },
                                {
                                  "description": "Insert the window container into the focused workspace on the adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "Insert"
                                  ]
                                },
                                {
                                  "description": "Do nothing if trying to move a window container in the direction of an adjacent monitor",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CrossMonitorMoveBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Process komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "Op"
                                  ]
                                },
                                {
                                  "description": "Ignore komorebic commands on temporarily unmanaged/floated windows",
                                  "type": "string",
                                  "enum": [
                                    "NoOp"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanagedWindowOperationBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "UnmanageFocusedWindow"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Increase",
                                    "Decrease"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AdjustWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "BSP",
                                "Columns",
                                "Rows",
                                "VerticalStack",
                                "HorizontalStack",
                                "UltrawideVerticalStack",
                                "Grid",
                                "RightMainVerticalStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ChangeLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Horizontal",
                                "Vertical",
                                "HorizontalAndVertical"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FlipLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceWindowContainerBehaviour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceFloatOverride"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 5,
                              "minItems": 5
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DisplayIndexPreference"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnsureNamedWorkspaces"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NewWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Stop"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StopIgnoreRestore"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "TogglePause"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Retile"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "RetileWithResizeDimensions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickSave"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "QuickLoad"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Save"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Load"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusMonitor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Previous",
                                "Next"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "CycleFocusEmptyWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorAtCursor"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusLastWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CloseWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusWorkspaceNumbers"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusMonitorWorkspaceNumber"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusNamedWorkspace"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspaceContainerPadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusedWorkspacePadding"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceTiling"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceName"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayout"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustom"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "BSP",
                                    "Columns",
                                    "Rows",
                                    "VerticalStack",
                                    "HorizontalStack",
                                    "UltrawideVerticalStack",
                                    "Grid",
                                    "RightMainVerticalStack"
                                  ]
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceLayoutCustomRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceLayoutRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWorkspaceLayer"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReplaceConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReloadStaticConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WatchConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "CompleteConfiguration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AltFocusHack"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A theme from catppuccin-egui",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Yellow)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Pink)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Catppuccin theme (theme previews: https://github.com/catppuccin/catppuccin)",
                                      "type": "string",
                                      "enum": [
                                        "Frappe",
                                        "Latte",
                                        "Macchiato",
                                        "Mocha"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Catppuccin"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Blue)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Green)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Text)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Red)",
                                      "type": "string",
                                      "enum": [
                                        "Rosewater",
                                        "Flamingo",
                                        "Pink",
                                        "Mauve",
                                        "Red",
                                        "Maroon",
                                        "Peach",
                                        "Yellow",
                                        "Green",
                                        "Teal",
                                        "Sky",
                                        "Sapphire",
                                        "Blue",
                                        "Lavender",
                                        "Text",
                                        "Subtext1",
                                        "Subtext0",
                                        "Overlay2",
                                        "Overlay1",
                                        "Overlay0",
                                        "Surface2",
                                        "Surface1",
                                        "Surface0",
                                        "Base",
                                        "Mantle",
                                        "Crust"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A theme from base16-egui-themes",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name of the Base16 theme (theme previews: https://tinted-theming.github.io/tinted-gallery/)",
                                      "type": "string",
                                      "enum": [
                                        "3024",
                                        "Apathy",
                                        "Apprentice",
                                        "Ashes",
                                        "AtelierCaveLight",
                                        "AtelierCave",
                                        "AtelierDuneLight",
                                        "AtelierDune",
                                        "AtelierEstuaryLight",
                                        "AtelierEstuary",
                                        "AtelierForestLight",
                                        "AtelierForest",
                                        "AtelierHeathLight",
                                        "AtelierHeath",
                                        "AtelierLakesideLight",
                                        "AtelierLakeside",
                                        "AtelierPlateauLight",
                                        "AtelierPlateau",
                                        "AtelierSavannaLight",
                                        "AtelierSavanna",
                                        "AtelierSeasideLight",
                                        "AtelierSeaside",
                                        "AtelierSulphurpoolLight",
                                        "AtelierSulphurpool",
                                        "Atlas",
                                        "AyuDark",
                                        "AyuLight",
                                        "AyuMirage",
                                        "Aztec",
                                        "Bespin",
                                        "BlackMetalBathory",
                                        "BlackMetalBurzum",
                                        "BlackMetalDarkFuneral",
                                        "BlackMetalGorgoroth",
                                        "BlackMetalImmortal",
                                        "BlackMetalKhold",
                                        "BlackMetalMarduk",
                                        "BlackMetalMayhem",
                                        "BlackMetalNile",
                                        "BlackMetalVenom",
                                        "BlackMetal",
                                        "Blueforest",
                                        "Blueish",
                                        "Brewer",
                                        "Bright",
                                        "Brogrammer",
                                        "BrushtreesDark",
                                        "Brushtrees",
                                        "Caroline",
                                        "CatppuccinFrappe",
                                        "CatppuccinLatte",
                                        "CatppuccinMacchiato",
                                        "CatppuccinMocha",
                                        "Chalk",
                                        "Circus",
                                        "ClassicDark",
                                        "ClassicLight",
                                        "Codeschool",
                                        "Colors",
                                        "Cupcake",
                                        "Cupertino",
                                        "DaOneBlack",
                                        "DaOneGray",
                                        "DaOneOcean",
                                        "DaOnePaper",
                                        "DaOneSea",
                                        "DaOneWhite",
                                        "DanqingLight",
                                        "Danqing",
                                        "Darcula",
                                        "Darkmoss",
                                        "Darktooth",
                                        "Darkviolet",
                                        "Decaf",
                                        "DefaultDark",
                                        "DefaultLight",
                                        "Dirtysea",
                                        "Dracula",
                                        "EdgeDark",
                                        "EdgeLight",
                                        "Eighties",
                                        "EmbersLight",
                                        "Embers",
                                        "Emil",
                                        "EquilibriumDark",
                                        "EquilibriumGrayDark",
                                        "EquilibriumGrayLight",
                                        "EquilibriumLight",
                                        "Eris",
                                        "Espresso",
                                        "EvaDim",
                                        "Eva",
                                        "EvenokDark",
                                        "EverforestDarkHard",
                                        "Everforest",
                                        "Flat",
                                        "Framer",
                                        "FruitSoda",
                                        "Gigavolt",
                                        "Github",
                                        "GoogleDark",
                                        "GoogleLight",
                                        "Gotham",
                                        "GrayscaleDark",
                                        "GrayscaleLight",
                                        "Greenscreen",
                                        "Gruber",
                                        "GruvboxDarkHard",
                                        "GruvboxDarkMedium",
                                        "GruvboxDarkPale",
                                        "GruvboxDarkSoft",
                                        "GruvboxLightHard",
                                        "GruvboxLightMedium",
                                        "GruvboxLightSoft",
                                        "GruvboxMaterialDarkHard",
                                        "GruvboxMaterialDarkMedium",
                                        "GruvboxMaterialDarkSoft",
                                        "GruvboxMaterialLightHard",
                                        "GruvboxMaterialLightMedium",
                                        "GruvboxMaterialLightSoft",
                                        "Hardcore",
                                        "Harmonic16Dark",
                                        "Harmonic16Light",
                                        "HeetchLight",
                                        "Heetch",
                                        "Helios",
                                        "Hopscotch",
                                        "HorizonDark",
                                        "HorizonLight",
                                        "HorizonTerminalDark",
                                        "HorizonTerminalLight",
                                        "HumanoidDark",
                                        "HumanoidLight",
                                        "IaDark",
                                        "IaLight",
                                        "Icy",
                                        "Irblack",
                                        "Isotope",
                                        "Jabuti",
                                        "Kanagawa",
                                        "Katy",
                                        "Kimber",
                                        "Lime",
                                        "Macintosh",
                                        "Marrakesh",
                                        "Materia",
                                        "MaterialDarker",
                                        "MaterialLighter",
                                        "MaterialPalenight",
                                        "MaterialVivid",
                                        "Material",
                                        "MeasuredDark",
                                        "MeasuredLight",
                                        "MellowPurple",
                                        "MexicoLight",
                                        "Mocha",
                                        "Monokai",
                                        "Moonlight",
                                        "Mountain",
                                        "Nebula",
                                        "NordLight",
                                        "Nord",
                                        "Nova",
                                        "Ocean",
                                        "Oceanicnext",
                                        "OneLight",
                                        "OnedarkDark",
                                        "Onedark",
                                        "OutrunDark",
                                        "OxocarbonDark",
                                        "OxocarbonLight",
                                        "Pandora",
                                        "PapercolorDark",
                                        "PapercolorLight",
                                        "Paraiso",
                                        "Pasque",
                                        "Phd",
                                        "Pico",
                                        "Pinky",
                                        "Pop",
                                        "Porple",
                                        "PreciousDarkEleven",
                                        "PreciousDarkFifteen",
                                        "PreciousLightWarm",
                                        "PreciousLightWhite",
                                        "PrimerDarkDimmed",
                                        "PrimerDark",
                                        "PrimerLight",
                                        "Purpledream",
                                        "Qualia",
                                        "Railscasts",
                                        "Rebecca",
                                        "RosePineDawn",
                                        "RosePineMoon",
                                        "RosePine",
                                        "Saga",
                                        "Sagelight",
                                        "Sakura",
                                        "Sandcastle",
                                        "SelenizedBlack",
                                        "SelenizedDark",
                                        "SelenizedLight",
                                        "SelenizedWhite",
                                        "Seti",
                                        "ShadesOfPurple",
                                        "ShadesmearDark",
                                        "ShadesmearLight",
                                        "Shapeshifter",
                                        "SilkDark",
                                        "SilkLight",
                                        "Snazzy",
                                        "SolarflareLight",
                                        "Solarflare",
                                        "SolarizedDark",
                                        "SolarizedLight",
                                        "Spaceduck",
                                        "Spacemacs",
                                        "Sparky",
                                        "StandardizedDark",
                                        "StandardizedLight",
                                        "Stella",
                                        "StillAlive",
                                        "Summercamp",
                                        "SummerfruitDark",
                                        "SummerfruitLight",
                                        "SynthMidnightDark",
                                        "SynthMidnightLight",
                                        "Tango",
                                        "Tarot",
                                        "Tender",
                                        "TerracottaDark",
                                        "Terracotta",
                                        "TokyoCityDark",
                                        "TokyoCityLight",
                                        "TokyoCityTerminalDark",
                                        "TokyoCityTerminalLight",
                                        "TokyoNightDark",
                                        "TokyoNightLight",
                                        "TokyoNightMoon",
                                        "TokyoNightStorm",
                                        "TokyoNightTerminalDark",
                                        "TokyoNightTerminalLight",
                                        "TokyoNightTerminalStorm",
                                        "TokyodarkTerminal",
                                        "Tokyodark",
                                        "TomorrowNightEighties",
                                        "TomorrowNight",
                                        "Tomorrow",
                                        "Tube",
                                        "Twilight",
                                        "UnikittyDark",
                                        "UnikittyLight",
                                        "UnikittyReversible",
                                        "Uwunicorn",
                                        "Vesper",
                                        "Vice",
                                        "Vulcan",
                                        "Windows10Light",
                                        "Windows10",
                                        "Windows95Light",
                                        "Windows95",
                                        "WindowsHighcontrastLight",
                                        "WindowsHighcontrast",
                                        "WindowsNtLight",
                                        "WindowsNt",
                                        "Woodland",
                                        "XcodeDusk",
                                        "Zenbones",
                                        "Zenburn"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Base16"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "description": "A custom Base16 theme",
                                  "type": "object",
                                  "required": [
                                    "colours",
                                    "palette"
                                  ],
                                  "properties": {
                                    "bar_accent": {
                                      "description": "Komorebi status bar accent (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "colours": {
                                      "description": "Colours of the custom Base16 theme palette",
                                      "type": "object",
                                      "required": [
                                        "base_00",
                                        "base_01",
                                        "base_02",
                                        "base_03",
                                        "base_04",
                                        "base_05",
                                        "base_06",
                                        "base_07",
                                        "base_08",
                                        "base_09",
                                        "base_0a",
                                        "base_0b",
                                        "base_0c",
                                        "base_0d",
                                        "base_0e",
                                        "base_0f"
                                      ],
                                      "properties": {
                                        "base_00": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_01": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_02": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_03": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_04": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_05": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_06": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_07": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_08": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_09": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0a": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0b": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0c": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0d": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0e": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        },
                                        "base_0f": {
                                          "anyOf": [
                                            {
                                              "description": "Colour represented as RGB",
                                              "type": "object",
                                              "required": [
                                                "b",
                                                "g",
                                                "r"
                                              ],
                                              "properties": {
                                                "b": {
                                                  "description": "Blue",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "g": {
                                                  "description": "Green",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                },
                                                "r": {
                                                  "description": "Red",
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0.0
                                                }
                                              }
                                            },
                                            {
                                              "description": "Colour represented as Hex",
                                              "type": "string",
                                              "format": "color-hex"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "floating_border": {
                                      "description": "Border colour when the window is floating (default: Base09)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "monocle_border": {
                                      "description": "Border colour when the container is in monocle mode (default: Base0F)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "palette": {
                                      "type": "string",
                                      "enum": [
                                        "Custom"
                                      ]
                                    },
                                    "single_border": {
                                      "description": "Border colour when the container contains a single window (default: Base0D)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stack_border": {
                                      "description": "Border colour when the container contains multiple windows (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_background": {
                                      "description": "Stackbar tab background colour (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_focused_text": {
                                      "description": "Stackbar focused tab text colour (default: Base0B)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "stackbar_unfocused_text": {
                                      "description": "Stackbar unfocused tab text colour (default: Base05)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_border": {
                                      "description": "Border colour when the container is unfocused (default: Base01)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    },
                                    "unfocused_locked_border": {
                                      "description": "Border colour when the container is unfocused and locked (default: Base08)",
                                      "type": "string",
                                      "enum": [
                                        "Base00",
                                        "Base01",
                                        "Base02",
                                        "Base03",
                                        "Base04",
                                        "Base05",
                                        "Base06",
                                        "Base07",
                                        "Base08",
                                        "Base09",
                                        "Base0A",
                                        "Base0B",
                                        "Base0C",
                                        "Base0D",
                                        "Base0E",
                                        "Base0F"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Theme"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Animation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint64",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationDuration"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint64",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationFps"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "type": "string",
                                      "enum": [
                                        "Linear",
                                        "EaseInSine",
                                        "EaseOutSine",
                                        "EaseInOutSine",
                                        "EaseInQuad",
                                        "EaseOutQuad",
                                        "EaseInOutQuad",
                                        "EaseInCubic",
                                        "EaseInOutCubic",
                                        "EaseInQuart",
                                        "EaseOutQuart",
                                        "EaseInOutQuart",
                                        "EaseInQuint",
                                        "EaseOutQuint",
                                        "EaseInOutQuint",
                                        "EaseInExpo",
                                        "EaseOutExpo",
                                        "EaseInOutExpo",
                                        "EaseInCirc",
                                        "EaseOutCirc",
                                        "EaseInOutCirc",
                                        "EaseInBack",
                                        "EaseOutBack",
                                        "EaseInOutBack",
                                        "EaseInElastic",
                                        "EaseOutElastic",
                                        "EaseInOutElastic",
                                        "EaseInBounce",
                                        "EaseOutBounce",
                                        "EaseInOutBounce"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "CubicBezier"
                                      ],
                                      "properties": {
                                        "CubicBezier": {
                                          "type": "array",
                                          "items": [
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            },
                                            {
                                              "type": "number",
                                              "format": "double"
                                            }
                                          ],
                                          "maxItems": 4,
                                          "minItems": 4
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                },
                                {
                                  "type": "string",
                                  "enum": [
                                    "movement",
                                    "transparency"
                                  ]
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AnimationStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Border"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Single",
                                    "Stack",
                                    "Monocle",
                                    "Unfocused",
                                    "UnfocusedLocked",
                                    "Floating"
                                  ]
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the system border style",
                                  "type": "string",
                                  "enum": [
                                    "System"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 11-style rounded borders",
                                  "type": "string",
                                  "enum": [
                                    "Rounded"
                                  ]
                                },
                                {
                                  "description": "Use the Windows 10-style square borders",
                                  "type": "string",
                                  "enum": [
                                    "Square"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderStyle"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "Use the adjustable komorebi border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "Use the thin Windows accent border implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BorderImplementation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Transparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTransparency"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "uint8",
                              "minimum": 0.0
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "TransparencyAlpha"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InvisibleBorders"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Always",
                                "Never",
                                "OnStack"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarMode"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "Process",
                                "Title"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarLabel"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarUnfocusedTextColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint32",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarBackgroundColour"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarHeight"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarTabWidth"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontSize"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "StackbarFontFamily"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "object",
                              "required": [
                                "bottom",
                                "left",
                                "right",
                                "top"
                              ],
                              "properties": {
                                "bottom": {
                                  "description": "The bottom point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "left": {
                                  "description": "The left point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "right": {
                                  "description": "The right point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "top": {
                                  "description": "The top point in a Win32 Rect",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "bottom",
                                    "left",
                                    "right",
                                    "top"
                                  ],
                                  "properties": {
                                    "bottom": {
                                      "description": "The bottom point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "left": {
                                      "description": "The left point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "right": {
                                      "description": "The right point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "top": {
                                      "description": "The top point in a Win32 Rect",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleWindowBasedWorkAreaOffset"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ResizeDelta"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "InitialNamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "WorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 3,
                              "minItems": 3
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "NamedWorkspaceRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                },
                                {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearNamedWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearAllWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "EnforceWorkspaceRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ClearSessionFloatRules"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IgnoreRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ManageRule"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyObjectNameChangeApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyTrayApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyLayeredApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "IdentifyBorderOverflowApplication"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "State"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GlobalState"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "VisibleWindows"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "MonitorInformation"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string",
                              "enum": [
                                "FocusedMonitorIndex",
                                "FocusedWorkspaceIndex",
                                "FocusedContainerIndex",
                                "FocusedWindowIndex",
                                "FocusedWorkspaceName",
                                "FocusedWorkspaceLayout",
                                "Version"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "Query"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "oneOf": [
                                    {
                                      "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                      "type": "string",
                                      "enum": [
                                        "Komorebi"
                                      ]
                                    },
                                    {
                                      "description": "The native (legacy) Windows FFM implementation",
                                      "type": "string",
                                      "enum": [
                                        "Windows"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "boolean"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "FocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "oneOf": [
                                {
                                  "description": "A custom FFM implementation (slightly more CPU-intensive)",
                                  "type": "string",
                                  "enum": [
                                    "Komorebi"
                                  ]
                                },
                                {
                                  "description": "The native (legacy) Windows FFM implementation",
                                  "type": "string",
                                  "enum": [
                                    "Windows"
                                  ]
                                }
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleFocusFollowsMouse"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "MouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleMouseFollowsFocus"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Exe",
                                    "Class",
                                    "Title",
                                    "Path"
                                  ]
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveTitleBar"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ToggleTitleBars"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "array",
                              "items": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "filter_state_changes"
                                  ],
                                  "properties": {
                                    "filter_state_changes": {
                                      "description": "Only emit notifications when the window manager state has changed",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              ],
                              "maxItems": 2,
                              "minItems": 2
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberSocketWithOptions"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberSocket"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "AddSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "RemoveSubscriberPipe"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "ApplicationSpecificConfigurationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "NotificationSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "SocketSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "StaticConfigSchema"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "GenerateStaticConfig"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "content",
                            "type"
                          ],
                          "properties": {
                            "content": {
                              "type": "integer",
                              "format": "int"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "DebugWindow"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Execute a custom command. CMD (%variable%), Bash ($variable) and PowerShell ($Env:variable) variables will be resolved. Example: `komorebic toggle-pause`",
              "type": "object",
              "required": [
                "Command"
              ],
              "properties": {
                "Command": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "vertical_scroll_threshold": {
          "description": "Defines how many points a user needs to scroll vertically to make a \"tick\" on a mouse/touchpad/touchscreen (default: 30)",
          "type": "number",
          "format": "float"
        }
      }
    },
    "padding": {
      "description": "Bar padding. Use one value for all sides or use a grouped padding for horizontal and/or vertical definition which can each take a single value for a symmetric padding or two values for each side, i.e.: ```json \"padding\": { \"horizontal\": 10 } ``` or: ```json \"padding\": { \"horizontal\": [left, right] } ``` You can also set individual padding on each side like this: ```json \"padding\": { \"top\": 10, \"bottom\": 10, \"left\": 10, \"right\": 10, } ``` By default, padding is set to 10 on all sides.",
      "anyOf": [
        {
          "type": "number",
          "format": "float"
        },
        {
          "type": "object",
          "required": [
            "bottom",
            "left",
            "right",
            "top"
          ],
          "properties": {
            "bottom": {
              "type": "number",
              "format": "float"
            },
            "left": {
              "type": "number",
              "format": "float"
            },
            "right": {
              "type": "number",
              "format": "float"
            },
            "top": {
              "type": "number",
              "format": "float"
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "horizontal": {
              "anyOf": [
                {
                  "type": "number",
                  "format": "float"
                },
                {
                  "type": "array",
                  "items": [
                    {
                      "type": "number",
                      "format": "float"
                    },
                    {
                      "type": "number",
                      "format": "float"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              ]
            },
            "vertical": {
              "anyOf": [
                {
                  "type": "number",
                  "format": "float"
                },
                {
                  "type": "array",
                  "items": [
                    {
                      "type": "number",
                      "format": "float"
                    },
                    {
                      "type": "number",
                      "format": "float"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              ]
            }
          }
        }
      ]
    },
    "position": {
      "description": "Bar positioning options",
      "type": "object",
      "properties": {
        "end": {
          "description": "The desired size of the bar from the starting position (usually monitor width x desired height)",
          "type": "object",
          "required": [
            "x",
            "y"
          ],
          "properties": {
            "x": {
              "description": "X coordinate",
              "type": "number",
              "format": "float"
            },
            "y": {
              "description": "Y coordinate",
              "type": "number",
              "format": "float"
            }
          }
        },
        "start": {
          "description": "The desired starting position of the bar (0,0 = top left of the screen)",
          "type": "object",
          "required": [
            "x",
            "y"
          ],
          "properties": {
            "x": {
              "description": "X coordinate",
              "type": "number",
              "format": "float"
            },
            "y": {
              "description": "Y coordinate",
              "type": "number",
              "format": "float"
            }
          }
        }
      }
    },
    "right_widgets": {
      "description": "Right side widgets (ordered left-to-right)",
      "type": "array",
      "items": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Applications"
            ],
            "properties": {
              "Applications": {
                "type": "object",
                "required": [
                  "enable",
                  "items"
                ],
                "properties": {
                  "display": {
                    "description": "Default display format for all applications (optional). Could be overridden per application. Defaults to `Icon`.",
                    "oneOf": [
                      {
                        "description": "Show only the application icon.",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show only the application name as text.",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show both the application icon and name.",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  },
                  "enable": {
                    "description": "Enables or disables the applications widget.",
                    "type": "boolean"
                  },
                  "items": {
                    "description": "List of configured applications to display.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "command",
                        "name"
                      ],
                      "properties": {
                        "command": {
                          "description": "Command to execute (e.g. path to the application or shell command).",
                          "type": "string"
                        },
                        "display": {
                          "description": "Display format for this application button (optional). Overrides global format if set.",
                          "oneOf": [
                            {
                              "description": "Show only the application icon.",
                              "type": "string",
                              "enum": [
                                "Icon"
                              ]
                            },
                            {
                              "description": "Show only the application name as text.",
                              "type": "string",
                              "enum": [
                                "Text"
                              ]
                            },
                            {
                              "description": "Show both the application icon and name.",
                              "type": "string",
                              "enum": [
                                "IconAndText"
                              ]
                            }
                          ]
                        },
                        "enable": {
                          "description": "Whether to enable this application button (optional). Inherits from the global `Applications` setting if omitted.",
                          "type": "boolean"
                        },
                        "icon": {
                          "description": "Optional icon: a path to an image or a text-based glyph (e.g., from Nerd Fonts). If not set, and if the `command` is a path to an executable, an icon might be extracted from it. Note: glyphs require a compatible `font_family`.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Display name of the application.",
                          "type": "string"
                        },
                        "show_command_on_hover": {
                          "description": "Whether to show the launch command on hover (optional). Inherits from the global `Applications` setting if omitted.",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "show_command_on_hover": {
                    "description": "Whether to show the launch command on hover (optional). Could be overridden per application. Defaults to `false` if not set.",
                    "type": "boolean"
                  },
                  "spacing": {
                    "description": "Horizontal spacing between application buttons.",
                    "type": "number",
                    "format": "float"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Battery"
            ],
            "properties": {
              "Battery": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "auto_select_under": {
                    "description": "Select when the current percentage is under this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Battery widget",
                    "type": "boolean"
                  },
                  "hide_on_full_charge": {
                    "description": "Hide the widget if the battery is at full charge",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Cpu"
            ],
            "properties": {
              "Cpu": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "auto_select_over": {
                    "description": "Select when the current percentage is over this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Cpu widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Date"
            ],
            "properties": {
              "Date": {
                "type": "object",
                "required": [
                  "enable",
                  "format"
                ],
                "properties": {
                  "enable": {
                    "description": "Enable the Date widget",
                    "type": "boolean"
                  },
                  "format": {
                    "description": "Set the Date format",
                    "oneOf": [
                      {
                        "description": "Month/Date/Year format (09/08/24)",
                        "type": "string",
                        "enum": [
                          "MonthDateYear"
                        ]
                      },
                      {
                        "description": "Year-Month-Date format (2024-09-08)",
                        "type": "string",
                        "enum": [
                          "YearMonthDate"
                        ]
                      },
                      {
                        "description": "Date-Month-Year format (8-Sep-2024)",
                        "type": "string",
                        "enum": [
                          "DateMonthYear"
                        ]
                      },
                      {
                        "description": "Day Date Month Year format (8 September 2024)",
                        "type": "string",
                        "enum": [
                          "DayDateMonthYear"
                        ]
                      },
                      {
                        "description": "Custom format (https://docs.rs/chrono/latest/chrono/format/strftime/index.html)",
                        "type": "object",
                        "required": [
                          "Custom"
                        ],
                        "properties": {
                          "Custom": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "description": "Custom format with modifiers",
                        "type": "object",
                        "required": [
                          "CustomModifiers"
                        ],
                        "properties": {
                          "CustomModifiers": {
                            "description": "Custom format with additive modifiers for integer format specifiers",
                            "type": "object",
                            "required": [
                              "format",
                              "modifiers"
                            ],
                            "properties": {
                              "format": {
                                "description": "Custom format (https://docs.rs/chrono/latest/chrono/format/strftime/index.html)",
                                "type": "string"
                              },
                              "modifiers": {
                                "description": "Additive modifiers for integer format specifiers (e.g. { \"%U\": 1 } to increment the zero-indexed week number by 1)",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    ]
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  },
                  "timezone": {
                    "description": "TimeZone (https://docs.rs/chrono-tz/latest/chrono_tz/enum.Tz.html)\n\nUse a custom format to display additional information, i.e.: ```json { \"Date\": { \"enable\": true, \"format\": { \"Custom\": \"%D %Z (Tokyo)\" }, \"timezone\": \"Asia/Tokyo\" } } ```",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Keyboard"
            ],
            "properties": {
              "Keyboard": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 1 second)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Input widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Komorebi"
            ],
            "properties": {
              "Komorebi": {
                "type": "object",
                "properties": {
                  "configuration_switcher": {
                    "description": "Configure the Configuration Switcher widget",
                    "type": "object",
                    "required": [
                      "configurations",
                      "enable"
                    ],
                    "properties": {
                      "configurations": {
                        "description": "A map of display friendly name => path to configuration.json",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "enable": {
                        "description": "Enable the Komorebi Configurations widget",
                        "type": "boolean"
                      }
                    }
                  },
                  "focused_container": {
                    "description": "Configure the Focused Container widget",
                    "type": "object",
                    "required": [
                      "enable"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the currently focused container",
                        "oneOf": [
                          {
                            "description": "Show only icon",
                            "type": "string",
                            "enum": [
                              "Icon"
                            ]
                          },
                          {
                            "description": "Show only text",
                            "type": "string",
                            "enum": [
                              "Text"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and text on the rest",
                            "type": "string",
                            "enum": [
                              "TextAndIconOnSelected"
                            ]
                          },
                          {
                            "description": "Show both icon and text",
                            "type": "string",
                            "enum": [
                              "IconAndText"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and icons on the rest",
                            "type": "string",
                            "enum": [
                              "IconAndTextOnSelected"
                            ]
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Focused Container widget",
                        "type": "boolean"
                      },
                      "show_icon": {
                        "description": "DEPRECATED: use 'display' instead (Show the icon of the currently focused container)",
                        "type": "boolean"
                      }
                    }
                  },
                  "layout": {
                    "description": "Configure the Layout widget",
                    "type": "object",
                    "required": [
                      "enable"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the current layout",
                        "oneOf": [
                          {
                            "description": "Show only icon",
                            "type": "string",
                            "enum": [
                              "Icon"
                            ]
                          },
                          {
                            "description": "Show only text",
                            "type": "string",
                            "enum": [
                              "Text"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and text on the rest",
                            "type": "string",
                            "enum": [
                              "TextAndIconOnSelected"
                            ]
                          },
                          {
                            "description": "Show both icon and text",
                            "type": "string",
                            "enum": [
                              "IconAndText"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and icons on the rest",
                            "type": "string",
                            "enum": [
                              "IconAndTextOnSelected"
                            ]
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Layout widget",
                        "type": "boolean"
                      },
                      "options": {
                        "description": "List of layout options",
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "BSP",
                                "Columns",
                                "Rows",
                                "VerticalStack",
                                "HorizontalStack",
                                "UltrawideVerticalStack",
                                "Grid",
                                "RightMainVerticalStack"
                              ]
                            },
                            {
                              "type": "null"
                            },
                            {
                              "type": "null"
                            },
                            {
                              "type": "null"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "locked_container": {
                    "description": "Configure the Locked Container widget",
                    "type": "object",
                    "required": [
                      "enable"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the current locked state",
                        "oneOf": [
                          {
                            "description": "Show only icon",
                            "type": "string",
                            "enum": [
                              "Icon"
                            ]
                          },
                          {
                            "description": "Show only text",
                            "type": "string",
                            "enum": [
                              "Text"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and text on the rest",
                            "type": "string",
                            "enum": [
                              "TextAndIconOnSelected"
                            ]
                          },
                          {
                            "description": "Show both icon and text",
                            "type": "string",
                            "enum": [
                              "IconAndText"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and icons on the rest",
                            "type": "string",
                            "enum": [
                              "IconAndTextOnSelected"
                            ]
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Locked Container widget",
                        "type": "boolean"
                      },
                      "show_when_unlocked": {
                        "description": "Show the widget event if the layer is unlocked",
                        "type": "boolean"
                      }
                    }
                  },
                  "workspace_layer": {
                    "description": "Configure the Workspace Layer widget",
                    "type": "object",
                    "required": [
                      "enable"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the current layer",
                        "oneOf": [
                          {
                            "description": "Show only icon",
                            "type": "string",
                            "enum": [
                              "Icon"
                            ]
                          },
                          {
                            "description": "Show only text",
                            "type": "string",
                            "enum": [
                              "Text"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and text on the rest",
                            "type": "string",
                            "enum": [
                              "TextAndIconOnSelected"
                            ]
                          },
                          {
                            "description": "Show both icon and text",
                            "type": "string",
                            "enum": [
                              "IconAndText"
                            ]
                          },
                          {
                            "description": "Show an icon and text for the selected element, and icons on the rest",
                            "type": "string",
                            "enum": [
                              "IconAndTextOnSelected"
                            ]
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Workspace Layer widget",
                        "type": "boolean"
                      },
                      "show_when_tiling": {
                        "description": "Show the widget event if the layer is Tiling",
                        "type": "boolean"
                      }
                    }
                  },
                  "workspaces": {
                    "description": "Configure the Workspaces widget",
                    "type": "object",
                    "required": [
                      "enable",
                      "hide_empty_workspaces"
                    ],
                    "properties": {
                      "display": {
                        "description": "Display format of the workspace",
                        "oneOf": [
                          {
                            "description": "Show all icons only",
                            "type": "string",
                            "enum": [
                              "AllIcons"
                            ]
                          },
                          {
                            "description": "Show both all icons and text",
                            "type": "string",
                            "enum": [
                              "AllIconsAndText"
                            ]
                          },
                          {
                            "description": "Show all icons and text for the selected element, and all icons on the rest",
                            "type": "string",
                            "enum": [
                              "AllIconsAndTextOnSelected"
                            ]
                          },
                          {
                            "type": "object",
                            "required": [
                              "Existing"
                            ],
                            "properties": {
                              "Existing": {
                                "oneOf": [
                                  {
                                    "description": "Show only icon",
                                    "type": "string",
                                    "enum": [
                                      "Icon"
                                    ]
                                  },
                                  {
                                    "description": "Show only text",
                                    "type": "string",
                                    "enum": [
                                      "Text"
                                    ]
                                  },
                                  {
                                    "description": "Show an icon and text for the selected element, and text on the rest",
                                    "type": "string",
                                    "enum": [
                                      "TextAndIconOnSelected"
                                    ]
                                  },
                                  {
                                    "description": "Show both icon and text",
                                    "type": "string",
                                    "enum": [
                                      "IconAndText"
                                    ]
                                  },
                                  {
                                    "description": "Show an icon and text for the selected element, and icons on the rest",
                                    "type": "string",
                                    "enum": [
                                      "IconAndTextOnSelected"
                                    ]
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      },
                      "enable": {
                        "description": "Enable the Komorebi Workspaces widget",
                        "type": "boolean"
                      },
                      "hide_empty_workspaces": {
                        "description": "Hide workspaces without any windows",
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Media"
            ],
            "properties": {
              "Media": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "enable": {
                    "description": "Enable the Media widget",
                    "type": "boolean"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Memory"
            ],
            "properties": {
              "Memory": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "auto_select_over": {
                    "description": "Select when the current percentage is over this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Memory widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Network"
            ],
            "properties": {
              "Network": {
                "type": "object",
                "required": [
                  "enable",
                  "show_activity",
                  "show_total_activity"
                ],
                "properties": {
                  "activity_left_padding": {
                    "description": "Characters to reserve for received and transmitted activity",
                    "type": "integer",
                    "format": "uint",
                    "minimum": 0.0
                  },
                  "auto_select": {
                    "description": "Select when the value is over a limit (1MiB is 1048576 bytes (1024*1024))",
                    "type": "object",
                    "properties": {
                      "received_over": {
                        "description": "Select the received data when it's over this value",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                      },
                      "total_received_over": {
                        "description": "Select the total received data when it's over this value",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                      },
                      "total_transmitted_over": {
                        "description": "Select the total transmitted data when it's over this value",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                      },
                      "transmitted_over": {
                        "description": "Select the transmitted data when it's over this value",
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                      }
                    }
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Network widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  },
                  "show_activity": {
                    "description": "Show received and transmitted activity",
                    "type": "boolean"
                  },
                  "show_default_interface": {
                    "description": "Show default interface",
                    "type": "boolean"
                  },
                  "show_total_activity": {
                    "description": "Show total received and transmitted activity",
                    "type": "boolean"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Storage"
            ],
            "properties": {
              "Storage": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "auto_hide_under": {
                    "description": "Hide when the current percentage is under this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "auto_select_over": {
                    "description": "Select when the current percentage is over this value [[1-100]]",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 10 seconds)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Storage widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Time"
            ],
            "properties": {
              "Time": {
                "type": "object",
                "required": [
                  "enable",
                  "format"
                ],
                "properties": {
                  "changing_icon": {
                    "description": "Change the icon depending on the time. The default icon is used between 8:30 and 12:00. (default: false)",
                    "type": "boolean"
                  },
                  "enable": {
                    "description": "Enable the Time widget",
                    "type": "boolean"
                  },
                  "format": {
                    "description": "Set the Time format",
                    "oneOf": [
                      {
                        "description": "Twelve-hour format (with seconds)",
                        "type": "string",
                        "enum": [
                          "TwelveHour"
                        ]
                      },
                      {
                        "description": "Twelve-hour format (without seconds)",
                        "type": "string",
                        "enum": [
                          "TwelveHourWithoutSeconds"
                        ]
                      },
                      {
                        "description": "Twenty-four-hour format (with seconds)",
                        "type": "string",
                        "enum": [
                          "TwentyFourHour"
                        ]
                      },
                      {
                        "description": "Twenty-four-hour format (without seconds)",
                        "type": "string",
                        "enum": [
                          "TwentyFourHourWithoutSeconds"
                        ]
                      },
                      {
                        "description": "Twenty-four-hour format displayed as a binary clock with circles (with seconds) (https://en.wikipedia.org/wiki/Binary_clock)",
                        "type": "string",
                        "enum": [
                          "BinaryCircle"
                        ]
                      },
                      {
                        "description": "Twenty-four-hour format displayed as a binary clock with rectangles (with seconds) (https://en.wikipedia.org/wiki/Binary_clock)",
                        "type": "string",
                        "enum": [
                          "BinaryRectangle"
                        ]
                      },
                      {
                        "description": "Custom format (https://docs.rs/chrono/latest/chrono/format/strftime/index.html)",
                        "type": "object",
                        "required": [
                          "Custom"
                        ],
                        "properties": {
                          "Custom": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    ]
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  },
                  "timezone": {
                    "description": "TimeZone (https://docs.rs/chrono-tz/latest/chrono_tz/enum.Tz.html)\n\nUse a custom format to display additional information, i.e.: ```json { \"Time\": { \"enable\": true, \"format\": { \"Custom\": \"%T %Z (Tokyo)\" }, \"timezone\": \"Asia/Tokyo\" } } ```",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "Update"
            ],
            "properties": {
              "Update": {
                "type": "object",
                "required": [
                  "enable"
                ],
                "properties": {
                  "data_refresh_interval": {
                    "description": "Data refresh interval (default: 12 hours)",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "enable": {
                    "description": "Enable the Update widget",
                    "type": "boolean"
                  },
                  "label_prefix": {
                    "description": "Display label prefix",
                    "oneOf": [
                      {
                        "description": "Show no prefix",
                        "type": "string",
                        "enum": [
                          "None"
                        ]
                      },
                      {
                        "description": "Show an icon",
                        "type": "string",
                        "enum": [
                          "Icon"
                        ]
                      },
                      {
                        "description": "Show text",
                        "type": "string",
                        "enum": [
                          "Text"
                        ]
                      },
                      {
                        "description": "Show an icon and text",
                        "type": "string",
                        "enum": [
                          "IconAndText"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      }
    },
    "theme": {
      "description": "Theme",
      "oneOf": [
        {
          "description": "A theme from catppuccin-egui",
          "type": "object",
          "required": [
            "name",
            "palette"
          ],
          "properties": {
            "accent": {
              "type": "string",
              "enum": [
                "Rosewater",
                "Flamingo",
                "Pink",
                "Mauve",
                "Red",
                "Maroon",
                "Peach",
                "Yellow",
                "Green",
                "Teal",
                "Sky",
                "Sapphire",
                "Blue",
                "Lavender",
                "Text",
                "Subtext1",
                "Subtext0",
                "Overlay2",
                "Overlay1",
                "Overlay0",
                "Surface2",
                "Surface1",
                "Surface0",
                "Base",
                "Mantle",
                "Crust"
              ]
            },
            "auto_select_fill": {
              "type": "string",
              "enum": [
                "Rosewater",
                "Flamingo",
                "Pink",
                "Mauve",
                "Red",
                "Maroon",
                "Peach",
                "Yellow",
                "Green",
                "Teal",
                "Sky",
                "Sapphire",
                "Blue",
                "Lavender",
                "Text",
                "Subtext1",
                "Subtext0",
                "Overlay2",
                "Overlay1",
                "Overlay0",
                "Surface2",
                "Surface1",
                "Surface0",
                "Base",
                "Mantle",
                "Crust"
              ]
            },
            "auto_select_text": {
              "type": "string",
              "enum": [
                "Rosewater",
                "Flamingo",
                "Pink",
                "Mauve",
                "Red",
                "Maroon",
                "Peach",
                "Yellow",
                "Green",
                "Teal",
                "Sky",
                "Sapphire",
                "Blue",
                "Lavender",
                "Text",
                "Subtext1",
                "Subtext0",
                "Overlay2",
                "Overlay1",
                "Overlay0",
                "Surface2",
                "Surface1",
                "Surface0",
                "Base",
                "Mantle",
                "Crust"
              ]
            },
            "name": {
              "description": "Name of the Catppuccin theme (theme previews: https://github.com/catppuccin/catppuccin)",
              "type": "string",
              "enum": [
                "Frappe",
                "Latte",
                "Macchiato",
                "Mocha"
              ]
            },
            "palette": {
              "type": "string",
              "enum": [
                "Catppuccin"
              ]
            }
          }
        },
        {
          "description": "A theme from base16-egui-themes",
          "type": "object",
          "required": [
            "name",
            "palette"
          ],
          "properties": {
            "accent": {
              "type": "string",
              "enum": [
                "Base00",
                "Base01",
                "Base02",
                "Base03",
                "Base04",
                "Base05",
                "Base06",
                "Base07",
                "Base08",
                "Base09",
                "Base0A",
                "Base0B",
                "Base0C",
                "Base0D",
                "Base0E",
                "Base0F"
              ]
            },
            "auto_select_fill": {
              "type": "string",
              "enum": [
                "Base00",
                "Base01",
                "Base02",
                "Base03",
                "Base04",
                "Base05",
                "Base06",
                "Base07",
                "Base08",
                "Base09",
                "Base0A",
                "Base0B",
                "Base0C",
                "Base0D",
                "Base0E",
                "Base0F"
              ]
            },
            "auto_select_text": {
              "type": "string",
              "enum": [
                "Base00",
                "Base01",
                "Base02",
                "Base03",
                "Base04",
                "Base05",
                "Base06",
                "Base07",
                "Base08",
                "Base09",
                "Base0A",
                "Base0B",
                "Base0C",
                "Base0D",
                "Base0E",
                "Base0F"
              ]
            },
            "name": {
              "description": "Name of the Base16 theme (theme previews: https://tinted-theming.github.io/tinted-gallery/)",
              "type": "string",
              "enum": [
                "3024",
                "Apathy",
                "Apprentice",
                "Ashes",
                "AtelierCaveLight",
                "AtelierCave",
                "AtelierDuneLight",
                "AtelierDune",
                "AtelierEstuaryLight",
                "AtelierEstuary",
                "AtelierForestLight",
                "AtelierForest",
                "AtelierHeathLight",
                "AtelierHeath",
                "AtelierLakesideLight",
                "AtelierLakeside",
                "AtelierPlateauLight",
                "AtelierPlateau",
                "AtelierSavannaLight",
                "AtelierSavanna",
                "AtelierSeasideLight",
                "AtelierSeaside",
                "AtelierSulphurpoolLight",
                "AtelierSulphurpool",
                "Atlas",
                "AyuDark",
                "AyuLight",
                "AyuMirage",
                "Aztec",
                "Bespin",
                "BlackMetalBathory",
                "BlackMetalBurzum",
                "BlackMetalDarkFuneral",
                "BlackMetalGorgoroth",
                "BlackMetalImmortal",
                "BlackMetalKhold",
                "BlackMetalMarduk",
                "BlackMetalMayhem",
                "BlackMetalNile",
                "BlackMetalVenom",
                "BlackMetal",
                "Blueforest",
                "Blueish",
                "Brewer",
                "Bright",
                "Brogrammer",
                "BrushtreesDark",
                "Brushtrees",
                "Caroline",
                "CatppuccinFrappe",
                "CatppuccinLatte",
                "CatppuccinMacchiato",
                "CatppuccinMocha",
                "Chalk",
                "Circus",
                "ClassicDark",
                "ClassicLight",
                "Codeschool",
                "Colors",
                "Cupcake",
                "Cupertino",
                "DaOneBlack",
                "DaOneGray",
                "DaOneOcean",
                "DaOnePaper",
                "DaOneSea",
                "DaOneWhite",
                "DanqingLight",
                "Danqing",
                "Darcula",
                "Darkmoss",
                "Darktooth",
                "Darkviolet",
                "Decaf",
                "DefaultDark",
                "DefaultLight",
                "Dirtysea",
                "Dracula",
                "EdgeDark",
                "EdgeLight",
                "Eighties",
                "EmbersLight",
                "Embers",
                "Emil",
                "EquilibriumDark",
                "EquilibriumGrayDark",
                "EquilibriumGrayLight",
                "EquilibriumLight",
                "Eris",
                "Espresso",
                "EvaDim",
                "Eva",
                "EvenokDark",
                "EverforestDarkHard",
                "Everforest",
                "Flat",
                "Framer",
                "FruitSoda",
                "Gigavolt",
                "Github",
                "GoogleDark",
                "GoogleLight",
                "Gotham",
                "GrayscaleDark",
                "GrayscaleLight",
                "Greenscreen",
                "Gruber",
                "GruvboxDarkHard",
                "GruvboxDarkMedium",
                "GruvboxDarkPale",
                "GruvboxDarkSoft",
                "GruvboxLightHard",
                "GruvboxLightMedium",
                "GruvboxLightSoft",
                "GruvboxMaterialDarkHard",
                "GruvboxMaterialDarkMedium",
                "GruvboxMaterialDarkSoft",
                "GruvboxMaterialLightHard",
                "GruvboxMaterialLightMedium",
                "GruvboxMaterialLightSoft",
                "Hardcore",
                "Harmonic16Dark",
                "Harmonic16Light",
                "HeetchLight",
                "Heetch",
                "Helios",
                "Hopscotch",
                "HorizonDark",
                "HorizonLight",
                "HorizonTerminalDark",
                "HorizonTerminalLight",
                "HumanoidDark",
                "HumanoidLight",
                "IaDark",
                "IaLight",
                "Icy",
                "Irblack",
                "Isotope",
                "Jabuti",
                "Kanagawa",
                "Katy",
                "Kimber",
                "Lime",
                "Macintosh",
                "Marrakesh",
                "Materia",
                "MaterialDarker",
                "MaterialLighter",
                "MaterialPalenight",
                "MaterialVivid",
                "Material",
                "MeasuredDark",
                "MeasuredLight",
                "MellowPurple",
                "MexicoLight",
                "Mocha",
                "Monokai",
                "Moonlight",
                "Mountain",
                "Nebula",
                "NordLight",
                "Nord",
                "Nova",
                "Ocean",
                "Oceanicnext",
                "OneLight",
                "OnedarkDark",
                "Onedark",
                "OutrunDark",
                "OxocarbonDark",
                "OxocarbonLight",
                "Pandora",
                "PapercolorDark",
                "PapercolorLight",
                "Paraiso",
                "Pasque",
                "Phd",
                "Pico",
                "Pinky",
                "Pop",
                "Porple",
                "PreciousDarkEleven",
                "PreciousDarkFifteen",
                "PreciousLightWarm",
                "PreciousLightWhite",
                "PrimerDarkDimmed",
                "PrimerDark",
                "PrimerLight",
                "Purpledream",
                "Qualia",
                "Railscasts",
                "Rebecca",
                "RosePineDawn",
                "RosePineMoon",
                "RosePine",
                "Saga",
                "Sagelight",
                "Sakura",
                "Sandcastle",
                "SelenizedBlack",
                "SelenizedDark",
                "SelenizedLight",
                "SelenizedWhite",
                "Seti",
                "ShadesOfPurple",
                "ShadesmearDark",
                "ShadesmearLight",
                "Shapeshifter",
                "SilkDark",
                "SilkLight",
                "Snazzy",
                "SolarflareLight",
                "Solarflare",
                "SolarizedDark",
                "SolarizedLight",
                "Spaceduck",
                "Spacemacs",
                "Sparky",
                "StandardizedDark",
                "StandardizedLight",
                "Stella",
                "StillAlive",
                "Summercamp",
                "SummerfruitDark",
                "SummerfruitLight",
                "SynthMidnightDark",
                "SynthMidnightLight",
                "Tango",
                "Tarot",
                "Tender",
                "TerracottaDark",
                "Terracotta",
                "TokyoCityDark",
                "TokyoCityLight",
                "TokyoCityTerminalDark",
                "TokyoCityTerminalLight",
                "TokyoNightDark",
                "TokyoNightLight",
                "TokyoNightMoon",
                "TokyoNightStorm",
                "TokyoNightTerminalDark",
                "TokyoNightTerminalLight",
                "TokyoNightTerminalStorm",
                "TokyodarkTerminal",
                "Tokyodark",
                "TomorrowNightEighties",
                "TomorrowNight",
                "Tomorrow",
                "Tube",
                "Twilight",
                "UnikittyDark",
                "UnikittyLight",
                "UnikittyReversible",
                "Uwunicorn",
                "Vesper",
                "Vice",
                "Vulcan",
                "Windows10Light",
                "Windows10",
                "Windows95Light",
                "Windows95",
                "WindowsHighcontrastLight",
                "WindowsHighcontrast",
                "WindowsNtLight",
                "WindowsNt",
                "Woodland",
                "XcodeDusk",
                "Zenbones",
                "Zenburn"
              ]
            },
            "palette": {
              "type": "string",
              "enum": [
                "Base16"
              ]
            }
          }
        },
        {
          "description": "A custom Base16 theme",
          "type": "object",
          "required": [
            "colours",
            "palette"
          ],
          "properties": {
            "accent": {
              "type": "string",
              "enum": [
                "Base00",
                "Base01",
                "Base02",
                "Base03",
                "Base04",
                "Base05",
                "Base06",
                "Base07",
                "Base08",
                "Base09",
                "Base0A",
                "Base0B",
                "Base0C",
                "Base0D",
                "Base0E",
                "Base0F"
              ]
            },
            "auto_select_fill": {
              "type": "string",
              "enum": [
                "Base00",
                "Base01",
                "Base02",
                "Base03",
                "Base04",
                "Base05",
                "Base06",
                "Base07",
                "Base08",
                "Base09",
                "Base0A",
                "Base0B",
                "Base0C",
                "Base0D",
                "Base0E",
                "Base0F"
              ]
            },
            "auto_select_text": {
              "type": "string",
              "enum": [
                "Base00",
                "Base01",
                "Base02",
                "Base03",
                "Base04",
                "Base05",
                "Base06",
                "Base07",
                "Base08",
                "Base09",
                "Base0A",
                "Base0B",
                "Base0C",
                "Base0D",
                "Base0E",
                "Base0F"
              ]
            },
            "colours": {
              "description": "Colours of the custom Base16 theme palette",
              "type": "object",
              "required": [
                "base_00",
                "base_01",
                "base_02",
                "base_03",
                "base_04",
                "base_05",
                "base_06",
                "base_07",
                "base_08",
                "base_09",
                "base_0a",
                "base_0b",
                "base_0c",
                "base_0d",
                "base_0e",
                "base_0f"
              ],
              "properties": {
                "base_00": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_01": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_02": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_03": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_04": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_05": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_06": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_07": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_08": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_09": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_0a": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_0b": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_0c": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_0d": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_0e": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                },
                "base_0f": {
                  "anyOf": [
                    {
                      "description": "Colour represented as RGB",
                      "type": "object",
                      "required": [
                        "b",
                        "g",
                        "r"
                      ],
                      "properties": {
                        "b": {
                          "description": "Blue",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "g": {
                          "description": "Green",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        },
                        "r": {
                          "description": "Red",
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0.0
                        }
                      }
                    },
                    {
                      "description": "Colour represented as Hex",
                      "type": "string",
                      "format": "color-hex"
                    }
                  ]
                }
              }
            },
            "palette": {
              "type": "string",
              "enum": [
                "Custom"
              ]
            }
          }
        }
      ]
    },
    "transparency_alpha": {
      "description": "Alpha value for the color transparency [[0-255]] (default: 200)",
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    },
    "widget_spacing": {
      "description": "Spacing between widgets (default: 10.0)",
      "type": "number",
      "format": "float"
    }
  }
}
