# Adapted from https://jondot.medium.com/shipping-rust-binaries-with-goreleaser-d5aa42a46be0
project_name: komorebi

before:
  hooks:
    - powershell.exe -Command "New-Item -Path . -Name dummy.go -ItemType file -Force"
    - powershell.exe -Command "Add-Content -Path .\dummy.go -Value 'package main'"
    - powershell.exe -Command "Add-Content -Path .\dummy.go -Value 'func main() {}'"

builds:
  - id: komorebi
    main: dummy.go
    goos: ["windows"]
    goarch: ["amd64"]
    binary: komorebi
    hooks:
      post:
        - mkdir -p dist/windows_amd64
        - cp ".\target\x86_64-pc-windows-msvc\release\komorebi.exe" ".\dist\komorebi_windows_amd64\komorebi.exe"
  - id: komorebic
    main: dummy.go
    goos: ["windows"]
    goarch: ["amd64"]
    binary: komorebic
    hooks:
      post:
        - mkdir -p dist/windows_amd64
        - cp ".\target\x86_64-pc-windows-msvc\release\komorebic.exe" ".\dist\komorebic_windows_amd64\komorebic.exe"

archives:
  - replacements:
      windows: pc-windows-msvc
      amd64: x86_64
    format: zip
    name_template: "{{ .ProjectName }}-{{ .Version }}-{{ .Arch }}-{{ .Os }}"
    files:
      - LICENSE
      - komorebi.sample.ahk
      - CHANGELOG.md

checksum:
  name_template: checksums.txt

changelog:
  sort: asc

scoop:
  bucket:
    owner: LGUG2Z
    name: komorebi-bucket
    token: "{{ .Env.SCOOP_TOKEN }}"
  homepage: https://github.com/LGUG2Z/komorebi
  description: A tiling window manager for Windows
  license: MIT
  pre_install:
    - if (Get-Process -Name komorebi -ErrorAction SilentlyContinue) { komorebic stop }
  post_install:
    - Write-Host "`nRun 'cp $original_dir\komorebi.sample.ahk $Env:UserProfile\komorebi.ahk' to get started with the sample configuration"
    - Write-Host "`nRun 'komorebic ahk-library' if you would like to generate an AHK helper library to use in your configuration"
    - Write-Host "`nOnce you have a configuration file in place, you can run 'komorebic start' to start the window manager"

publishers:
  - name: chocolatey
    cmd: |
      cp {{ .ArtifactPath }} .\tools\{{ .ArtifactName }}
      choco pack
      choco apikey --key {{ .Env.CHOCO_API_KEY }} --source https://push.chocolatey.org/
      choco push --source https://push.chocolatey.org/
    dir: .\packages\choco
    env:
      - CHOCO_API_KEY={{ .Env.CHOCO_API_KEY }}
